{
    "_id": "8f08d1446e0bb9c2b323713ce83e2bd3",
    "openapi": "3.0.0",
    "info": {
        "contact": {
            "email": "help@biothings.io",
            "name": "Chunlei Wu",
            "x-id": "https://github.com/newgene",
            "x-role": "responsible developer"
        },
        "description": "Documentation of the MyChem.info chem query web services.  Learn more about [MyChem.info](http://MyChem.info/)",
        "termsOfService": "http://MyChem.info/terms",
        "title": "MyChem.info API",
        "version": "1.0",
        "x-translator": {
            "component": "KP",
            "team": [
                "Service Provider"
            ]
        }
    },
    "servers": [
        {
            "description": "Encrypted Production server",
            "url": "https://mychem.info/v1"
        },
        {
            "description": "Production server",
            "url": "http://mychem.info/v1"
        }
    ],
    "tags": [
        {
            "name": "chemical"
        },
        {
            "name": "drug"
        },
        {
            "name": "annotation"
        },
        {
            "name": "query"
        },
        {
            "name": "translator"
        },
        {
            "name": "biothings"
        }
    ],
    "paths": [
        {
            "path": "/chem",
            "pathitem": {
                "post": {
                    "parameters": [
                        {
                            "$ref": "#/components/parameters/dotfield",
                            "name": "dotfield"
                        },
                        {
                            "$ref": "#/components/parameters/fields",
                            "name": "fields"
                        },
                        {
                            "$ref": "#/components/parameters/email",
                            "name": "email"
                        },
                        {
                            "$ref": "#/components/parameters/format",
                            "name": "format"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "properties": {
                                        "ids": {
                                            "description": "multiple chemical IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "ids"
                                    ]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "items": {
                                            "$ref": "#/components/schemas/Chem"
                                        },
                                        "type": "array"
                                    }
                                }
                            },
                            "description": "A list of matching chemical objects"
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ErrorResult"
                                    }
                                }
                            },
                            "description": "A response indicating an improperly formatted query"
                        }
                    },
                    "summary": "For a list of chemical IDs, return the matching chemical object",
                    "tags": [
                        "chemical"
                    ]
                }
            }
        },
        {
            "path": "/chem/{chemid}",
            "pathitem": {
                "get": {
                    "parameters": [
                        {
                            "description": "Retrieve chemical objects based on ID - currently one of: [InChiKey](https://en.wikipedia.org/wiki/International_Chemical_Identifier#InChIKey), [DrugBank accession number](https://www.drugbank.ca/documentation), [ChEMBLID](https://www.ebi.ac.uk/chembl/faq#faq40), [ChEBI identifier](http://www.ebi.ac.uk/chebi/aboutChebiForward.do), [PubChem CID](https://pubchem.ncbi.nlm.nih.gov/search/help_search.html#Cid), [UNII](https://www.fda.gov/ForIndustry/DataStandards/SubstanceRegistrationSystem-UniqueIngredientIdentifierUNII/).  Supports JSONP and CORS as well.",
                            "example": "USNINKBPBVKHHZ-CYUUQNCZSA-L",
                            "in": "path",
                            "name": "chemid",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "$ref": "#/components/parameters/dotfield",
                            "name": "dotfield"
                        },
                        {
                            "$ref": "#/components/parameters/callback",
                            "name": "callback"
                        },
                        {
                            "$ref": "#/components/parameters/fields",
                            "name": "fields"
                        },
                        {
                            "$ref": "#/components/parameters/email",
                            "name": "email"
                        },
                        {
                            "$ref": "#/components/parameters/format",
                            "name": "format"
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Chem"
                                    }
                                }
                            },
                            "description": "A matching chemical object"
                        },
                        "404": {
                            "description": "A response indicating an unknown chemical ID"
                        }
                    },
                    "summary": "Retrieve chemical objects based on ID",
                    "tags": [
                        "chemical"
                    ]
                }
            }
        },
        {
            "path": "/metadata",
            "pathitem": {
                "get": {
                    "parameters": [
                        {
                            "$ref": "#/components/parameters/callback",
                            "in": "query",
                            "name": "callback"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "MyChem.info metadata object"
                        }
                    },
                    "summary": "Get metadata about the data available from MyChem.info",
                    "tags": [
                        "metadata"
                    ]
                }
            }
        },
        {
            "path": "/metadata/fields",
            "pathitem": {
                "get": {
                    "parameters": [
                        {
                            "$ref": "#/components/parameters/search",
                            "name": "search"
                        },
                        {
                            "$ref": "#/components/parameters/callback",
                            "name": "callback"
                        },
                        {
                            "$ref": "#/components/parameters/prefix",
                            "name": "prefix"
                        },
                        {
                            "$ref": "#/components/parameters/format",
                            "name": "format"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "MyChem.info metadata fields object"
                        }
                    },
                    "summary": "Get metadata about the data fields available from a MyChem.info chem object",
                    "tags": [
                        "metadata"
                    ]
                }
            }
        },
        {
            "path": "/query",
            "pathitem": {
                "get": {
                    "parameters": [
                        {
                            "description": "Query string.  The detailed query syntax can be found from our [docs](http://MyChem.info).  Examples: \"Fludara\", \"CHEMBI:63599\", \"DB01073\".",
                            "example": "Fludara",
                            "in": "query",
                            "name": "q",
                            "required": true,
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "$ref": "#/components/parameters/dotfield",
                            "name": "dotfield"
                        },
                        {
                            "$ref": "#/components/parameters/fields",
                            "name": "fields"
                        },
                        {
                            "$ref": "#/components/parameters/facet_size",
                            "name": "facet_size"
                        },
                        {
                            "$ref": "#/components/parameters/sort",
                            "name": "sort"
                        },
                        {
                            "$ref": "#/components/parameters/callback",
                            "name": "callback"
                        },
                        {
                            "$ref": "#/components/parameters/email",
                            "name": "email"
                        },
                        {
                            "$ref": "#/components/parameters/facets",
                            "name": "facets"
                        },
                        {
                            "$ref": "#/components/parameters/size",
                            "name": "size"
                        },
                        {
                            "$ref": "#/components/parameters/from",
                            "name": "from"
                        },
                        {
                            "$ref": "#/components/parameters/format",
                            "name": "format"
                        }
                    ],
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/QueryResult"
                                    }
                                }
                            },
                            "description": "A query response with the \"hits\" property"
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ErrorResult"
                                    }
                                }
                            },
                            "description": "A response indicating an improperly formatted query"
                        }
                    },
                    "summary": "Make chemical queries and return matching chemical hits. Supports JSONP and CORS as well.",
                    "tags": [
                        "query"
                    ]
                },
                "post": {
                    "parameters": [
                        {
                            "$ref": "#/components/parameters/dotfield",
                            "name": "dotfield"
                        },
                        {
                            "$ref": "#/components/parameters/email",
                            "name": "email"
                        },
                        {
                            "$ref": "#/components/parameters/fields",
                            "name": "fields"
                        },
                        {
                            "$ref": "#/components/parameters/size",
                            "name": "size"
                        },
                        {
                            "$ref": "#/components/parameters/format",
                            "name": "format"
                        }
                    ],
                    "requestBody": {
                        "content": {
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "properties": {
                                        "q": {
                                            "description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries",
                                            "type": "string"
                                        },
                                        "scopes": {
                                            "description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/QueryPOSTResult"
                                    }
                                }
                            },
                            "description": "Query response objects with the \"hits\" property"
                        },
                        "400": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/ErrorResult"
                                    }
                                }
                            },
                            "description": "A response indicating an improperly formatted query"
                        }
                    },
                    "summary": "Make batch chemical queries and return matching chemical hits",
                    "tags": [
                        "query"
                    ],
                    "x-bte-kgs-operations": [
                        {
                            "$ref": "#/components/x-bte-kgs-operations/metabolizedBy"
                        },
                        {
                            "$ref": "#/components/x-bte-kgs-operations/target"
                        },
                        {
                            "$ref": "#/components/x-bte-kgs-operations/treats"
                        },
                        {
                            "$ref": "#/components/x-bte-kgs-operations/contraindication"
                        },
                        {
                            "$ref": "#/components/x-bte-kgs-operations/metabolize"
                        },
                        {
                            "$ref": "#/components/x-bte-kgs-operations/targetedBy"
                        },
                        {
                            "$ref": "#/components/x-bte-kgs-operations/treatedBy"
                        },
                        {
                            "$ref": "#/components/x-bte-kgs-operations/contraindicatedBy"
                        }
                    ]
                }
            }
        }
    ],
    "components": {
        "parameters": {
            "callback": {
                "description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.",
                "in": "query",
                "name": "callback",
                "schema": {
                    "type": "string"
                }
            },
            "dotfield": {
                "description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.",
                "in": "query",
                "name": "dotfield",
                "schema": {
                    "type": "boolean"
                }
            },
            "email": {
                "description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.",
                "in": "query",
                "name": "email",
                "schema": {
                    "type": "string"
                }
            },
            "facet_size": {
                "description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.",
                "in": "query",
                "name": "facet_size",
                "schema": {
                    "type": "integer"
                }
            },
            "facets": {
                "description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.",
                "in": "query",
                "name": "facets",
                "schema": {
                    "type": "string"
                }
            },
            "fields": {
                "description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.",
                "in": "query",
                "name": "fields",
                "schema": {
                    "type": "string"
                }
            },
            "format": {
                "description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.",
                "in": "query",
                "name": "format",
                "schema": {
                    "type": "string"
                }
            },
            "from": {
                "description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.",
                "in": "query",
                "name": "from",
                "schema": {
                    "type": "integer"
                }
            },
            "prefix": {
                "description": "Pass a prefix string to filter the available fields. Type: string. Default: None.",
                "in": "query",
                "name": "prefix",
                "schema": {
                    "type": "string"
                }
            },
            "search": {
                "description": "Pass a search term to filter the available fields. Type: string. Default: None.",
                "in": "query",
                "name": "search",
                "schema": {
                    "type": "string"
                }
            },
            "size": {
                "description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.",
                "in": "query",
                "name": "size",
                "schema": {
                    "type": "integer"
                }
            },
            "sort": {
                "description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.",
                "in": "query",
                "name": "sort",
                "schema": {
                    "type": "string"
                }
            }
        },
        "schemas": {
            "Chem": {
                "properties": {
                    "_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "_id"
                ],
                "type": "object"
            },
            "ErrorResult": {
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "QueryPOSTResult": {
                "items": {
                    "allOf": [
                        {
                            "$ref": "#/components/schemas/Chem"
                        },
                        {
                            "properties": {
                                "_score": {
                                    "format": "float",
                                    "type": "number"
                                },
                                "query": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "type": "array"
            },
            "QueryResult": {
                "properties": {
                    "hits": {
                        "items": {
                            "$ref": "#/components/schemas/Chem"
                        },
                        "type": "array"
                    },
                    "max_score": {
                        "format": "float",
                        "type": "number"
                    },
                    "took": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "int64_or_array": {
                "oneOf": [
                    {
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    {
                        "format": "int64",
                        "type": "integer"
                    }
                ]
            },
            "string_or_array": {
                "oneOf": [
                    {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    {
                        "type": "string"
                    }
                ]
            }
        },
        "x-bte-response-mapping": {
            "metabolizedBy": {
                "name": "drugbank.enzymes.name",
                "SYMBOL": "drugbank.enzymes.gene_name",
                "function": "drugbank.enzymes.general_function",
                "action": "drugbank.enzymes.actions"
            },
            "target-drugbank": {
                "name": "drugbank.targets.name",
                "SYMBOL": "drugbank.targets.gene_name",
                "function": "drugbank.targets.general_function",
                "action": "drugbank.targets.actions",
                "pubmed": "drugbank.targets.pmids"
            },
            "target-drugcentral": {
                "name": "drugcentral.bioactivity.target_name",
                "SYMBOL": "drugcentral.bioactivity.uniprot.gene_symbol",
                "action": "drugcentral.bioactivity.action_type"
            },
            "treats": {
                "name": "drugcentral.drug_use.indication.concept_name",
                "SNOMED": "drugcentral.drug_use.indication.snomed_concept_id",
                "UMLS": "drugcentral.drug_use.indication.umls_cui"
            },
            "contraindication": {
                "name": "drugcentral.drug_use.contraindication.concept_name",
                "SNOMED": "drugcentral.drug_use.contraindication.snomed_concept_id",
                "UMLS": "drugcentral.drug_use.contraindication.umls_cui"
            },
            "drugbank": {
                "DRUGBANK": "drugbank.id"
            },
            "chembl": {
                "CHEMBL.COMPOUND": "chembl.molecule_chembl_id"
            }
        },
        "x-bte-kgs-operations": {
            "metabolizedBy": [
                {
                    "supportBatch": true,
                    "inputSeparator": ",",
                    "parameters": {
                        "fields": "drugbank.enzymes"
                    },
                    "requestBody": {
                        "body": {
                            "q": "{inputs[0]}",
                            "scopes": "drugbank.id"
                        },
                        "header": "application/x-www-form-urlencoded"
                    },
                    "inputs": [
                        {
                            "id": "DRUGBANK",
                            "semantic": "ChemicalSubstance"
                        }
                    ],
                    "predicate": "metabolic_processing_affected_by",
                    "source": "drugbank",
                    "outputs": [
                        {
                            "id": "SYMBOL",
                            "semantic": "Gene"
                        }
                    ],
                    "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/metabolizedBy"
                    }
                }
            ],
            "target": [
                {
                    "supportBatch": true,
                    "inputSeparator": ",",
                    "parameters": {
                        "fields": "drugbank.targets"
                    },
                    "requestBody": {
                        "body": {
                            "q": "{inputs[0]}",
                            "scopes": "drugbank.id"
                        },
                        "header": "application/x-www-form-urlencoded"
                    },
                    "inputs": [
                        {
                            "id": "DRUGBANK",
                            "semantic": "ChemicalSubstance"
                        }
                    ],
                    "outputs": [
                        {
                            "id": "SYMBOL",
                            "semantic": "Gene"
                        }
                    ],
                    "predicate": "physically_interacts_with",
                    "source": "drugbank",
                    "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/target-drugbank"
                    }
                },
                {
                    "supportBatch": true,
                    "inputSeparator": ",",
                    "parameters": {
                        "fields": "drugcentral.bioactivity"
                    },
                    "requestBody": {
                        "body": {
                            "q": "{inputs[0]}",
                            "scopes": "chembl.molecule_chembl_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                    },
                    "inputs": [
                        {
                            "id": "CHEMBL.COMPOUND",
                            "semantic": "ChemicalSubstance"
                        }
                    ],
                    "outputs": [
                        {
                            "id": "SYMBOL",
                            "semantic": "Gene"
                        }
                    ],
                    "predicate": "physically_interacts_with",
                    "source": "drugcentral",
                    "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/target-drugcentral"
                    }
                }
            ],
            "treats": [
                {
                    "supportBatch": true,
                    "inputSeparator": ",",
                    "parameters": {
                        "fields": "drugcentral.drug_use.indication"
                    },
                    "requestBody": {
                        "body": {
                            "q": "{inputs[0]}",
                            "scopes": "chembl.molecule_chembl_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                    },
                    "inputs": [
                        {
                            "id": "CHEMBL.COMPOUND",
                            "semantic": "ChemicalSubstance"
                        }
                    ],
                    "outputs": [
                        {
                            "id": "UMLS",
                            "semantic": "Disease"
                        }
                    ],
                    "predicate": "treats",
                    "source": "drugcentral",
                    "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/treats"
                    }
                }
            ],
            "contraindication": [
                {
                    "supportBatch": true,
                    "inputSeparator": ",",
                    "parameters": {
                        "fields": "drugcentral.drug_use.contraindication"
                    },
                    "requestBody": {
                        "body": {
                            "q": "{inputs[0]}",
                            "scopes": "chembl.molecule_chembl_id"
                        },
                        "header": "application/x-www-form-urlencoded"
                    },
                    "inputs": [
                        {
                            "id": "CHEMBL.COMPOUND",
                            "semantic": "ChemicalSubstance"
                        }
                    ],
                    "outputs": [
                        {
                            "id": "UMLS",
                            "semantic": "Disease"
                        }
                    ],
                    "predicate": "contraindication",
                    "source": "drugcentral",
                    "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/contraindication"
                    }
                }
            ],
            "metabolize": [
                {
                    "supportBatch": true,
                    "inputSeparator": ",",
                    "parameters": {
                        "fields": "drugbank.id",
                        "size": "250"
                    },
                    "requestBody": {
                        "body": {
                            "q": "{inputs[0]}",
                            "scopes": "drugbank.enzymes.gene_name"
                        },
                        "header": "application/x-www-form-urlencoded"
                    },
                    "outputs": [
                        {
                            "id": "DRUGBANK",
                            "semantic": "ChemicalSubstance"
                        }
                    ],
                    "predicate": "metabolize",
                    "source": "drugbank",
                    "inputs": [
                        {
                            "id": "SYMBOL",
                            "semantic": "Gene"
                        }
                    ],
                    "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/drugbank"
                    }
                }
            ],
            "targetedBy": [
                {
                    "supportBatch": true,
                    "inputSeparator": ",",
                    "parameters": {
                        "fields": "drugbank.id",
                        "size": "250"
                    },
                    "requestBody": {
                        "body": {
                            "q": "{inputs[0]}",
                            "scopes": "drugbank.targets.gene_name"
                        },
                        "header": "application/x-www-form-urlencoded"
                    },
                    "outputs": [
                        {
                            "id": "DRUGBANK",
                            "semantic": "ChemicalSubstance"
                        }
                    ],
                    "inputs": [
                        {
                            "id": "SYMBOL",
                            "semantic": "Gene"
                        }
                    ],
                    "predicate": "physically_interacts_with",
                    "source": "drugbank",
                    "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/drugbank"
                    }
                },
                {
                    "supportBatch": true,
                    "inputSeparator": ",",
                    "parameters": {
                        "fields": "chembl.molecule_chembl_id",
                        "size": "250"
                    },
                    "requestBody": {
                        "body": {
                            "q": "{inputs[0]}",
                            "scopes": "drugcentral.bioactivity.uniprot.gene_symbol"
                        },
                        "header": "application/x-www-form-urlencoded"
                    },
                    "outputs": [
                        {
                            "id": "CHEMBL.COMPOUND",
                            "semantic": "ChemicalSubstance"
                        }
                    ],
                    "inputs": [
                        {
                            "id": "SYMBOL",
                            "semantic": "Gene"
                        }
                    ],
                    "predicate": "physically_interacts_with",
                    "source": "drugcentral",
                    "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chembl"
                    }
                }
            ],
            "treatedBy": [
                {
                    "supportBatch": true,
                    "inputSeparator": ",",
                    "parameters": {
                        "fields": "chembl.molecule_chembl_id",
                        "size": "250"
                    },
                    "requestBody": {
                        "body": {
                            "q": "{inputs[0]}",
                            "scopes": "drugcentral.drug_use.indication.umls_cui"
                        },
                        "header": "application/x-www-form-urlencoded"
                    },
                    "outputs": [
                        {
                            "id": "CHEMBL.COMPOUND",
                            "semantic": "ChemicalSubstance"
                        }
                    ],
                    "inputs": [
                        {
                            "id": "UMLS",
                            "semantic": "Disease"
                        }
                    ],
                    "predicate": "treated_by",
                    "source": "drugcentral",
                    "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chembl"
                    }
                }
            ],
            "contraindicatedBy": [
                {
                    "supportBatch": true,
                    "inputSeparator": ",",
                    "parameters": {
                        "fields": "chembl.molecule_chembl_id",
                        "size": "250"
                    },
                    "requestBody": {
                        "body": {
                            "q": "{inputs[0]}",
                            "scopes": "drugcentral.drug_use.contraindication.umls_cui"
                        },
                        "header": "application/x-www-form-urlencoded"
                    },
                    "outputs": [
                        {
                            "id": "CHEMBL.COMPOUND",
                            "semantic": "ChemicalSubstance"
                        }
                    ],
                    "inputs": [
                        {
                            "id": "UMLS",
                            "semantic": "Disease"
                        }
                    ],
                    "predicate": "contraindicated_by",
                    "source": "drugcentral",
                    "response_mapping": {
                        "$ref": "#/components/x-bte-response-mapping/chembl"
                    }
                }
            ]
        }
    },
    "_meta": {
        "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mychem.info/openapi_full.yml",
        "timestamp": "2021-01-30T03:12:06.031957+00:00",
        "username": "tester",
        "slug": "mychem"
    },
    "_raw": "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"
}