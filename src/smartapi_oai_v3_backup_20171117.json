[
  {
    "tags": [
      {
        "x-id": "http://purl.bioontology.org/ontology/MESH/D016907",
        "name": "Adverse Drug Reaction Reporting Systems"
      }
    ],
    "x-externalResources": [
      {
        "x-type": "api documentation",
        "x-url": "http://ec2-54-186-230-27.us-west-2.compute.amazonaws.com:8080/swagger-ui.html"
      },
      {
        "x-type": "publication",
        "x-description": "A curated and standardized adverse drug event resource to accelerate drug safety research",
        "x-url": "https://doi.org/10.1038/sdata.2016.26"
      },
      {
        "x-type": "social media",
        "x-url": "https://twitter.com/drjmbanda"
      }
    ],
    "_meta": {
      "github_username": "jmbanda",
      "timestamp": "2017-09-27T14:33:09.438777",
      "url": "https://raw.githubusercontent.com/jmbanda/biohack2017_smartAPI/master/AEOLUSsrsAPI-v1.0.json"
    },
    "servers": [
      {
        "variables": {
          "basePath": {
            "default": "v3"
          },
          "port": {
            "enum": [
              "8080"
            ],
            "default": "8080"
          }
        },
        "x-location": "California, USA",
        "url": "http://ec2-54-186-230-27.us-west-2.compute.amazonaws.com:8080/{basePath}",
        "description": "Development server"
      }
    ],
    "externalDocs": {
      "url": "http://ec2-54-186-230-27.us-west-2.compute.amazonaws.com:8080/swagger-ui.html",
      "description": "Find more info here"
    },
    "openapi": "3.0.0",
    "_id": "48a39f7fb04ea9c5e850264a38113f12",
    "paths": [
      {
        "path": "/RORCodes",
        "pathitem": {
          "get": {
            "tags": [
              "reportingOddsRatio"
            ],
            "responses": {
              "200": {
                "x-JSONLDContext": "http://www.w3.org/ns/anno.jsonld",
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "pprStatistics": {
                            "properties": {
                              "casecount": {
                                "type": "integer"
                              },
                              "upperCI": {
                                "format": "float",
                                "type": "string"
                              },
                              "ror": {
                                "format": "float",
                                "type": "string"
                              },
                              "lowerCI": {
                                "format": "float",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "array"
                    }
                  }
                },
                "x-responseSchema": "http://www.w3.org/ns/anno.jsonld",
                "description": "Successful response"
              }
            },
            "operationId": "rorCodes",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://purl.bioontology.org/ontology/RXNORM/"
                ],
                "name": "drugCode",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "RxNorm drug code for search"
              },
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/snomedct"
                ],
                "name": "outcomeCode",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "SNOMEDCT outcome code for search"
              }
            ],
            "x-accessRestriction": "none",
            "summary": "Uses drug and outcome codes in RxNorm and SNOMEDCT respectively to search AEOLUS and return the ROR, 95% confidence intervals and case count.",
            "description": "Returns the Reporting Odds Ratio (ROR) for the drug/outcome coded query as well as the lower and upper 95% confidence intervals and the case count.Calculations are made following [Gavali, D. K., Kulkarni, K. S., Kumar, A. & Chakraborty, B. S. Therapeutic class-specific signal detection of bradycardia associated with propranolol hydrochloride. Indian Journal of Pharmacology 41, 162\u2013166 (2009).](http://www.ijp-online.com/text.asp?2009/41/4/162/56068)"
          }
        }
      },
      {
        "path": "/PPRCodes",
        "pathitem": {
          "get": {
            "tags": [
              "proportionalReportingRatio"
            ],
            "responses": {
              "200": {
                "x-JSONLDContext": "http://www.w3.org/ns/anno.jsonld",
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "pprStatistics": {
                            "properties": {
                              "casecount": {
                                "type": "integer"
                              },
                              "upperCI": {
                                "format": "float",
                                "type": "string"
                              },
                              "ppr": {
                                "format": "float",
                                "type": "string"
                              },
                              "lowerCI": {
                                "format": "float",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "array"
                    }
                  }
                },
                "x-responseSchema": "http://www.w3.org/ns/anno.jsonld",
                "description": "Successful response"
              }
            },
            "operationId": "pprCodes",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://purl.bioontology.org/ontology/RXNORM/"
                ],
                "name": "drugCode",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "RxNorm drug code for search"
              },
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/snomedct"
                ],
                "name": "outcomeCode",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "SNOMEDCT outcome code for search"
              }
            ],
            "x-accessRestriction": "none",
            "summary": "Uses drug and outcome codes in RxNorm and SNOMEDCT respectively to search AEOLUS and return the PPR, 95% confidence intervals and case count.",
            "description": "Returns the Proportional Reporting Ratio (PPR) for the drug/outcome coded query as well as the lower and upper 95% confidence intervals and the case count. Calculations are made following [Gavali, D. K., Kulkarni, K. S., Kumar, A. & Chakraborty, B. S. Therapeutic class-specific signal detection of bradycardia associated with propranolol hydrochloride. Indian Journal of Pharmacology 41, 162\u2013166 (2009).](http://www.ijp-online.com/text.asp?2009/41/4/162/56068)"
          }
        }
      },
      {
        "path": "/PPRNames",
        "pathitem": {
          "get": {
            "tags": [
              "proportionalReportingRatio"
            ],
            "responses": {
              "200": {
                "x-JSONLDContext": "http://www.w3.org/ns/anno.jsonld",
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "pprStatistics": {
                            "properties": {
                              "casecount": {
                                "type": "integer"
                              },
                              "upperCI": {
                                "format": "float",
                                "type": "string"
                              },
                              "ppr": {
                                "format": "float",
                                "type": "string"
                              },
                              "lowerCI": {
                                "format": "float",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "array"
                    }
                  }
                },
                "x-responseSchema": "http://www.w3.org/ns/anno.jsonld",
                "description": "Successful response"
              }
            },
            "operationId": "pprNames",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://purl.bioontology.org/ontology/RXNORM/"
                ],
                "name": "drugName",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "RxNorm drug name for search"
              },
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/snomedct"
                ],
                "name": "outcomeName",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "SNOMEDCT outcome name for search"
              }
            ],
            "x-accessRestriction": "none",
            "summary": "Uses drug and outcome names in RxNorm and SNOMEDCT respectively to search AEOLUS and return the PPR, 95% confidence intervals and case count.",
            "description": "Returns the Proportional Reporting Ratio (PPR) for the drug/outcome named query as well as the lower and upper 95% confidence intervals and the case count. Calculations are made following [Gavali, D. K., Kulkarni, K. S., Kumar, A. & Chakraborty, B. S. Therapeutic class-specific signal detection of bradycardia associated with propranolol hydrochloride. Indian Journal of Pharmacology 41, 162\u2013166 (2009).](http://www.ijp-online.com/text.asp?2009/41/4/162/56068)"
          }
        }
      },
      {
        "path": "/contingencyTableCodes",
        "pathitem": {
          "get": {
            "tags": [
              "contingencyTable"
            ],
            "responses": {
              "200": {
                "x-JSONLDContext": "http://www.w3.org/ns/anno.jsonld",
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "contingencyTable": {
                            "properties": {
                              "b": {
                                "type": "integer"
                              },
                              "a": {
                                "type": "integer"
                              },
                              "c": {
                                "type": "integer"
                              },
                              "d": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "array"
                    }
                  }
                },
                "x-responseSchema": "http://www.w3.org/ns/anno.jsonld",
                "description": "Successful response"
              }
            },
            "operationId": "contingencyTableCodes",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://purl.bioontology.org/ontology/RXNORM/"
                ],
                "name": "drugCode",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "RxNorm drug code for search"
              },
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/snomedct"
                ],
                "name": "outcomeCode",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "SNOMEDCT outcome code for search"
              }
            ],
            "x-accessRestriction": "none",
            "summary": "Uses drug and outcome codes in RxNorm and SNOMEDCT respectively to search AEOLUS and produce the corresponding contingency table.",
            "description": "Makes drug/outcome coded query and returns two by two contingency table."
          }
        }
      },
      {
        "path": "/contingencyTableNames",
        "pathitem": {
          "get": {
            "tags": [
              "contingencyTable"
            ],
            "responses": {
              "200": {
                "x-JSONLDContext": "http://www.w3.org/ns/anno.jsonld",
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "contingencyTable": {
                            "properties": {
                              "b": {
                                "type": "integer"
                              },
                              "a": {
                                "type": "integer"
                              },
                              "c": {
                                "type": "integer"
                              },
                              "d": {
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "array"
                    }
                  }
                },
                "x-responseSchema": "http://www.w3.org/ns/anno.jsonld",
                "description": "Successful response"
              }
            },
            "operationId": "contingencyTableNames",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://purl.bioontology.org/ontology/RXNORM/"
                ],
                "name": "drugName",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "RxNorm-standard drug name for search"
              },
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/snomedct"
                ],
                "name": "outcomeName",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "SNOMEDCT-standard outcome name for search"
              }
            ],
            "x-accessRestriction": "none",
            "summary": "Uses drug and outcome names in RxNorm and SNOMEDCT respectively to search AEOLUS and produce the corresponding contingency table.",
            "description": "Makes drug/outcome coded query and returns two by two contingency table."
          }
        }
      },
      {
        "path": "/RORNames",
        "pathitem": {
          "get": {
            "tags": [
              "reportingOddsRatio"
            ],
            "responses": {
              "200": {
                "x-JSONLDContext": "http://www.w3.org/ns/anno.jsonld",
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "pprStatistics": {
                            "properties": {
                              "casecount": {
                                "type": "integer"
                              },
                              "upperCI": {
                                "format": "float",
                                "type": "string"
                              },
                              "ror": {
                                "format": "float",
                                "type": "string"
                              },
                              "lowerCI": {
                                "format": "float",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "array"
                    }
                  }
                },
                "x-responseSchema": "http://www.w3.org/ns/anno.jsonld",
                "description": "Successful response"
              }
            },
            "operationId": "rorNames",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://purl.bioontology.org/ontology/RXNORM/"
                ],
                "name": "drugName",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "RxNorm drug name for search"
              },
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/snomedct"
                ],
                "name": "outcomeName",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "SNOMEDCT outcome name for search"
              }
            ],
            "x-accessRestriction": "none",
            "summary": "Uses drug and outcome names in RxNorm and SNOMEDCT respectively to search AEOLUS and return the ROR, 95% confidence intervals and case count.",
            "description": "Returns the Reporting Odds Ratio (ROR) for the drug/outcome named query as well as the lower and upper 95% confidence intervals and the case count.Calculations are made following [Gavali, D. K., Kulkarni, K. S., Kumar, A. & Chakraborty, B. S. Therapeutic class-specific signal detection of bradycardia associated with propranolol hydrochloride. Indian Journal of Pharmacology 41, 162\u2013166 (2009).](http://www.ijp-online.com/text.asp?2009/41/4/162/56068)"
          }
        }
      }
    ],
    "info": {
      "contact": {
        "x-role": "responsible developer",
        "x-id": "http://orcid.org/0000-0001-8499-824X",
        "name": "Juan M. Banda",
        "email": "jmbanda@stanford.edu"
      },
      "version": "1.0.0",
      "x-implementationLanguage": "PHP",
      "termsOfService": "http://tsing.cm/terms/",
      "x-maturity": "development",
      "title": "AEOLUsrs API",
      "description": "Documentation of the A curated and standardized adverse drug event resource to accelerate drug safety research (AEOLUS) web query services. Learn more about the underlying dataset [HERE](https://www.nature.com/articles/sdata201626)"
    },
    "components": {
      "schemas": {
        "Category": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "Tag": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      }
    },
    "~raw": "H4sIABUZzFkC_-1ZbU_bSBD-KytLdwIptpNAU-iXOwrclRZIlFCpEseHjb1Jltq77r4QUtT_fjO7TjAktFAgVdsgoSTe2ZeZeeZ5xvZVUFAz0sErchXE3XZ3V6bM_xoy4z4vQ5okTOsu00bxxHAp4HogpGBBjQRgniheTC93mbFKaGJGjHRZIZXhYkjaaapJl4IRWYNN1slAKmeSKjuMpTWJzBlJYO-UfLJMTQjVZMyyDD_RLpNjpggVKbFFAd-2X_wB5mLAUyYSRrgwTF3QTDsTnJBQjQtaYaJdmiU2w83hXFQxktOUwQkyWBQPd_ovham8RvYi8i6qkXc2-0iVgAvvItJzF3KqamQnIn-S3RH9qGgf_JrUyGscJycjpmjBrOEJSTKqdagLlvAB_NR8KGhGUmaYCxyRA9JXNJ0kVKWcgndaJpwacHvMzYgUShaKCpnJjIwmqZLJKJMKnIzIgYAJgryVEF5YEhbqjKjKaQLGwwnZbNRIo9X8zzbrjY1Gq0XWmvX69np0tjYypngVx-PxOOLnRShFxgWLIOCxYZcmorr4C03jzUa8GcMS8YtWvbW1jrktqKI5nF0hIk6v5nJ9eSxV7nLocueyqhlVyQhnK_bJcsVSMDXKMrgiYDWciDMQaGilkxHLqUOamRRuGHEmhsEXGL0MITWWnfiR06B0prAqi_pcSmGc-5FUAKPyR9z9cNzuHsXBGSzA3UkdpgK33syncs3gQBTWdKZXcdc5R3vH7aP9vd0TUkXqvb0tJz3KYcS5AUhBKpyvWsCKaWK-00ecJaGOXFEc4JkDJZWvfRgydOgyDk6VFYwF7OrXbahtDhUxwWnvNdMeAVh51fhoqEpSQgTHZkFUDOvD8AuWTYiRZQzJzn778H3PmSpHIp5D2t3a16u9Uuk-D7qAQi9JDJDtPm8n1DpKG9iMTO195Ka_etMkBZXyGW-42AsdUyFkdK6hllI_722vfXy4twsQhJq677QEzYVnWVoUGU9cPmK0cBcXQIUqRV2WuWG59xFJg0GWSpeLQvUMLKSBj_SNubJ_DnF3hX1zCuR-ER7BEDCeU-fQIJPwBSGKAXfxvjEHkzL09RM4tt49eMCajtXvP6PyB8Nxp_OkutWB6CDsJRLttYiV-gWbLVe_yErAVgK2ErBvCRjw3ryAFZVSnlXyDxEyoI2VkD23kD2HNMExlilkxwDxHy1kWPgrIftJhQyT9yAhQ8T9tEL2IG_LSY9yeClC5kngKYUMQ7ASspWQLUnIMJBgCuCYnNB-xh57e3ZEP5aoXny3NYMoqNRYkv7EfVROQQweI1rdFPxeNwWLcVgl1tsWS7kvgGpPLfCma5Ck8hyXYgu0GLK_PYXOZeleLErvZM_0zpHkzpH-4pFvMN9j-_mlM1-oDSwKXfFv1E5e-_wL95WLkfl4Lnxka7niwl-WC7vtJ32c8dD3yc_0GGP1FGP1FGP1FOMe75PnBeZ73yc_3dOL1fvk1fvkrz69-OKhLGjB0WAjqkd1Fx8xkItSvycTm0PU6ZSPEWU7JLHK0TAiatpc8s94Ib2AovNKRdgFzETIAAtjCyQJamOGhVRaaDpgZoImHtVrHtbroGb9Uto0gJcD_CJyCDaC5BI0CSTFGncWK1KmsgkqU0oNxNqQ0zf73X3P5LoElaBQIp7GKSQyyZiONdoD_7earfUpvmgyVXGeVnApVcJTB8s6_IXw3wi3Nre3w63m5oeyFKRrVaYFxaFzASGDokXooAlAk2docZ73MWB_Y9wgVWnEUhtUCPCtBeE6ishrtHLphvrNdXvQ85GonMto8DtKUJvAIsZVMPxl7hrT5F6GOfrPjeOg8lSYVcde3PiTu9BrpclO58DP4nmRsVn2D6kYWjp0tp03HX-ykvrmIvZ1yTna772J9yD02_WXVdd3SvTsITa6jPou4Lox6k20q2PHyAiMmdbCdpXdWdIMX2yGja1W2Nyoh82XkdXhGDqysIkYAHZnEc3pZynoWOOVV1v1rXp81Qf8dKgZfVnQqu1dh434rX2QMul5CG2gd-KQUsFpjbzv7bh8UMWxjfXUMd2gLLUBtZkr1IsN_wwT_Lw9hCdz-BE2dyrjLpxBKZ-5_YFBmXKPzX2ZzfLxJCHRYzoEngotj0Ymz7zLM3YtOEmrBOHbgRtbYwWmkrv8N-pRo76x5SsvwtKLmq2bSxa2PyV2P3ArC89GPXcc3UCjCfF1zJGqsnRvHtn1pBmBBoNTj8xpSoA8fdqfKxW3gvMPh5g4fkQ6J9BoMy9BsCjcfwijKzrpv5_Q4f1Ejy--j7ohN3Cxtel2LAt6vmdzArQLSRhK1xEtc2f4-x9VCJJLECwAAA=="
  },
  {
    "tags": [
      {
        "name": "chemical"
      },
      {
        "name": "drug"
      },
      {
        "name": "annotation"
      },
      {
        "name": "query"
      },
      {
        "name": "translator"
      }
    ],
    "_id": "8f08d1446e0bb9c2b323713ce83e2bd3",
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-09-27T14:33:09.765961",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mychem.info/openapi_full.yml"
    },
    "paths": [
      {
        "path": "/query",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mychem.info/jsonld_context/mychem_query_1.1.json",
                "x-responseValueType": [
                  {
                    "path": "_id",
                    "valueType": "http://identifiers.org/inchikey/"
                  },
                  {
                    "path": "cadd.gene.genename",
                    "valueType": "http://identifiers.org/uniprot/"
                  },
                  {
                    "path": "clinvar.rsid",
                    "valueType": "http://identifiers.org/drugbank/"
                  },
                  {
                    "path": "cadd.gene.gene_id",
                    "valueType": "http://identifiers.org/dbsnp/"
                  },
                  {
                    "path": "cadd.gene.feature_id",
                    "valueType": "http://identifiers.org/pubmed/"
                  },
                  {
                    "path": "cadd.gene.ccds_id",
                    "valueType": "http://identifiers.org/clinicaltrials/"
                  },
                  {
                    "path": "clinvar.uniprot",
                    "valueType": "http://identifiers.org/rxcui/"
                  }
                ],
                "description": "A query response object with \"hits\" property"
              }
            },
            "summary": "Make chemical query and return matching chemical hits",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/rxcui/",
                  "http://identifiers.org/chebi/",
                  "http://identifiers.org/chembl/",
                  "http://identifiers.org/drugbank/",
                  "http://identifiers.org/iuphar.ligand/",
                  "http://identifiers.org/kegg.drug/",
                  "http://identifiers.org/kegg.compound/",
                  "http://identifiers.org/pubchem.compound/",
                  "http://identifiers.org/unii/",
                  "http://identifiers.org/inchikey/",
                  "http://identifiers.org/inchi/",
                  "http://identifiers.org/uniprot/"
                ],
                "name": "q",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/rxcui/",
                    "template": "aeolus.rxcui:{{input}} OR drugcentral.xref.rxnorm:{{input}} OR ginas.xrefs.RXCUI:{{input}} OR pharmgkb.external_vocabulary.rxnorm:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/chebi/",
                    "template": "drugcentral.xref.chebi:{{input}} OR chebi.chebi_id:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/chembl/",
                    "template": "chembl.molecule_chembl_id:{{input}} OR drugbank.chembl:{{input}} OR drugcentral.xref.chembl_id:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/drugbank/",
                    "template": "drugcentral.xref.drugbank_id:{{input}} OR pharmgkb.cross_references.drugbank:{{input}} OR drugbank.drugbank_id:{{input}} OR chebi.drugbank_database_links:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/iuphar.ligand/",
                    "template": "drugcentral.xref.iuphar_ligand_id:{{input}} OR pharmgkb.cross_references.iuphar_ligand:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/kegg.drug/",
                    "template": "drugcentral.xref.kegg_drug:{{input}} OR chebi.kegg_drug_database_links:{{input}} OR drugbank.kegg_drug:{{input}} OR pharmgkb.cross_references.kegg_drug:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/kegg.compound/",
                    "template": "chebi.kegg_compound_database_links:{{input}} OR pharmgkb.cross_references.kegg_compound:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/pubchem.compound/",
                    "template": "drugcentral.xref.pubchem_cid:{{input}} OR chebi.pubchem_database_links:{{input}} OR pharmgkb.cross_references.pubchem_compound:{{input}} OR pubchem.cid:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/unii/",
                    "template": "drugcentral.xref.unii:{{input}} OR aeolus.unii:{{input}} OR ginas.unii:{{input}} OR unii.unii:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/inchikey/",
                    "template": "aeolus.inchikey:{{input}} OR chebi.inchikey:{{input}} OR chembl.inchi_key:{{input}} OR drugbank.inchi_key:{{input}} OR drugcentral.structures.inchikey:{{input}} OR ginas.inchikey:{{input}} OR pubchem.inchi_key:{{input}} OR unii.inchikey:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/inchi/",
                    "template": "pubchem.inchi:{{input}} OR pharmgkb.inchi:{{input}} OR drugcentral.structures.inchi:{{input}} OR drugbank.inchi:{{input}} OR chembl.inchi:{{input}} OR chebi.inchi:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/uniprot/",
                    "template": "chebi.uniprot_database_links:{{input}} OR drugbank.enzymes.uniprot:{{input}} OR drugbank.pathways.enzymes.uniprot-id:{{input}} OR drugbank.pharmacology.snp_adverse_drug_reactions.reaction.uniprot-id:{{input}} OR drugbank.pharmacology.snp_effects.effect.uniprot-id:{{input}} OR drugbank.targets.uniprot:{{input}} OR drugbank.transporters.uniprot:{{input}} OR drugcentral.bioactivity.uniprot_id:{{input}} OR pharmgkb.cross_references.uniprotkb:{{input}}"
                  }
                ],
                "in": "query",
                "description": "Query string. Examples \"Fludara\", \"CHEMBI:63599\", \"DB01073\"."
              }
            ]
          }
        }
      },
      {
        "path": "/drug/drugid",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mychem.info/jsonld_context/mychem_drug_1.1.json",
                "x-responseValueType": [
                  {
                    "path": "cadd.gene.genename",
                    "valueType": "http://identifiers.org/uniprot/"
                  },
                  {
                    "path": "clinvar.rsid",
                    "valueType": "http://identifiers.org/drugbank/"
                  },
                  {
                    "path": "cadd.gene.gene_id",
                    "valueType": "http://identifiers.org/dbsnp/"
                  },
                  {
                    "path": "cadd.gene.feature_id",
                    "valueType": "http://identifiers.org/pubmed/"
                  },
                  {
                    "path": "cadd.gene.ccds_id",
                    "valueType": "http://identifiers.org/clinicaltrials/"
                  },
                  {
                    "path": "clinvar.uniprot",
                    "valueType": "http://identifiers.org/rxcui/"
                  }
                ],
                "description": "A chemical object"
              }
            },
            "summary": "For a given chemical id, return the matching chemical object",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/inchikey/"
                ],
                "name": "drugid",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/inchikey/",
                    "template": "/drug/{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/drugbank/",
                    "template": "/drug/{{input}}"
                  }
                ],
                "in": "path",
                "description": "DrugBank ID, InCHIKey, CHEBI ID, CHEMBL ID"
              }
            ]
          }
        }
      }
    ],
    "openapi": "3.0.0",
    "servers": [
      {
        "url": "http://mychem.info/v1",
        "description": "Production server"
      }
    ],
    "info": {
      "title": "MyChem.info API",
      "termsOfService": "http://mychem.info/terms/",
      "contact": {
        "x-role": "responsible developer",
        "x-id": [
          "http://orcid.org/0000-0002-2629-6124",
          "https://github.com/newgene"
        ],
        "name": "Chunlei Wu",
        "email": "help@mychem.info"
      },
      "version": "1.0",
      "description": "Documentation of the MyChem.info Chemical Query web services. Learn more about [MyChem.info](http://mychem.info/)"
    },
    "~raw": "H4sIABUZzFkC_-1Y62_bNhD_VwR92oBYdtKtRfNpidOi3tqma7MHkBQCJZ1l1hKp8uFEC_y_70hKthVL8mPdtwaILfOOv3vydMdHX4JYgJD-uXf76GuR4YM_U6o4Hw7zMp5BHlA25cPFqX_i-QnIWNBCUc4M3wfBEx2bX56D8ZefkasgamYAH_3hVw2itI8pKPtdEEFyUCuRTyB_Nxs8qQRlaeC9eiB5kYH07vzXmU5w6x2qceeP37x6dzk5f_7s55cv3crV5eh09OLZnR8YPQV81VRAgohKaMAVhkIN_ldDlsYuYtVRZWHXnUR_idSHwYJkGm4c5bb2Bk2AKTqlqHnARToUD7GmQwPXwYBCol0MeZT1cSRCpxFh8z4eqosZEUFGU8KSPsY5pGlgEHcyxTwvuO5HK3Rks2MfXs1oryMoi2d0DuVOnh1CCsHV0P9sY2hSAKS6AUwgosAl22Zgd8dVrff6BHimZWCJ54-PlBVaLZfe9UfPeDRGCEGy4EHAFHkYF3mTKaWMSEuWwce_x39MmmQTwTydRwE84MlgJAsXPCaRzogot_BMku5nyjoDN03ZUtiyNRWyS44Q0uRI2XVybwp3y0HOM4h1BqH73ZBRO9UkfuDoOzzeArK_oo0z1uunmnNL21X4YsGlDJEXBLAY5GpLh3WdiM7_K3JCFImIhDCjbC6PsXK7SvSa6thDx36AvY19x-jZLFK9OhrW0Ky2uW5F7PRdIxAdWN2Gtmw40MhG4XxyRGoDap5eI3YoWWMco2hrke8NSrUjjNszuiYfZ88KfMsku69W9rg6sHpJ9dpnuJpiqzfDNsHV_O11s_Jk-YBzvPmqbHlB1fQ253fSTEW2xHCLujohPfTaQdhDYTeoBXSp4TzSTquj1yHHOm1754GO2_JaQ2pHGrbQ-qzu81-35zvjdWQqu1aotbJU1P0KI7B_yhxkvamDy3T896SUT9kHne91610S84ynZSBZEZLEjCHgarYAYscKbLiqpyMQYTqFWKFO9ns3gCICh5RdpmLMmSy4MBNMN2udHBHlRv8FVeXK7_u_Tasd82gzCUx7S-2s5IYru4DZV6C7wI1dZ6OR_X4yW114dodXM3s8-oKe8e6pmuEINaNK3vkeSixAqNKv2mjH--fmSPRoRzwDicYYvsMql83jGiEmSRKkwMB-2DFtT8BVljfxMJsX2OkIub9q6xawR7UDTE0izL9OsCkQUy4OwMMqlUPSCRjHiTwAzXiIxiTDiZdkssN9lXP3xayGpqWbvX79dP3-7dWYM4XzTL1L4jZB7oMUs01HWoKIDQNTprsYvh9f3Hwa3BCWAg7iMLTHDOsWFwNSUEzDlGKhLYc5kXjyGlcTXyRnWRLGTlxFCm2qh6fBaWDo_tJM9lLnObH3Ef47MgdbgI0nqnOBLSueDYwN83KiMFtZumYxp8Oh2HSxHzQ55GrjCndcYpZ5k6sTb8LGbya_QXnijd-8upzYNXur8RYf-68wKsnf6h5jfS7_4-Dc2Zo4h33L0WwLcV0UbSIfUhNXEXbVcK-y971ofS9a_0fRss1PZ816zYVHsIleAFtnLU1O6qKlZtBSuKq0Xlo0I7vtGFzxWOdoFrGXuXxqsd6V41pfb1zDuQvae4jslS81bYr3FoipmVyARyKulXe7sfXzDy3XyT_aGGEgKvmnwcisGHdgv2Q1fBjY8rqqW1zgYGfjNsK_Af6fDc6en70cPD89-6m-FzTxcrGyAWJwb5Ktrmw8s-lQHW4aZeAlsIDMNDwGAYspdRfgkBW_bOjrb5Tf8UyzDKj3l7ZVVlHlUDe9dfFh4kqWyOX19JNzVMfNumUaOiySVq-OWlgdRZfvm2-A5gphjLvgNderFnFzaZ2kLvPReIbZakjPghHGYfkv3Os6OBUYAAA="
  },
  {
    "tags": [
      {
        "name": "gene"
      },
      {
        "name": "annotation"
      },
      {
        "name": "query"
      },
      {
        "name": "translator"
      }
    ],
    "_id": "67932b75e2c51d1e1da2bf8263e59f0a",
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-09-27T14:33:10.037789",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mygene.info/openapi_minimum.yml"
    },
    "paths": [
      {
        "path": "/gene/{geneid}",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/master/mygene.info/jsonld_context/mygene_context.json",
                "x-responseValueType": [
                  {
                    "path": "symbol",
                    "valueType": "http://identifiers.org/hgnc.symbol/"
                  },
                  {
                    "path": "unigene",
                    "valueType": "http://identifiers.org/unigene/"
                  },
                  {
                    "path": "uniprot.Swiss-Prot",
                    "valueType": "http://identifiers.org/uniprot/"
                  },
                  {
                    "path": "pdb",
                    "valueType": "http://identifiers.org/pdb/"
                  },
                  {
                    "path": "pathway.biocarta.id",
                    "valueType": "http://identifiers.org/biocarta.pathway/"
                  },
                  {
                    "path": "pathway.kegg.id",
                    "valueType": "http://identifiers.org/kegg.pathway/"
                  },
                  {
                    "path": "pathway.reactome.id",
                    "valueType": "http://identifiers.org/reactome/"
                  },
                  {
                    "path": "pathway.wikipathways.id",
                    "valueType": "http://identifiers.org/wikipathways/"
                  },
                  {
                    "path": "pathway.pharmgkb.id",
                    "valueType": "http://identifiers.org/pharmgkb.pathways/"
                  }
                ],
                "description": "A gene object"
              }
            },
            "summary": "For a given gene id, return the matching gene object",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/ncbigene/",
                  "http://identifiers.org/ensembl/"
                ],
                "name": "geneid",
                "schema": {
                  "type": "string"
                },
                "in": "path",
                "description": "Entrez or Ensembl gene id, e.g., 1017, ENSG00000170248. A retired Entrez Gene id works too if it is replaced by a new one, e.g., 245794"
              }
            ]
          }
        }
      },
      {
        "path": "/query",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/master/mygene.info/jsonld_context/mygene_context.json",
                "x-responseValueType": [
                  {
                    "path": "hits._id",
                    "valueType": "http://identifiers.org/ncbigene/"
                  },
                  {
                    "path": "hits.entrezgene",
                    "valueType": "http://identifiers.org/ncbigene/"
                  },
                  {
                    "path": "hits.symbol",
                    "valueType": "http://identifiers.org/hgnc.symbol/"
                  },
                  {
                    "path": "hits.taxid",
                    "valueType": "http://identifiers.org/taxonomy/"
                  }
                ],
                "description": "A query response object with \"hits\" property"
              }
            },
            "summary": "Make gene query and return matching gene hits",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/hgnc.symbol/",
                  "http://identifiers.org/refseq/",
                  "http://identifiers.org/unigene/",
                  "http://identifiers.org/uniprot/",
                  "http://identifiers.org/pdb/",
                  "http://identifiers.org/biocarta.pathway/",
                  "http://identifiers.org/kegg.pathway/",
                  "http://identifiers.org/wikipathways/",
                  "http://identifiers.org/pharmgkb.pathways/",
                  "http://identifiers.org/reactome/"
                ],
                "name": "q",
                "schema": {
                  "type": "string"
                },
                "in": "query",
                "description": "Query string. Examples \"CDK2\", \"NM_052827\", \"204639_at\". The detailed query syntax can be found at http://docs.mygene.info/en/latest/doc/query_service.html"
              }
            ]
          }
        }
      }
    ],
    "openapi": "3.0.0",
    "servers": [
      {
        "url": "http://mygene.info/v3",
        "description": "Production server"
      }
    ],
    "info": {
      "title": "MyGene.info API",
      "termsOfService": "http://mygene.info/terms/",
      "contact": {
        "x-role": "responsible developer",
        "x-id": [
          "http://orcid.org/0000-0002-2629-6124",
          "https://github.com/newgene"
        ],
        "name": "Chunlei Wu",
        "email": "help@mygene.info"
      },
      "version": "3.0",
      "description": "Documentation of the MyGene.info Gene Query web services. Learn more about [MyGene.info](http://mygene.info/)"
    },
    "~raw": "H4sIABYZzFkC_81XUW_iOBD-K1ae7qSQ0JRtt_t0Vdur7m7b3RPV7kOpkJMMiZfETm0HyCL--43tUAK3cCDtwyFBEnvmy8znmc9m6SmQM5DK-0Cel14tC7zxcq2rD2FYNhlwCBifiHB27vnES0ElklWaCW7sPkuR1ol5Ig7GW72gVUV1bgCXXmgAwqX5ZenKDmWg7bWikpag3169A33HtYTvREhyxxWUcUEMCGGpTyDIAp-c9c8ufXL3OLzvm8_ZZT8avA_INZGgmYSUtAj3zo3MhZwqooUgbEKYJkyhZVXQBE3jhlDCYU4EhzV-NHh3eTUwSUt4rQ0ihqVljQYex8hNkC4vY6OSHEpqE9NNZSeVloxn3gpnF70ZLWp4cjPPa35ZClyzCUMOAiGzkCcxs4QZxD024NgIPUM0s1QZuh3xElQl0MCRH_X79rrD7LVjUsTfINGejW7t96Ub5dIBm0yaMhaFMe2msS_CPONJ4FxCk_0Gp-Y2vWOBWvN_g1RS6GA4Z0r1sAL1CXjGcwevSuNjAdB01xmvc9oEMRMJlZoGrhqOAXtzaTH2IE8hy05AteaHESXQRIsSTkBdu-xBnLMpa-_VCahdtz3IVU5lmU3jE1DfXDrQL7bK_xx-evx4eyO4hoVeIyiEyJjO6zhIRBk-3lw_DXtPlGeA3QuhlpSrgmohe7Ri2CgZw75uwrgQcVhShfq1JZPflOBFOk7cS9qp9WNgZr2VUQRVlyWVjYnid9Q4SjI2A77ROBSxWnKicyAl1UmOSrLVthYkfK3BYhytqn8bB-KUKSB3C1pWBSgy8m5u_4pGSPHIe3wY999F76NL9xj1BxfnV2OqR15AnjCcFDRlBYrmq8NquKYLklBOYiATUfOUUE3axUlFooIuP8BDZBOUNlMu_rHZOlgCQa7L4rDevv40qd0SKf9A4U8UvB6yeBMp_791xz-sLP4JWuEfqQD-kd3nn9JP_hFCsdmeXJGesj-5ylobtyVP5tilWJA502rkEWS0AqmbozYw4xOMj9eQzUa8pUoWBuyx4pR97BDaz9paLRg24vE5orHgomz-7_L4QKfgpM-VBUWBadVxWxkNBei9soU3ET8qrVuR1CXSQO2RVUysvj409-v43GHRieQcYtIqkwrIR6DmhUICobGoNXnuuL388oMD8692IZDt9t3nQd-MmFyxR2x0ix5LuyIlZMJSuzjmRNvDb9SLLqKr3sVZNFh33c6K4KnV1qJbQykKu-ZtP7C4MII9g8I0i0FA5WTuiA9F9VsnXq8jszd5zQtg5GttJVUz7VC7TF1__sO44AKX6tNk6Ija89_BGoUOi2btztQ9Q7taXo9QzoVbou3xVki6Q5v6c1WMaXIsxJZvZHz1D8PPGi_hDAAA"
  },
  {
    "tags": [
      {
        "name": "translator"
      },
      {
        "name": "ISB"
      },
      {
        "name": "gene"
      },
      {
        "name": "similarity"
      },
      {
        "name": "tissue"
      },
      {
        "name": "TCGA"
      },
      {
        "name": "GIANT"
      },
      {
        "name": "BioGrid"
      },
      {
        "name": "GTEx"
      },
      {
        "name": "BigQuery"
      },
      {
        "name": "network"
      },
      {
        "name": "DeepTranslate"
      }
    ],
    "_id": "14cfbb82d72211adde316005a84d6e66",
    "_meta": {
      "github_username": "JohnCEarls",
      "url": "http://biggim.ncats.io/api/metadata/openapiv3",
      "timestamp": "2017-10-25T14:22:41.463970"
    },
    "paths": [
      {
        "path": "/metadata/study",
        "pathitem": {
          "get": {
            "tags": [
              "metadata"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Study"
                    }
                  }
                },
                "description": "Success"
              }
            },
            "summary": "Return all available studies",
            "operationId": "get_metadata_studies"
          }
        }
      },
      {
        "path": "/interactions/query/status/{request_id}",
        "pathitem": {
          "get": {
            "tags": [
              "interactions"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Query_request_status"
                    }
                  }
                },
                "description": "OK"
              },
              "404": {
                "description": "Request id not found"
              }
            },
            "summary": "Gets the status of a query request",
            "operationId": "get_interactions_status"
          },
          "parameters": [
            {
              "required": true,
              "schema": {
                "type": "string"
              },
              "name": "request_id",
              "in": "path",
              "description": "The request id for a query"
            }
          ]
        }
      },
      {
        "path": "/metadata/openapiv3",
        "pathitem": {
          "get": {
            "tags": [
              "metadata"
            ],
            "responses": {
              "200": {
                "description": "Success"
              }
            },
            "summary": "Return the OpenAPI v3 spec for this API",
            "operationId": "get_open_api_spec"
          }
        }
      },
      {
        "path": "/metadata/table/{table_name}",
        "pathitem": {
          "get": {
            "tags": [
              "metadata"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Table"
                    }
                  }
                },
                "description": "Success"
              },
              "404": {
                "description": "Table not found"
              }
            },
            "summary": "Retrieve metadata about a table",
            "operationId": "get_metadata_table_resource"
          },
          "parameters": [
            {
              "required": true,
              "schema": {
                "type": "string"
              },
              "name": "table_name",
              "in": "path",
              "description": "the name of a biqquery table"
            }
          ]
        }
      },
      {
        "path": "/metadata/table",
        "pathitem": {
          "get": {
            "tags": [
              "metadata"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Table"
                    }
                  }
                },
                "description": "Success"
              }
            },
            "summary": "Retrieve list of available tables",
            "operationId": "get_metadata_table_resources"
          }
        }
      },
      {
        "path": "/metadata/study/{study_name}",
        "pathitem": {
          "get": {
            "tags": [
              "metadata"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Study"
                    }
                  }
                },
                "description": "Success"
              },
              "404": {
                "description": "Study not found"
              }
            },
            "summary": "Return a single study and associated substudies",
            "operationId": "get_metadata_study"
          },
          "parameters": [
            {
              "required": true,
              "schema": {
                "type": "string"
              },
              "name": "study_name",
              "in": "path",
              "description": "the name of a Big GIM study"
            }
          ]
        }
      },
      {
        "path": "/metadata/tissue/{tissue_name}",
        "pathitem": {
          "get": {
            "tags": [
              "metadata"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TissueSubstudies"
                    }
                  }
                },
                "description": "Success"
              },
              "404": {
                "description": "Tissue not found"
              }
            },
            "summary": "Return a list of substudies and columns associated with a tissue",
            "operationId": "get_tissue"
          },
          "parameters": [
            {
              "required": true,
              "schema": {
                "type": "string"
              },
              "name": "tissue_name",
              "in": "path",
              "description": "the name of tissue"
            }
          ]
        }
      },
      {
        "path": "/metadata/swagger",
        "pathitem": {
          "get": {
            "tags": [
              "metadata"
            ],
            "responses": {
              "200": {
                "description": "Success"
              }
            },
            "summary": "Return the swagger v2 spec for this API",
            "operationId": "get_swagger_spec"
          }
        }
      },
      {
        "path": "/metadata/tissue",
        "pathitem": {
          "get": {
            "tags": [
              "metadata"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Tissues"
                    }
                  }
                },
                "description": "Success"
              }
            },
            "summary": "Return a list of available tissues",
            "operationId": "get_tissue"
          }
        }
      },
      {
        "path": "/metadata/table/{table_name}/column/{column_name}",
        "pathitem": {
          "get": {
            "tags": [
              "metadata"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Column"
                    }
                  }
                },
                "description": "Success"
              },
              "404": {
                "description": "Column not found"
              }
            },
            "summary": "Retrieve metadata about a tables column",
            "operationId": "get_metadata_column_resource"
          },
          "parameters": [
            {
              "required": true,
              "schema": {
                "type": "string"
              },
              "name": "table_name",
              "in": "path",
              "description": "the name of a biqquery table"
            },
            {
              "required": true,
              "schema": {
                "type": "string"
              },
              "name": "column_name",
              "in": "path",
              "description": "the name of a column in this biqquery table"
            }
          ]
        }
      },
      {
        "path": "/interactions/query",
        "pathitem": {
          "post": {
            "tags": [
              "interactions"
            ],
            "responses": {
              "400": {
                "description": "Bad query request."
              },
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/The_query_response"
                    }
                  }
                },
                "description": "Success"
              }
            },
            "summary": "Submit a new query request",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Query_request"
                  }
                }
              }
            },
            "operationId": "post_interactions_query"
          },
          "get": {
            "tags": [
              "interactions"
            ],
            "responses": {
              "400": {
                "description": "Bad query request."
              },
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/The_query_response"
                    }
                  }
                },
                "description": "Success"
              }
            },
            "summary": "Submit a new query request",
            "parameters": [
              {
                "schema": {
                  "type": "string"
                },
                "name": "restriction_join",
                "in": "query",
                "description": "\nThe type of join made on restrictions. Either `intersect` or `union`\n\n**Default**: intersect\n\n**Example**: intersect\n"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "limit",
                "in": "query",
                "description": "\nThe maximum number of rows to return.\n\n\n**Default**: 10000\n"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "restriction_gt",
                "in": "query",
                "description": "\nA list of pairs of values `column name,value` with which to restrict the results of the query to rows where the value of the column is greater than the given value.\n\n**Default**: No restrictions\n\n**Example**: TCGA_GBM_Correlation,.2, GTEx_Brain_Correlation,.2\n"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "restriction_lt",
                "in": "query",
                "description": "\nA list of pairs of values `column name,value` with which to restrict the results of the query to rows where the value of the column is less than the given value.\n\n**Default**: No restrictions\n\n**Example**:TCGA_GBM_Pvalue,1.3, GTEx_Brain_Pvalue,1.3\n"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "table",
                "in": "query",
                "description": "\nThe table to select from.\n\nAvailable tables are provided by  `/api/metadata/tables`.\n\n**Default**: BigGIM_70_v1\n"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "ids2",
                "in": "query",
                "description": "Entrez gene ids to select.\n\nIf not given, the query selects any gene related to a gene in ids 1.\nIf given, the query only selects relations that contain a gene in ids1 and a gene in ids2.\n\n**Default**: all genes.\n\n**Example**:\"5111,6996,57697,6815,889,7112,2176,1019,5888,5706\"\n"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "restriction_bool",
                "in": "query",
                "description": "\nA list of pairs of values `column name,value` with which to restrict the results of the query to rows where the value of the column is True or False.\n\n**Default**: No restrictions\n\n**Example**: BioGRID_Interaction,True\n"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "columns",
                "in": "query",
                "description": "A comma delimited list of column names to return.\n\nGene ids are always returned and do not need to be specified. If a column is not present, then an error is returned.\n\nAvailable columns are provided by `/api/metadata/tables/{table_name}/columns`.\n\n**Default**: all columns.\n\n**Example**: TCGA_GBM_Correlation,TCGA_GBM_Pvalue,GTEx_Brain_Correlation,GTEx_Brain_Pvalue\n"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "ids1",
                "in": "query",
                "description": "A comma delimited list of Entrez gene ids to select.\n                \n**Default**: all genes.\n\n**Example**:\"5111,6996,57697,6815,889,7112,2176,1019,5888,5706\"\n"
              }
            ],
            "operationId": "get_interactions_query"
          }
        }
      }
    ],
    "openapi": "3.0.0",
    "servers": [
      {
        "url": "http://biggim.ncats.io/api"
      }
    ],
    "x-origin": [
      {
        "format": "swagger",
        "version": "2.0",
        "converter": {
          "version": "2.9.2",
          "url": "https://github.com/mermade/swagger2openapi"
        },
        "url": "http://biggim.ncats.io/api/metadata/swagger"
      }
    ],
    "info": {
      "version": "1.0",
      "contact": {
        "email": "john.c.earls@gmail.com",
        "name": "John C. Earls"
      },
      "title": "Big GIM(Gene Interaction Miner)",
      "description": "Big GIM (Gene Interaction Miner) is a Translator Knowledge Source that contains function interaction data for all pairs of genes. Functional interaction data are available from four different sources: 1) tissue-specific gene expression correlations from healthy tissue samples (GTEx), 2) tissue-specific gene expression correlations from cancer samples (TCGA), 3) tissue-specific probabilities of function interaction (GIANT), and 4) direct interactions (BioGRID). The data is stored as a Google BigQuery table enabling fast access."
    },
    "components": {
      "responses": {
        "MaskError": {
          "description": "When any error occurs on mask"
        },
        "ParseError": {
          "description": "When a mask can't be parsed"
        },
        "NoResultFound": {
          "description": ""
        }
      },
      "schemas": {
        "Tissues": {
          "type": "object",
          "properties": {
            "tissues": {
              "items": {
                "type": "string",
                "description": "A tissue"
              },
              "type": "array"
            }
          }
        },
        "TissueSubstudies": {
          "type": "object",
          "properties": {
            "tissue": {
              "type": "string",
              "description": "The tissue"
            },
            "substudies": {
              "items": {
                "$ref": "#/components/schemas/Substudy"
              },
              "type": "array"
            }
          }
        },
        "Study": {
          "type": "object",
          "properties": {
            "substudies": {
              "items": {
                "$ref": "#/components/schemas/Substudy"
              },
              "type": "array"
            },
            "name": {
              "type": "string",
              "description": "The name of this study"
            },
            "description": {
              "type": "string",
              "description": "The description of this study"
            }
          }
        },
        "Substudy": {
          "type": "object",
          "properties": {
            "tissue_hierarchy": {
              "type": "string",
              "description": "The Brenda tissue hierarchy of the cell of origin"
            },
            "cell_of_origin": {
              "type": "string",
              "description": "The cell type used."
            },
            "name": {
              "type": "string",
              "description": "Sub-study name"
            },
            "columns": {
              "items": {
                "$ref": "#/components/schemas/Column"
              },
              "type": "array"
            },
            "description": {
              "type": "string",
              "description": "Substudy description"
            }
          }
        },
        "Query_request_status": {
          "required": [
            "request_id",
            "status"
          ],
          "type": "object",
          "properties": {
            "processed_data": {
              "type": "string",
              "description": "Human readable size of query scan(determines cost of bigquery)"
            },
            "request_uri": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "List of uris of generated csvs"
            },
            "message": {
              "type": "string",
              "description": "Error messages if status is __error__"
            },
            "request_id": {
              "type": "string",
              "pattern": "[0-9a-f]{12}4[0-9a-f]{3}[89ab][0-9a-f]{15}\\Z",
              "description": "The request id for this query as UUID"
            },
            "status": {
              "type": "string",
              "enum": [
                "error",
                "running",
                "complete"
              ],
              "description": "The query status",
              "example": "error"
            },
            "size": {
              "type": "string",
              "description": "Human readable total size of result"
            },
            "rows": {
              "type": "integer",
              "description": "Number of rows returned"
            }
          }
        },
        "Table": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Table name"
            }
          }
        },
        "Query_request": {
          "type": "object",
          "properties": {
            "ids1": {
              "description": "A comma delimited list of Entrez gene ids to select.\n                    \n**Default**: all genes.\n",
              "type": "string",
              "example": "5111,6996,57697,6815,889,7112,2176,1019,5888,5706"
            },
            "restriction_bool": {
              "description": "\nA list of pairs of values `column name,value` with which to restrict the results of the query to rows where the value of the column is True or False.\n",
              "type": "string",
              "example": "BioGRID_Interaction,True"
            },
            "columns": {
              "description": "A comma delimited list of column names to return.\n\nGene ids are always returned and do not need to be specified. If a column is not present, then an error is returned.\n\nAvailable columns are provided by `/api/metadata/tables/{table_name}/columns`.\n\n**Default**: all columns.\n",
              "type": "string",
              "example": "TCGA_GBM_Correlation,TCGA_GBM_Pvalue,GTEx_Brain_Correlation,GTEx_Brain_Pvalue"
            },
            "restriction_lt": {
              "description": "\nA list of pairs of values `column name,value` with which to restrict the results of the query to rows where the value of the column is less than the given value.\n",
              "type": "string",
              "example": "TCGA_GBM_Pvalue,1.3, GTEx_Brain_Pvalue,1.3"
            },
            "limit": {
              "description": "\nThe maximum number of rows to return.\n\n**Default**: 10000\n",
              "type": "integer",
              "example": 10000
            },
            "restriction_gt": {
              "description": "\nA list of pairs of values `column name,value` with which to restrict the results of the query to rows where the value of the column is greater than the given value.\n",
              "type": "string",
              "example": "TCGA_GBM_Correlation,.2, GTEx_Brain_Correlation,.2"
            },
            "ids2": {
              "description": "Entrez gene ids to select.\n\nIf not given, the query selects any gene related to a gene in ids 1.\nIf given, the query only selects relations that contain a gene in ids1 and a gene in ids2.\n\n**Default**: all genes.\n",
              "type": "string",
              "example": "5111,6996,57697,6815,889,7112,2176,1019,5888,5706"
            },
            "table": {
              "description": "\nThe table to select from.\n\nAvailable tables are provided by  `/api/metadata/tables`.\n\n**Default**: BigGIM_70_v1\n",
              "type": "string",
              "example": "BigGIM_70_v1"
            },
            "restriction_join": {
              "type": "string",
              "enum": [
                "intersect",
                "union"
              ],
              "description": "\nThe type of join made on restrictions.\n\n**Default**: intersect\n",
              "example": "intersect"
            }
          }
        },
        "The_query_response": {
          "required": [
            "status"
          ],
          "type": "object",
          "properties": {
            "request_id": {
              "type": "string",
              "description": "The request id generated."
            },
            "status": {
              "type": "string",
              "enum": [
                "submitted",
                "error"
              ],
              "description": "The status of the query job submission.",
              "example": "submitted"
            },
            "message": {
              "type": "string",
              "description": "Error messages if status is __error__"
            }
          }
        },
        "Column": {
          "type": "object",
          "properties": {
            "interactions_type": {
              "type": "string",
              "description": "The type of interaction measured"
            },
            "datatype": {
              "type": "string",
              "description": "The datatype"
            },
            "name": {
              "type": "string",
              "description": "Column description"
            },
            "table": {
              "$ref": "#/components/schemas/Table"
            }
          }
        }
      }
    },
    "~raw": "H4sIADGe8FkC_-0ba3PbuPGvYNTONM4o1MOJY-dT7cTxudfkcrFvOtM4Q0MUJCFHggoAytF5_N-7WIAviZRIXZw4N9UXiXgs9r2LXfG2w8Uk7rwgt50xU4Hkc81jAc-dEz4lZ-dvyKMzJhg5F5pJGphJ8oYLJvcIV4SSS0mFCqmOJflZxDchG08ZuYgTGTCiZ1STIBaacqHIJBF2Oy-AGlNNyQQ20zAkc8qlIvGETOFE5ZHXbgcN1_dQyQhdUB7SUcjIRMYRgEkkGfPJhEkmNFGIhHpBBntEc6US9kTNWcAnPMADCPsyl0wpAzKIpWRABfxWFtiM0VDPlm4nUTSah0wBMy5Pv-x1yXAXmAEVAZM5rMuXZ8cAa38d1lzGIzriIdecIUcqmffo7Pz47SVAoGJMnu4B7ZIFurgEDjnh8dn781d7HrmcMcs7EJwCgbExoUaEZ3E8BR6CvH9NmASSkaVMwBcXUzKhShMaACuV1-mSjuY6ZAUFqdMPsxaFH2hULxaBtMy-T_FMeIHHqAzVP6dm1AviyCwXNELI_4IV5KVHTs2Szh3MLJhUTi8HXh-HFJNmFIY-3HYSiaBnWs9f9HojPp3yyBMB1crjcY_OeefuI-yJ50AWPMDSfa8PgBDHaB4L0BiFaKpgBpja3xc6GS_xFwhkzqSRhl2UjBTMpY9cs8j--rtkEwP9b70cbM-B7F3YXUtEXy_nSCuVktqRsv2t2SOKLx8yWqFnKEoDsgBRaQlyQ5COoZWwzNx2IEVU49En0C8EfIkKe1Fmw7dgkrWUOprcbAs6jK5XIV_LOTQOnG1-SkZTxUEBC0M_nvix5FNeK3izihjIJFFs7NWI25LvzziYogxmyzpoJ-AgxzT1bdlyqw3uMPjtUKo-K4jDJBKtRPsSt-ym_SkLiybQUukBxBMLo6X4rLJX6rguTOVcWDn4eINervOiBgnHvAociv7edzurrcPoD8i1GEMiRlUCoaAOt8w-NkrWmhGKEQLMJhyy-Xays9RvE36d_GbM_2xCmw-xGVBX9gjJPifckA4RBEBQnaiOCRIr7I0g8NFpJVanUkLq4hYowifEgjER1veZmfX9GkrdgRgZv2BGgAuSUcS1tvJgIokscqVRAxYRrWCvO98ZMhJNPsUjghAwL6nzHYYbTGmfj-tE51YQPsZcR1Jd44lqxPCrEwFCqVTksRqsMuTZYDDoHhwdHXSfPT84et49OBw86x4eHnWfDwbD7nDw_KA76A-Ous8ODw9hSf-gs86YY8jFooiC9oQc-Ah5T8iBDmDSqdCS_WFTNzid6JgoFgLC3pUgFZ8r8fjxKzahSagfP36BSavNVa-auMkCWSb1889O3vgv8yyxmw2-W9AwYV2Ta_onErLn0rLCsF3YimSLELpApFcynUgBBFyJs5QNmFyHN3Sp3LRJFSHHHMdExJoIBs-wdQT6ZjNWUARyPoFc0kEH_TcLTS4MfqJrlFEABIK6a2ZTsHjucZbHO24hAqAcCz6Gk0ZLcm1SuF7ENDX-o4deSfVu8ds3pNz13NZrhLgmJTdbL6fc0RWkBBkuJLj-876_GFQw-UqgV0XMM83BVH-FLIvvGlXVZFVQUMSjlgLgNTygV_c_xS6VKBCDXl8ZYyy6ltJoIgxlH2spdfHDQCcRHcODIIVj1TrmGfhatFE_V3Ad9OFTh0VEv_AoiQhQMILbFOAj45tVVS4hgeDKCBi8pkyuMW6qG1mqN-ySGuv0hpWacpwZYHbLRdtV5LpgkV0cuyY3XM_IzYwHM0uXRRB9OjwAWSsu3iwyTLiZwd0XxxFQltBlVjmVDNy2NFdzgVNTvgDTxNVeI9UK6znk3NbA2y9xJx9-yJwBy1N_gi2jOA7X3Qdevf3C3bh7KSv99YNhg8EPEn_ymoZqA-kQJYb3Eao3BeQrASHGhBUUTrdAnV0CDlYs7Va0RhukqAMmEN7AQyhrEGIR5mDysk2xglWGNMCAWBoaVoeeTQlCk0zJL2SKpZS1kLHl-WRFAqv4H5XZ609JRI3_huBjI5imITGL0aeiFrXKXW1iWgwu2YhMhDCbXbklZJrVZbBOovaE6uOBPlONYmPfhM0GpKVEOdgBFY_GgIKMOIgG5GvtbsSnuGCvWYY8p5CRSzzuQ__JEX0y-Xg7GN49zR727z4cHtHRx3z22d3V1X871XQXsmtTD8WqjMWXKvLbb-ev6rACs65iwdtyeEwTrvogaIlLJF-5zFacuXLUv53jgr1Z-RZvByRQi5IQ8-v-fdyqqqzJ-Wm89Vl63lFISPCMqsP_g5kqJBnqd1Ov_Yc2We7cbBkj3m9gYstmcEI2z42DIDGeXCA43P42fo-G9TpOROVFCzBGFad6ZtHN08O8hDRlNghrOsX6Zyddg0alEsj8pVnZeY9SRzeUF8vTopyth0p0decGGQPXT0H5hWVlBg77fVu5Ar8I2T3-pvN5yAME1fukXAnHVgcalPxsve-uQrUuEiw8m0kz2yvWOnpoHj2rHL3b3DzvnH1KCJg6KxEXfKeGIFcoN5cdKWbOKIBmlkqtmaIPzgle000jmTW5FclZld0Z0wojVH6nd0elGNRIsFQPyh3pPQuxMmZVyvSXn9EUnvafVhnA-5y7JtZP0FBS8We24Ar5i_2d7MFw9ReAcPzunCz28RKbO10YrGGsOdSHU32zoZ6lW1S4fN0rXWJb6m2-c6ve6kLBn0Kk-_w5b_XspLkbOCw5W8A1zS0gdBQnGg7NztrkdCxJwFds3n0DtXWVy42-p15ZXTegXk_zskJ7Dqb3AbpSR2jHQ_VAmLjKGYxmvVv82kn7850ttT9tbGc9r6-p_BhuIeEUUxdpl_aioFQccMyJCm2xBhF4-UDib70NXNiWygYbwOYHODrbndrJ0-VbWwk777t8fRmn5pnLEyWdlTBzieNlnRaQqRB6Pnnftrraud3Z99nu4QbBqxs6NfeLXUO0208Ww8Yh2m35WhE6bzbvrh8F9-2ahQ9CA1RLf72erbiSe-_Wfj_kFKZLNiFRwL8lFmndTFi9_H55lXKobAspjtRvmGClTf8dvYxr_K57mfWboFW92PUW3U3kJHZ35nXx38_VJ0Ww0R3vAhu7IETBbrbe7Qxp5ctddvEsy_BptZs7oePyGR4y_uv7l_V2-zZXU7CEVd-RX9JX2luZpWZc2LFpRU4hPkOYuc6aVdemAn6N3bDrTS0tM3NqC6AVza5tDimlzHbAGpLTqPtV3_9qitNKT6wBcj9Gg2uFM2_jkiqsSbR98293Noc_Eps3dcva8bh597Ada7MQ3MhJfI8eflNKsNe2lZC_cOesrDBX7RuNV53dzRIbuz-OYa72b1s6vLqWdTv-pX962sq2__9Nqe5vSk0C0a7_F2vtfgZ_RpJt_mP3vZ3Ax3tJ3NeaMn-ZvL100ynE3uyloE5Jlc4vTsoDRrjlEQXaE1LJ9bI87qojpTGj_-URfCGmPGQ8muTjlXVgEqvL7Nsv5VHB9E0sfy8PvmJsnr72xOx7JV-eZH_fb_IyynqJzF5HF0xqVy8rwFAAZArxIhmZ92RgrzTXmHTrMH2npfyWzNA78oaoJ5MY1mvkbX5YaWUfiLj7HziT5VIJNgAA"
  },
  {
    "tags": [
      {
        "x-id": "http://ncats.nih.gov/translator/",
        "name": "translator"
      },
      {
        "x-id": "http://purl.bioontology.org/ontology/MESH/D016907",
        "name": "Adverse Drug Reaction Reporting Systems"
      },
      {
        "name": "drug"
      },
      {
        "name": "protein"
      },
      {
        "name": "pathway"
      }
    ],
    "security": [],
    "_meta": {
      "github_username": "ntatonetti",
      "url": "https://raw.githubusercontent.com/tatonetti-lab/nsides/master/nsides/nsides_oas3.yaml",
      "timestamp": "2017-10-26T17:55:29.675725"
    },
    "servers": [
      {
        "url": "https://www.nsides.io/api/v1"
      }
    ],
    "components": {
      "links": {},
      "requestBodies": {},
      "parameters": {},
      "examples": {},
      "securitySchemes": {},
      "headers": {},
      "schemas": {},
      "responses": {},
      "callbacks": {}
    },
    "openapi": "3.0.0",
    "_id": "b2dd6372009df54206670648e16eaa90",
    "paths": [
      {
        "path": "/aeolus/ingredientList",
        "pathitem": {
          "get": {
            "operationId": "ingredientList",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [],
            "description": ""
          }
        }
      },
      {
        "path": "/aeolus/drugpairReactionListMedDRA",
        "pathitem": {
          "get": {
            "operationId": "drugpairReactionListMedDRA",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [],
            "description": ""
          }
        }
      },
      {
        "path": "/sider/drugForEffectFreq",
        "pathitem": {
          "get": {
            "operationId": "drugForEffectFreq",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "q",
                "in": "query",
                "description": "The umls id for the effect"
              }
            ],
            "description": ""
          }
        }
      },
      {
        "path": "/nsides/estimateForDrug_Outcome",
        "pathitem": {
          "get": {
            "operationId": "estimateForDrug_Outcome",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "drugs",
                "in": "query",
                "description": "One or more drugs to pull the top estimates for. For example use 1309944 for amiodarone."
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "outcome",
                "in": "query",
                "description": "The outcome identifier (snomed) to get the disproportionality estimate for. For example use 313217 for atrial fibrilation."
              },
              {
                "required": false,
                "schema": {
                  "default": "dnn",
                  "type": "string",
                  "enum": [
                    "dnn",
                    "lrc",
                    "nopsm"
                  ]
                },
                "name": "model",
                "in": "query",
                "description": "The model type used to estimate the statistics. Can be dnn (default), lrc, or nopsm."
              }
            ],
            "description": ""
          }
        }
      },
      {
        "path": "/va/get_ddi_alerts",
        "pathitem": {
          "get": {
            "operationId": "get_ddi_alerts",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [],
            "description": ""
          }
        }
      },
      {
        "path": "/sider/drugForEffect",
        "pathitem": {
          "get": {
            "operationId": "drugForEffect",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "q",
                "in": "query",
                "description": "The umls id for the effect"
              }
            ],
            "description": ""
          }
        }
      },
      {
        "path": "/aeolus/drugpairReactionCounts",
        "pathitem": {
          "get": {
            "operationId": "drugpairReactionCounts",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "q",
                "in": "query",
                "description": "The starting position (for pagination) of results to pull"
              }
            ],
            "description": ""
          }
        }
      },
      {
        "path": "/omop/reference",
        "pathitem": {
          "get": {
            "operationId": "reference",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "q",
                "in": "query",
                "description": "The adverse event to pull reference (e.g. case and control) data. "
              }
            ],
            "description": ""
          }
        }
      },
      {
        "path": "/druginfo/jobIndexes",
        "pathitem": {
          "get": {
            "operationId": "jobIndexes",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "name": "drugs",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "description": ""
          }
        }
      },
      {
        "path": "/aeolus/drugReactionCounts",
        "pathitem": {
          "get": {
            "operationId": "drugReactionCounts",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "q",
                "in": "query",
                "description": "The starting position (for pagination) of results to pull"
              }
            ],
            "description": ""
          }
        }
      },
      {
        "path": "/aeolus/reactionListSNOMED",
        "pathitem": {
          "get": {
            "operationId": "reactionListSNOMED",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [],
            "description": ""
          }
        }
      },
      {
        "path": "/omop/conceptsToName",
        "pathitem": {
          "get": {
            "operationId": "conceptsToName",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "q",
                "in": "query",
                "description": "A comma separated list of omop concept ids."
              }
            ],
            "description": ""
          }
        }
      },
      {
        "path": "/lab/ae_to_lab",
        "pathitem": {
          "get": {
            "operationId": "ae_to_lab",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [],
            "description": ""
          }
        }
      },
      {
        "path": "/gote/gpcrFromUniprot",
        "pathitem": {
          "get": {
            "operationId": "gpcrFromUniprot",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "uniprot",
                "in": "query",
                "description": "Uniprot id for the GPCR"
              }
            ],
            "description": ""
          }
        }
      },
      {
        "path": "/nsides/topOutcomesForDrug",
        "pathitem": {
          "get": {
            "operationId": "topOutcomesForDrug",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "drugs",
                "in": "query",
                "description": "One or more drugs to pull the top estimates for. For example use 1309944 for amiodarone."
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "numResults",
                "in": "query",
                "description": "Number of top outcomes to pull (e.g. 10)"
              },
              {
                "required": false,
                "schema": {
                  "default": "dnn",
                  "type": "string",
                  "enum": [
                    "dnn",
                    "lrc",
                    "nopsm"
                  ]
                },
                "name": "model",
                "in": "query",
                "description": "The model type used to estimate the statistics. Can be dnn (default), lrc, or nopsm."
              }
            ],
            "description": ""
          }
        }
      },
      {
        "path": "/snomed/getOutcomeFromSnomedId",
        "pathitem": {
          "get": {
            "operationId": "getOutcomeFromSnomedId",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "q",
                "in": "query",
                "description": "Snomed outcome concept id."
              }
            ],
            "description": ""
          }
        }
      },
      {
        "path": "/aeolus/reactionListMedDRA",
        "pathitem": {
          "get": {
            "operationId": "reactionListMedDRA",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [],
            "description": ""
          }
        }
      },
      {
        "path": "/aeolus/drugpairList",
        "pathitem": {
          "get": {
            "operationId": "drugpairList",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [],
            "description": ""
          }
        }
      }
    ],
    "info": {
      "contact": {
        "email": "nick.tatonetti@columbia.edu"
      },
      "version": "1.0.0",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "termsOfService": "http://nsides.io/terms/",
      "title": "NSIDES",
      "description": "The NSIDES API makes several data resources available that are useful for studying adverse drug reactions and drug-drug interactions. Unless otherwise noted, drugs are coded in RxNorm identifiers and outcomes are coded as SNOMED identifiers.\n\nThe following resources are available through this API: \n\n1. AEOLUS, a cleaned up version of the FDA Adverse Event Reporting System\n1. nSides,,confounding-corrected disproportionality statistics using multiple machine learning models\n1. SIDER, side effect data from the drug product labels\n1. GOTE, a resource of GPCRs and their targeted downstream pathways\n1. VA, a list of known and critical drug-drug interactions\n1. OMOP, access to the common vocabulary for name and concept identifier mapping\n1. SNOMED, vocabulary for mapping names and concept identifiers\n1. LAB, a knowledge resource that maps adverse events to common clinical pathology reports\n"
    },
    "externalDocs": {
      "url": "http://nsides.io",
      "description": ""
    },
    "~raw": "H4sIAJEh8lkC_-1Z3W_bNhD_Vwg9JYAjxU2xoX2aGztdgCQu4nYv6xDQFCVzoUiVpOwYRf733VGULbtu0rXSy7onSfy4u9_xPqnPEdNFqRVXzkavyefIclYZ4dYztuAF92OPAxJZ_KSbT0alnFN2vxkw_FPFrXujU7HdtOA05WbzKYXabiipoQV3rWn-QItS8hZJC4LZMFCvgPWKyrFmtbCVkfCMFs6Vr5NEWZFyGwsdwVp4Y0aUTmiFSyLcr0uuaCnw-yw-jU8jL4db1MQSyrWsbCJUbjjAUO5KWOencl4_d4T-868DbFBVVVFQs24-gamhOH-Z4tAe9X2cQDCjlXThfYf4uJ4izYbo8dGrpRE8NVVeUmFuOWW4Bxlc83R8O-oaxBOcOgGEB2k8ngttJlnGmbsAC3sCxmdvgQJUC1_OVBzIKJhHNp9QKOE5gpECqC8hv19wUhXSEpGSTBvi4Jt7vtHG-D1Xty49TesMnCQI_N3620XWidpqB0jAD0VBHQcOY2B0N60cODn_Tu2hrPZ5DU4VJ6C4QhtO_BbiNCkrKb0unS5JI5ZFDccEpCPB5UllORmenb569fKlVz8thE6pgbAUP6f_AXlKeB2gf5MBhMVgA-CdIhPckCOrYCQ9RjCgOo8lFbY0utQG91IJsXID7TCys-HZi-GvNTAQm0qSibkR0hvEvwWYUWnbCAudcvlt-PxSggxQrBQxbQRHYNaBRDDAbEzOqSJzwKoUOQqmeDwg0rABnrLSpS32JeeqKtCYItiEU7AYH35tVLtJY9LNkm686Wv23olPLWkCB3-XpuKOSm5Cluwwlu5R7yt-_jdjZ6_581xX6snz7kBx4HMQR1ROSm0FTpAj1GFJc6E86GOiM5QYBN-E1N70egB9JwrWhS4TwzNuuGK8X43SdAnEwASXEMU3SWjDnBzxOI8Jo7CEqpQwrZzR8pik1NGY9KLaLfJOtIknJVSmk7_1_FKl_IHbjnN75xpoSdq1x_683tqHpwbFmlZhP7uZXk_GXae9Axy6CzXg1IyXzr7XN7ToMd6MIHwASGI5knVQU0mAgzaAYpAgBiRGG_diBXs4O1GgpHOwgjun7-Ct61PfEu5E1lw7nuQlMxdGFx-UgLr8ewudKux-9swDm3a18_bd-W0v57sPrcsuEVqyUCjbUDj_jA0i9Cy3dbh-HsFNVcyhJwTvRmlDt7iFURcWw9Pj_zu6H7X7A7bZTV_ku3ls6AJ5dK6ZH_SMe0oTNYfN_cI2LfSTFb4Cr6_6oJ8rRtPT1eJer9fHFe8O7R8WGqV2NA92-HAi0vaVN6POxkos4lwvE2eospI6bZKoZaHb4cjHnj0aZWVkPBcaGiEtdb6OtcmT5iO5nsx-T8anw19enf7aJjoKbRY6J2kqUXjx92JQIc_W1vHC1hzbqWJ3BNMaB-_ZHaRusaLryJt_80OiOQ7sfLzysHOj4WIDHEj4XwFKsPsYoh5kBufEbwwOu5gLGvO08r8AUOig7WHzC8AJJz3fm9nleDLzkU4wjgfw5U-G1WoV05KCz3o9hYU2ubo8n9zMJicvgOrCFXJHV349gSkvw4FAXnMmo3eXpKD3kFQstK-GSt-Voj3oyjAYpkvASecSwzt1hBof-LNK-qxoXZWuUflND4z6Jo0nWd_v4tCJHxcKrDxMxeSDktxaoiFtmJWAvQoOJh2EVI2MGCSbFHaR24cbbYrWNWlNeZMQt4upJXVt314cf1QfFYLOtJR6hfK2AMLeNkijq3wBT2FROa8J7h3GZDSZXn2YDQglTHKqgFVVknC2PkED-YvxiDRWOvGXAfvW6UmpGZZDgwGYUwaNVArTJ0wbwxnW8wcue7dJFXSPxArwWYFVSgHHLKDMAZGM8jOYn61ngwd8OyBYe4XbsfpsMwjR9bUyngnwSiuYAvjNxrfT9xME2ugI4WHBWSsddgooQqmB-IXi6pWC5MFpQYIT1UT-GCGJpjm5V7Csvv0AzxIM7eygWfi90-vpO9jNGNoHVBgoLLY9oOmlZnReSQiF3v7Q3ptLlZDhNjfpBS1LUEmtC28Tg_3tYYknY79CpxbpavQG8SAOydOcb5Xj3QII2d17IC94EJpJoTxm1JAPcrAdTxho-3DATWGn2YybpfCXVV_8X0z8ksQ7s4VlmyqhFSpsiBXbTbQUyXIIQe3xH-ZIknF1HQAA"
  },
  {
    "tags": [
      {
        "x-id": "http://purl.bioontology.org/ontology/MESH/D005796",
        "name": "Genes"
      }
    ],
    "x-externalResources": [
      {
        "x-type": "api documentation",
        "x-url": "http://example.org/api/docs"
      },
      {
        "x-type": "publication",
        "x-description": "BioGPS and MyGene.info: organizing online, gene-centric information",
        "x-url": "https://doi.org/10.1093/nar/gks1114"
      },
      {
        "x-type": "social media",
        "x-url": "http://twitter.com/mygeneinfo"
      }
    ],
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-09-27T14:33:10.316153",
      "url": "https://raw.githubusercontent.com/SmartAPI/smartAPI-editor/master/node_modules_changes/mygene.info.openapi.v3"
    },
    "servers": [
      {
        "variables": {
          "basePath": {
            "default": "v3"
          },
          "port": {
            "enum": [
              "8443",
              "443"
            ],
            "default": "8443"
          }
        },
        "x-location": "California, USA",
        "url": "http://mygene.info/{basePath}",
        "description": "Development server"
      }
    ],
    "externalDocs": {
      "url": "https://docs.mygene.info",
      "description": "Find more info here"
    },
    "openapi": "3.0",
    "_id": "a9baab984f6af0021aaece6a163e0cf4",
    "paths": [
      {
        "path": "/gene/{geneid}",
        "pathitem": {
          "get": {
            "tags": [
              "gene"
            ],
            "responses": {
              "200": {
                "x-JSONLDContext": "http://www.w3.org/ns/anno.jsonld",
                "x-responseValueType": [
                  {
                    "path": "ec",
                    "valueType": "http://identifiers.org/ec-code/"
                  },
                  {
                    "path": "ensembl.gene",
                    "valueType": "http://identifiers.org/ensembl/"
                  },
                  {
                    "path": "ensembl.translation.protein",
                    "valueType": "http://identifiers.org/ensembl/"
                  },
                  {
                    "path": "ensembl.translation.rna",
                    "valueType": "http://identifiers.org/ensembl/"
                  },
                  {
                    "path": "entrezgene",
                    "valueType": "http://identifiers.org/ncbigene/"
                  },
                  {
                    "path": "generif.pubmed",
                    "valueType": "http://identifiers.org/pubmed/"
                  }
                ],
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "reporter": {
                            "properties": {
                              "HuGene-1_1": {
                                "type": "integer"
                              },
                              "HuEx-1_0": {
                                "type": "integer"
                              },
                              "HG-U133_Plus_2": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "HG-U95Av2": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "HuGene-2_1": {
                                "type": "integer"
                              },
                              "HTA-2_0": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "array"
                    }
                  }
                },
                "x-responseSchema": "http://www.w3.org/ns/anno.jsonld",
                "description": "Successful response"
              }
            },
            "operationId": "getAnnotation",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/ncbigene",
                  "http://identifiers.org/ensembl"
                ],
                "x-exampleValue": "1017",
                "name": "geneid",
                "x-parameterType": "InputParameter",
                "x-defaultValue": "add default",
                "in": "path",
                "description": "Entrez or Ensembl gene id, e.g., 1017, ENSG00000170248. A retired Entrez Gene id works too if it is replaced by a new one, e.g., 245794"
              }
            ],
            "summary": "add summary"
          }
        }
      },
      {
        "path": "/query",
        "pathitem": {
          "get": {
            "tags": [
              "query"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "x-responseValueType": [
                      {
                        "path": "a.id",
                        "valueType": "http://example.org/a.id"
                      },
                      {
                        "path": "a.b.c.id",
                        "valueType": "http://example.org/c.id"
                      }
                    ]
                  }
                },
                "description": "Successful response."
              }
            },
            "operationId": "add operation id here",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/hgnc.symbol",
                  "http://identifiers.org/refseq",
                  "http://identifiers.org/unigene",
                  "http://identifiers.org/uniprot",
                  "http://identifiers.org/pdb"
                ],
                "name": "q",
                "schema": {
                  "type": "string"
                },
                "x-parameterType": "InputParameter",
                "in": "query",
                "description": "Query string. Examples \"CDK2\", \"NM_052827\", \"204639_at\". The detailed query syntax can be found at http://docs.mygene.info/en/latest/doc/query_service.html"
              }
            ],
            "x-accessRestriction": "fee",
            "summary": "Makes gene query and returns matching gene list.",
            "description": "Makes gene query and returns matching gene list."
          }
        }
      }
    ],
    "info": {
      "contact": {
        "x-role": "responsible developer",
        "x-id": "http://orcid.org/0000-0002-2629-6124",
        "name": "Chunlei Wu",
        "email": "help@mygene.info"
      },
      "version": "3.0.0",
      "x-implementationLanguage": "Python",
      "termsOfService": "http://mygene.info/terms/",
      "x-maturity": "production",
      "title": "MyGene.info API (for test)",
      "description": "MyGene.info provides simple-to-use REST web services to query/retrieve gene annotation data.  It supports all species with known genes and provides always up-to-date gene annotations (updated weekly). Learn more about [MyGene.info](http://mygene.info/)."
    },
    "components": {
      "securitySchemes": {
        "petstore_auth": {
          "flows": {
            "implicit": {
              "authorizationUrl": "http://example.org/api/oauth/dialog",
              "scopes": {
                "write:pets": "modify genes in your account",
                "read:pets": "read your genes"
              }
            }
          },
          "type": "oauth2"
        },
        "api_key": {
          "name": "api_key",
          "type": "apiKey",
          "in": "header"
        }
      },
      "responses": {
        "IllegalInput": {
          "description": "Illegal input for operation."
        },
        "NotFound": {
          "description": "Entity not found."
        }
      },
      "parameters": {
        "limitParam": {
          "required": true,
          "description": "max records to return",
          "name": "limit",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        },
        "skipParam": {
          "required": true,
          "description": "number of items to skip",
          "name": "skip",
          "in": "query",
          "schema": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "schemas": {
        "Category": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "Tag": {
          "properties": {
            "id": {
              "format": "int64",
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      }
    },
    "~raw": "H4sIABYZzFkC_71YWVMbORD-K6p5Sqrw-CIk5GnZQAi7OdiYZB8SipJn2raCRhokDWZC8d-3uzXj2GAD2U0tVYmx1P31fYjrpJRh5pOX4jrpTsFA95r-V_kNH00h8KctwcmgrDnK8Tsd7xljAx8lWyIJckoYXxJiTk7xpJROFhDA8fl14uCiUg6IPbgKkMLgfQQjeYRy1clhIisdPktd8Z3Mc9GcRYJLujmpS2BpsxDKl92uysEENVEoLLVu2jXZWLEiyLKBBIyHYqxZ1avOQtkGOTkyZRWO21PCycFnTpVsMBIcmODgu7BOHEQkQQKFyrcEpNN0S_R7_edb4uD96LBHP_3nvcH2i1TsCQeB_CAahMPIJubWnXsRrBVqIlQQyiNlqWWGpONaSGFgLqyBFn-w_ez57nZ0ClzJotSw8BrJphvFqlKAkxsy1IEvLaobwz3o9fgzsyagc_h3WZZaZRzW7jfPpl4nPptBIfnX0PhHOidrFhGgiHCloyQJqkFH5a0j3y2z2fE3yDiSt6jfVOSHTv-sv0KvULMpYtwgx5vq4AoJepsJTvY6g1v3Pjhlpg0_ixjcJ-Kw86k_HJ4d68qfDR4y-LaMFmH32d7lzzM3P3czbVRlGXg_qbRo4xej3n4bteFpc30-n6fzYawE35VYqCnFUjc19sfow_u3-68o6lfh8WytuM_LFXgdswtBICOy5fLcWHpZJ7M5dMnlS_yxjNK2bh-FFHk2IAUnjdecyymmWwBlfj2wM_K_glIb-Bmr2-52C4iOnJqkZTUuIH8sWKRGqFPOPV8VhXR123rbr3zXvaiAr36MhauO5OT8CJTHWZuyE4A1LfOdPAcf2yQjCWly6oaVM14UMmQzrIR4r5UPabJmityC_ItxYg2l4iC2QS--Jq_2_xx8RYCvyft3Z71ngxeD5_HroLe9M9w9k-FrkoqTGeB0CVJpbLJRJ1-bIK9EJo0Yg5jYCnWUQTTey23m06ImHVNlJhZj2sVEQOvpKjrozIO7VBmks1DohLvupsl3QddruutS13rkxJtNTZb6uhhbfc_QczDxcHEPQWUemptIQbV0D0WZj3mqxuETc-ZRQ5ZH1K1Fg5JwcURjcgYOVhaOKOB0NXf_TaqtH44PN2NmfnCGPtg_Zao2Fm0z39m9TLdS-DIdp9kjuZmOar0dNuhcI0tF5MO0F5eGiV1n-rv6sE17gSlwiXH3wiuC7gTbqTyIjwejEzGHsWhKgPaZGABMPcxpuITodLlYHkUug0yFOArYbEpaGbyQWgtfQobLgZirMBPnxs4Nc3qO5EK81HNZe1GVpAEi3YH34klV0gUuWADnun6aircgnRGFdUg4tlUQX5ZMO33SeG25yp8uYiyztvGpfMnF1mUqZwfTrtfBf4POYGew29npD5odzVnNQWnSQI019Z5L0JTeRIJNQGnGBF3-tiQ-WeoYr2aV0aDE3xV3Byybwn-YjKK7lxRa1p6JupwdWKNNNDHYMdxXHayHyqnAhYOezatssdWrEJVejv3e8ZF4MsHFl9re0wjBWVBgAbDT30ozreSUOY_rMEOwm6WSveO9snI6HSuL_rXaTmt2ZPul--5g9Ka73-vhuruz7ArSyMemQem2GBEItsER12Pp4Rir5mbNdNqPsSAjRMSLpmkbS5m9L7VCy42SW-LTaC8WnFMSYxm7RiugqZ_4bkHGyyF7gNL79tWL7e0hh99UBTe09oA-qFBPmxUfw2ikxklrK5fBwpOr5q50ilLxwIp2LHbRUgk8rRbRis1kBcjzqFOM0u-l_d7usGuk607Pfb_f314FxA2ibXftG27Fsb8re3g84rpdSqOX-HSaSqO-UyPGJVPRy4ZC1cloI1KZICpXbFIRNQzYG9ApaWaLJsxttfxQzttMSS1wxVEy5krryH3yDMXijt2rI35NqrxWaAv3Dy4IHkk33CAKLG1UPwJ7yLiueD9vEqSE4ANynsmqyZLF04hOBiRtou08UlNZqUyF5hWGnSKezxEWXhIWcRY2V5O6aY_KiBoTROBehrtLiINN5gti-hIpprF-kIAkW6e-s68_3ZtPrGUXnYmlmcQJgsdn51CvPnhK9SfUP56gM5QaC6qt3pYrbp28AkXbTuT0cU9GbiF333HkQM6b5nBnm21s5K57eG1RYSOzdfX_LPnmztpxpDVMpebNaN0Qbu4xzEggqAsvtqOUpb234TUtreuYD3BPC7XA2RgX2zR6f2XHvk60KlTcyjY9_jcZPBwka96vBa7TDjLrcl4H4haW3F0QN6_JrBFD-3NV_kLVsOWOAV1If3DBhzmpRxJ-SjlmoFj-A7LZosZKEwAA"
  },
  {
    "tags": [
      {
        "x-id": "http://ncats.nih.gov/translator/",
        "name": "translator"
      },
      {
        "x-id": "http://purl.bioontology.org/ontology/MESH/D016907",
        "name": "Adverse Drug Reaction Reporting Systems"
      },
      {
        "name": "drug"
      },
      {
        "name": "clinical data"
      }
    ],
    "security": [],
    "_meta": {
      "github_username": "ntatonetti",
      "url": "https://raw.githubusercontent.com/tatonetti-lab/deltaQTDb/master/deltaqt_oas3.yaml",
      "timestamp": "2017-10-26T19:04:28.360340"
    },
    "servers": [
      {
        "url": "http://www.deltaqt.org/api/v1"
      }
    ],
    "components": {
      "links": {},
      "requestBodies": {},
      "parameters": {},
      "examples": {},
      "securitySchemes": {},
      "headers": {},
      "schemas": {},
      "responses": {},
      "callbacks": {}
    },
    "openapi": "3.0.0",
    "_id": "c43e12f0bdc350310288a2ec4db237c9",
    "paths": [
      {
        "path": "/query",
        "pathitem": {
          "get": {
            "operationId": "query",
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "summary": "",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "drugs",
                "in": "query",
                "description": "One or more drug identifiers. For example use 1309944 for amiodarone."
              }
            ],
            "description": ""
          }
        }
      }
    ],
    "info": {
      "contact": {
        "email": "nick.tatonetti@columbia.edu"
      },
      "version": "1.0.0",
      "license": {
        "name": "Creative Commons BY-NC-SA 4.0",
        "url": "http://creativecommons.org/licenses/by-nc-sa/4.0/"
      },
      "termsOfService": "https://github.com/tal-baum/deltaQTDb",
      "title": "\u2206QTDb API",
      "description": "\u2206QTDb (delta QT Database) is a resource for exploring the effects of one or more drugs on the QT interval. It has been built from a deidentified subset of electrocardiogram and drug exposure data at Columbia University Medical Center.\n\nFor information on how the database was develeoped see the [Frequently Asked Questions](http://deltaqt.org/faq).\n"
    },
    "externalDocs": {
      "url": "http://deltaqt.org",
      "description": ""
    },
    "~raw": "H4sIALwx8lkC_21UTXPbOAz9Kxid2pm15LSZdtJT03g7zaEfWXcPO00OEAlJnEikQoJ2PBn_9wUp27GbniR-4OHhPYBPhXLD6CxZDsUHeCoCqegNb5aqo4Hy3vYvKEJa4mGpsO9rVPeHDU8PkQJ_cto8B3WEmvxh2Rv7HDCix4H46JgecRh7OoIMQizsNqYbct9iv3BqIht9L9-iYx4_VJWmnvGBS-fbQm5rCsqbkY2z6VKRENxIFkeT1m_LeTkvMhPuJrhKavCb_NsS5-8JzV9PuU7jScuKfSQJt3Ke8LSPbUh4JqeboF7S-G4JnIfBeYIUAkaL9qYxkqKEz3K00wFiIDh7O7-4OD-HRvZxME6jF6_K4uBIJsmbMVMI7I1ti-327g_lp5A4DJgLzEsRw2M6v9YnjE-EF5wGY8-7_xPMxXQE-wDJvM1GMbY7vR5nRh9ZZBVyKK3pytatKvZoQ4_sfFUcKfm8nTx7gTGK62VtnLPsetdukt_VflF9_Xv5pVrMz95dzN8fg17qlShMsEia_0OoUhHyMzrPIhosN4FpCFPGY09Pd5Q0sZHuB42MRRZ6PzGp4Lvsf-OyWkpISZ78L1aZ3KsSfV-yFGeJ2XxUro9DbbAkHXOHJpY7ec_2HcqG-5z9Nr55M39383NRw-WP6yLPlKKk_MtpUJ7E3BXJfA9iTlZpdztU9WZm1SxgdV7OT7S_2kXB1RQGn_6bfbuaLS9BbmaCv_XAEaVXeQDh5icsRJwaA70GEwBTf7joFeU2psexd6lPgTsCahpSHMA14H6bDNm0-Y4AGisjuMK-hGuGDgPURBbqaKT7Gu8GSaLpMEkaQqwDcUKlXvC9U-i1ca0MM6DV0-QJExdiyiZ0AVlqnsyAf63JPvAGvpLOfl9RolDe2lubhjSZ7Ic8PYlm59aZqt4VDmvhqGkl2WXKhA9RPv_1OT-UlvsNXIZ7OblJz6aghLtXL5-xqsGH15IzNwH5IXxvlqKDuLg3OkhAa7iLdSlGV4z9rMY4TCDJlexZkKDDE3baJuv1ujzOKK9jtTqTzt7-D4Vx5IEbBgAA"
  },
  {
    "tags": [],
    "security": [],
    "_meta": {
      "github_username": "leechuck",
      "timestamp": "2017-09-27T14:33:10.582749",
      "url": "https://raw.githubusercontent.com/bio-ontology-research-group/lodvectors/master/apidocs/smartapi3.yaml"
    },
    "paths": [
      {
        "path": "/sim.groovy",
        "pathitem": {
          "get": {
            "security": [],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "sparql": {
                        "externalValue": "https://raw.githubusercontent.com/bio-ontology-research-group/lodvectors/master/apidocs/api_sim_response_example.json"
                      }
                    },
                    "schema": {
                      "$ref": "#/components/schemas/response"
                    }
                  }
                },
                "description": "Will either return the vector representation of the resource or the ten most similar vectors."
              },
              "405": {
                "description": "Server error"
              }
            },
            "operationId": "type",
            "parameters": [
              {
                "required": true,
                "name": "type",
                "schema": {
                  "type": "string",
                  "enum": [
                    "getvec",
                    "sim"
                  ]
                },
                "allowEmptyValue": false,
                "in": "query",
                "description": "One of two keywords determining which operation to perform. \"getvec\" will retrieve vectors, while \"sim\" will find the ten most similar vectors."
              },
              {
                "required": true,
                "name": "query",
                "schema": {
                  "type": "string"
                },
                "allowEmptyValue": false,
                "in": "query",
                "description": "The URL of the resource which should be queried. Depending on the type of the query, will either return the vector representation of the resource or the 10 most similar resources together with their cosine similarity values."
              },
              {
                "required": false,
                "name": "smart",
                "schema": {
                  "type": "boolean"
                },
                "allowEmptyValue": false,
                "in": "query",
                "description": "Whether to return SmartAPI metadata in the query. Defaults to false."
              }
            ],
            "summary": "Allows retrieval and similarity-based search of LODVectors.",
            "description": "The API allows retrieval of vector representations of resources in JSON format, and also performs similarity-based retrieval (using cosine similarity) of related resources, given a resource."
          }
        }
      },
      {
        "path": "/tsne.groovy",
        "pathitem": {
          "get": {
            "security": [],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "sparql": {
                        "externalValue": "https://raw.githubusercontent.com/bio-ontology-research-group/lodvectors/master/apidocs/api_query_response.json"
                      }
                    },
                    "schema": {
                      "$ref": "#/components/schemas/response"
                    }
                  }
                },
                "description": "Description"
              },
              "405": {
                "description": "Server error"
              }
            },
            "operationId": "query",
            "parameters": [
              {
                "required": true,
                "examples": {
                  "sparql": {
                    "$ref": "https://raw.githubusercontent.com/bio-ontology-research-group/lodvectors/master/apidocs/api_query_example.sparql"
                  }
                },
                "name": "query",
                "schema": {
                  "type": "string"
                },
                "allowEmptyValue": true,
                "in": "query",
                "description": "A valid SPARQL query"
              }
            ],
            "summary": "Perform a SPARQL query on the server enhanced with vector representations.",
            "description": "Queries the UniProt SPARQL endpoint and for each URI it can matches, it injects x and y coordinates of a vector representation using an t-SNE transformation. New fields are added with the suffix \"_coord_x\" and \"_coord_y\". "
          }
        }
      }
    ],
    "externalDocs": {
      "url": "https://github.com/dbcls/bh17/wiki/LODVectors",
      "description": ""
    },
    "openapi": "3.0.0",
    "_id": "1ed4e03b8402425ef785360ada623776",
    "servers": [
      {
        "variables": {},
        "url": "http://jagannath.pdn.cam.ac.uk:31337"
      }
    ],
    "info": {
      "contact": {
        "x-role": "responsible developer",
        "email": "robert.hoehndorf@kaust.edu.sa",
        "name": "Robert Hoehndorf",
        "url": "https://www.kaust.edu.sa/en/study/faculty/robert-hoehndorf"
      },
      "version": "0.1.0",
      "x-contacts": {
        "x-role": "documentation editor",
        "email": "michel.dumontier@maastrichtuniversity.nl",
        "name": "Michel Dumontier",
        "url": "http://dumontierlab.com"
      },
      "termsOfService": "https://github.com/bio-ontology-research-group/lodvectors/blob/master/apidocs/termsofservice.md",
      "title": "LODVectors API",
      "description": "The LODVectors API focuses on computation involving knowledge graph embeddings."
    },
    "components": {
      "links": {},
      "responses": {},
      "parameters": {},
      "examples": {},
      "securitySchemes": {},
      "headers": {},
      "callbacks": {},
      "schemas": {
        "response": {
          "properties": {
            "results": {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            "meta": {
              "properties": {
                "smartapi:resultCount": {
                  "type": "integer"
                },
                "prov:wasGeneratedBy": {
                  "format": "url",
                  "type": "string"
                },
                "smartapi:errors": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "smartapi:warnings": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "smartapi:urlCalled": {
                  "format": "url",
                  "type": "string"
                },
                "@context": {
                  "format": "url",
                  "type": "string"
                },
                "prov:generatedAt": {
                  "format": "dateTime",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      }
    },
    "~raw": "H4sIABYZzFkC_91XXW_bNhT9K4S2hw2IJWdZUSBPzZpi69A1adyPh6YIKPHKYkORKklZMQL_991LSortOK0bdC97sild3o_Dc8-lbpPC1I3RoL1Ljtlt0nDLa_Bgw3J1wJIKuFhbKqmvxwXc8LpRMK5dUUHNoycLDh07CAu_bOhPYvLPUPgETRtrGrBexs0JxuT7WbqaW88beQzWmpjXuIlby5e0R3qoN185b6WeJ6tV9Lg47rj7EzRY7kH8sdxli5alsTX39Ky1KgklDuHxwXOuFIi9t4aw8yHmif_mRoF2b2UNm4ER2Fb556bVmx6k9jAHu2nccavR76NgelYYdHnj9yswbIm57R2tP-TVKu52ULRW-uWMaHTHqoFJ44MCcc950fOQniBDNJZLPo_SaToN4XRpQjQBrrCy8dJoMnhbAXt1dvoeIyN_2Mn5S1aaokX_zGhG_dB6TsZM6oVRCyyXXWvT4VHPgc0tbyoGdQ5CELAphSKgeBGBIjAwSuV9446zrOu69Jq3zqcg2tTxDHTmfCuWWckLxGqZWZMjvSeVgUoLY0tyeDOxRgWI-uJlroAJWICiZiATbDQZIsX96bj_2Xo4stTY0WR4EQzZX2MgQg5bvXZn5QzsQhawnvlc-qrNUwQky6WZYIlGmflyghkBt0U1mVvTNpkyYhGhzHJl8gz7H31meBrCFC4L_k3pov-0FrG8HjG3DRnGFW2NLyVYxUP0TTzQaVujXMUTAiEx8gYctUT2qHT08qzmnEhbVL7VcoFShgxLtVpH5p-wh50OewIywTRSZpoeRk556WMamwSKSPLQZh8_BSbbRRTNj9vlfeZzrjX3VdoInRa8TnmRttfHR4dHR08pxoJbyfNBVVfkrkHzCFXmZJ0i8GYRJWsO_iGOE7GxUUznmAUEABZcMVOyeFr4rKGT7JF09AbXprUFNoLU7O_Z2WsWe_yAcS3QlzMMyUfPHMM8pOLUrZOcOxBrMX5pHfVMYfAH1gx_jTEUqd9drAM2x1PRjI-PQksNWjAgujGYPt4r-AwjoXffGXYNy85Y4bBdiHyS9I91FR4xo96JxPFjKSm7JBQRlcuEdVKpoRLokcIMcTe232WCtQxGpURIPMLsMffaOD8UOuwKVVj40kobZoS3LaxRLkggrsMJvagbv3zPVUuvSgQaxmH6gPiCbmsCok89ICbr5NMqCB_ZfmnBLomYO8nx7uJVwAv_DrD3GLnKtEqwHBh5kCBSdgoor6R2JJChZsxn2B7iHERQACUDiFq-tdFyJ9nuRUYLWh9ON5G846M3WCe57jAC2Up7n19sQQh-C_iIyyOR3wfeD1VMFSnWAzGjaUztSLccHOqc-mvEjvAtOY1N2hJy2C5hSGyoIYz3764hN6ihXN8v4lOcoLE1Xop1em7M3uT36ZNdajMLasfChSx4_2063WX34Qdw5KvtFi4s_bWIN42SRfCVfXYhgdt1VH62UFJSP2V3V-Csv8Bm4-V1-5abOBSiLyr8xasRWM3VAP04OS3v0jg98VZh-6S-Z5BuzVD8vcJyr4asrvqM0lDXarw-tTXyghQzOdnWfRLwe5IdwxPSd-MsjXe_zDsNewyaN0EjXDiad1qeW-PZ7Pzk4s0rhpLRGLyUhtiotAw4Bnt38ZJJzwqOx8g9wo3yimup6Sbo2E2wXmJzo4RLHJMQJhN_gCRx0qAvP5m9foGtzrWLMwvfpuw1dCjUoHAYcAuMC4FVDxLCXFuW8gZl_SpEu7pBbafo44PlZZKyRwyjE1IiKQYgRsV5lCj1lvtr0lcYO3D-vyRqSGJkaB98tdolMmvA_ECVOV1b_r81IUI95PWwGpzHmw520Tojh2Huelx1xXUx9MfuS2Laf-YNVZ5iJrs-etY-HUReKPwyqA6fZp28ltmd0tDhbB1dstputtW_xaNMMKIQAAA="
  },
  {
    "tags": [
      {
        "name": "api"
      },
      {
        "name": "metadata"
      },
      {
        "name": "openapi"
      }
    ],
    "_id": "27a5b60716c3a401f2c021a5b718c5b1",
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-10-10T16:14:04.289930",
      "url": "https://raw.githubusercontent.com/SmartAPI/smartapi_registry/master/SmartAPI/smartapi_openapi.yml"
    },
    "servers": [
      {
        "url": "http://smart-api.info/api",
        "description": "Production server"
      },
      {
        "url": "http://dev.smart-api.info/api",
        "description": "Development server"
      }
    ],
    "x-externalResources": [
      {
        "x-type": "api documentation",
        "x-url": "http://example.org/api/docs"
      },
      {
        "x-type": "publication",
        "x-description": "BioGPS and MyGene.info: organizing online, gene-centric information",
        "x-url": "https://doi.org/10.1093/nar/gks1114"
      },
      {
        "x-type": "social media",
        "x-url": "http://twitter.com/mygeneinfo"
      }
    ],
    "openapi": "3.0.0",
    "paths": [
      {
        "path": "/validate",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "description": "default response"
              }
            },
            "operationId": "",
            "parameters": [
              {
                "required": true,
                "description": "The full URL of an input SmartAPI metadata to validate. The file format can be either JSON or YAML.",
                "name": "url",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "summary": "Validate input SmartAPI metadata",
            "description": "Validate input SmartAPI metadata"
          }
        }
      },
      {
        "path": "/query/",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "description": "default response"
              }
            },
            "summary": "Query metadata for matching APIs.",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "q",
                "in": "query",
                "description": "Can pass any string as the query term to match any field, e.g. \"mygene.info\", or pass a fielded query term like \"info.contact.name:wu\"."
              },
              {
                "description": "You can use this parameter to filter the fields returned from the raw metadata document. Only effective when \"raw=1\" is passed. E.g. \"info.contact.name,servers\". Nested fields are supported via dot notation, and multiple fields can be passed as a comma-separated string.",
                "name": "fields",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "return raw metadata document if passed \"1\" or \"true\". Default is \"false\".",
                "name": "raw",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "description": "Query metadata for matching APIs."
          }
        }
      },
      {
        "path": "/metadata/{api_id}",
        "pathitem": {
          "get": {
            "tags": [
              "metadata"
            ],
            "responses": {
              "200": {
                "description": "successful response"
              }
            },
            "operationId": "",
            "parameters": [
              {
                "required": true,
                "name": "api_id",
                "in": "path",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "include \"_meta\" and \"_id\" fields in the response if passed \"1\" or \"true\". Default is \"false\".",
                "name": "meta",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "return raw metadata document if passed \"1\" or \"true\". Default is \"false\".",
                "name": "raw",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "You can use this parameter to filter the fields returned from the raw metadata document. Only effective when \"raw=1\" is passed. E.g. \"info.contact.name,servers\". Nested fields are supported via dot notation, and multiple fields can be passed as a comma-separated string.",
                "name": "fields",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "Number of items to be skipped. Combining with \"size\" parameter, this can be used for the pagination of the long result.",
                "name": "from",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The number of items returned in one request. Combining with \"from\" parameter, this can be used for the pagination of the long result.",
                "name": "size",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "summary": "Return matching API metadata",
            "description": "Return matching API metadata"
          }
        }
      },
      {
        "path": "/suggestion",
        "pathitem": {
          "get": {
            "responses": {
              "default": {
                "description": "Default response"
              }
            },
            "operationId": "",
            "parameters": [
              {
                "description": "An input field to return the suggested values and their occurrence numbers.",
                "name": "field",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              },
              {
                "description": "The maximum number of suggested values to return",
                "name": "size",
                "in": "query",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "summary": "Return suggested values for a give field.",
            "description": "Return suggested values from the existing APIs in the registry for a given field."
          }
        }
      }
    ],
    "info": {
      "contact": {
        "x-role": "responsible developer",
        "email": "cwu@scripps.edu",
        "name": "Chunlei Wu",
        "url": "http://github.com/newgene",
        "x-id": "http://orcid.org/0000-0002-2629-6124"
      },
      "version": "1.0",
      "x-implementationLanguage": "Python",
      "termsOfService": "http://smart-api.info",
      "x-maturity": "production",
      "title": "SmartAPI API",
      "description": "This is the API provided from [SmartAPI](http://smart-api.info) application."
    },
    "externalDocs": {
      "url": "http://smart-api.info",
      "description": "Find more info here"
    },
    "~raw": "H4sIAMzx3FkC_-1XbW_bNhD-K4Q-bYAt22lRoAEGLEu2okOapsleUNRBwVBn-RCJVPjixA3y33dHSo5jK22WdkA_zIDfqOPx7nmeO5I3WSP93GW74iYbLWSFhfQQ_5Xg43cjrazBg2WjDzcZavrOLgPYZTYQmVNzqGW09MuGp2bOW9RldktPNU3loWArNrZwGdBCQUPeBqCRApyy2Hg00e0fcxCzUFXiz5NDYWZCaoG6CV6c1tL6vePXgkKRFKMU3ogu3lzEeVjRh7G19ELRxHMQgH4OVvx--vZIGCve7705zLPbs-11_2o9PbQaB28asJInvOb4s5h8qMly-VgPFlxjtIME9854HL83QilgJkPlRWec3dKLJo8i5KN73GxMfccWdwgRFoLAUHNiQ1AsLucgvsDnhst9ArKRzhETS5GIFdIJglXEKYIc1cxFXChazRCqYiAgL3MxzeplCRpy1DMzJf8UUnKXzKBYd1PhBdAUts2V0V4qn7OCdq_CNIvBd3q67FfTZ8RIED5RuzFQ14PNexOi0IIDAgSdWEHLgJAc46-oTPZAjPpgNaU8s6aOD6y8uqOrMCrUoH0u3upqKWA2A-VxAeJqDppgIeOfJtNMxIWcgyIXvyaMtwAbOLALYphQE0fgPK-ZYpAWhAtNYywPLpCX9UIbH5U9IAILUZP8sKlWcbfFlBZl9qVQhoQ_dMAZs6MEW549HWXKrgfiBFk_TgJnXUzTjIEhbU0zVgKnfdCWEaE1zWaycjyaan-tah9VMV9Xtp3z0Y1s8CMWt4_ortyTHw9d8ttTEU9ng4PuoQO1qkLBNfqRLQhz1gv9w4J-t3JBnbTdAvEkmr53Gf3fTL7rZsKY9GB8FOpzQpHOFeihdgwsheIusGkYgH1Tn6Pm0r-icwNB4fAT0X3HxCAx06YQOAHuGAx-I0vUMW12zyOVIUdUBJT_16TCMWT9ByW9kc5KElSBRnMF0lrO9yTG-HyjxLihelnG9pWtDjtnj22bLigFztGZb71zbud7kip4vTn_i8PZZ2enNu1CWRJYablvfPqN0u8hca873UYDlmPbqBjmNiAuLFkRj7Ga6AES40oFa0GrTgPuP1JYLa-xDvWa0raiWgXde65ugd-atWpacI0Eervb3m0dJY3SxswilKKkvqUTRvmjud5ecuVrzdV9jbZ7eJ9OD_q299s17d-sb8eJjfXNNCltfZSy0NH0bHD3h8af5eN8zLHBNclOy-rAKNcX0m_I7dVYvnLMjKCLTqSRr1r0dO59szsaOb6HDMl1PIFH3q-HnecTcCZYBW0C18NOJWS_2kEi0lmcd981XMuaGntubDmiCaOC44wp3jlqwnmFqt-FIx-FwTh_Ms4n45fPRlraUXnhJpPJ82S_kfMvaF4dn8ZSeLN81V0sdmnPLqXGTywkoyvUdBnga8dQUQIWVUSIL4bsZiNEZxTKitpBgbIvTU89k-CiLbEepctMQpJpi79ieaGvorfVvY_eyRsySCsgD6Uugyyj7fHSzxMuvL22GU4S-VvFSO0Z072LvTfWLLDodv8P3apnP_TS_qOQTdPxkKewCIxg0ceSIW9FUB1JfBVzb2entOujgoe1RKbtMSFCQJ0GI27qKvwcg29cDkVYv7btz4OuAMXfIQVhTUKtrSo8p3NCAQuouMRb-Iq1CIxVWETBjOk1pPfOcOfFzsvhi8nO823xl7TbhfPInIYrpi41-_ZAk1S_gfTxCguRzL5UU6NVvW-1jJhIPGM-5IqSzfvcnd3-A32T3zyZEQAA"
  },
  {
    "tags": [
      {
        "name": "disease"
      },
      {
        "name": "gene"
      },
      {
        "name": "phenotype"
      },
      {
        "name": "annotation"
      },
      {
        "name": "query"
      },
      {
        "name": "translator"
      }
    ],
    "_id": "d22b657426375a5295e7da8a303b9893",
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-10-12T15:27:41.126645",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/biolink/openapi.yml"
    },
    "servers": [
      {
        "url": "https://api.monarchinitiative.org/api",
        "description": "Production server"
      }
    ],
    "openapi": "3.0.0",
    "paths": [
      {
        "path": "/bioentity/gene/{gene_id}/diseases/",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/biolink/jsonld_context/biolinks_disease_context.json",
                "x-responseValueType": [
                  {
                    "path": "edge.obj",
                    "valueType": "http://identifiers.org/doid/"
                  },
                  {
                    "path": "edge.obj",
                    "valueType": "http://identifiers.org/omim/"
                  }
                ],
                "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
              }
            },
            "summary": "Returns diseases associated with gene",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/ncbigene/",
                  "http://identifiers.org/orphanet/"
                ],
                "name": "gene_id",
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/ncbigene/",
                    "template": "/bioentity/gene/NCBIGene:{{input}}/diseases/"
                  },
                  {
                    "valueType": "http://identifiers.org/orphanet/",
                    "template": "/bioentity/gene/Orphanet{{input}}/diseases/"
                  }
                ],
                "in": "path",
                "description": "CURIE identifier of gene, e.g. NCBIGene:4750, Orphanet:173505. Equivalent IDs can be used with same results"
              }
            ]
          }
        }
      },
      {
        "path": "/bioentity/gene/{gene_id}/interactions/",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/biolink/jsonld_context/biolinks_interaction_context.json",
                "x-responseValueType": [
                  {
                    "path": "edge.obj",
                    "valueType": "http://identifiers.org/ncbigene/"
                  }
                ],
                "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
              }
            },
            "summary": "Returns interactions for a gene",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/ncbigene/"
                ],
                "name": "gene_id",
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/ncbigene/",
                    "template": "/bioentity/gene/NCBIGene:{{input}}/interactions/"
                  }
                ],
                "in": "path",
                "description": "CURIE identifier of gene, e.g. NCBIGene:4750. Equivalent IDs can be used with same results"
              }
            ]
          }
        }
      },
      {
        "path": "/bioentity/disease/{disease_id}/phenotypes/",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/biolink/jsonld_context/biolinks_phenotype_context.json",
                "x-responseValueType": [
                  {
                    "path": "edge.obj",
                    "valueType": "http://identifiers.org/hp/"
                  }
                ],
                "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
              }
            },
            "summary": "Returns phenotypes associated with a disease",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/omim/",
                  "http://identifiers.org/doid/"
                ],
                "name": "disease_id",
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/omim/",
                    "template": "/bioentity/disease/OMIM:{{input}}/phenotypes/"
                  },
                  {
                    "valueType": "http://identifiers.org/doid/",
                    "template": "/bioentity/disease/{{input}}/phenotypes/"
                  }
                ],
                "in": "path",
                "description": "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results"
              }
            ]
          }
        }
      },
      {
        "path": "/bioentity/disease/{disease_id}/genes/",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/biolink/jsonld_context/biolinks_gene_context.json",
                "x-responseValueType": [
                  {
                    "path": "edge.obj",
                    "valueType": "http://identifiers.org/ncbigene/"
                  }
                ],
                "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
              }
            },
            "summary": "Returns genes associated with a disease",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/omim/",
                  "http://identifiers.org/doid/"
                ],
                "name": "disease_id",
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/omim/",
                    "template": "/bioentity/disease/OMIM:{{input}}/genes/"
                  },
                  {
                    "valueType": "http://identifiers.org/doid/",
                    "template": "/bioentity/disease/{{input}}/genes/"
                  }
                ],
                "in": "path",
                "description": "CURIE identifier of disease, e.g. OMIM:605543, DOID:678. Equivalent IDs can be used with same results"
              }
            ]
          }
        }
      },
      {
        "path": "/bioentity/gene/{gene_id}/homologs/",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/biolink/jsonld_context/biolinks_homolog_context.json",
                "x-responseValueType": [
                  {
                    "path": "edge.obj",
                    "valueType": "http://identifiers.org/mgi/"
                  },
                  {
                    "path": "edge.obj",
                    "valueType": "http://identifiers.org/zfin/"
                  },
                  {
                    "path": "edge.obj",
                    "valueType": "http://identifiers.org/ncbigene/"
                  }
                ],
                "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
              }
            },
            "summary": "Returns homologs for a gene",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/ncbigene/"
                ],
                "name": "gene_id",
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/ncbigene/",
                    "template": "/bioentity/gene/NCBIGene:{{input}}/homologs/"
                  }
                ],
                "in": "path",
                "description": "CURIE identifier of gene, e.g. NCBIGene:4750. Equivalent IDs can be used with same results"
              }
            ]
          }
        }
      },
      {
        "path": "/bioentity/gene/{gene_id}/phenotypes/",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/biolink/jsonld_context/biolinks_phenotype_context.json",
                "x-responseValueType": [
                  {
                    "path": "edge.obj",
                    "valueType": "http://identifiers.org/hp/"
                  }
                ],
                "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
              }
            },
            "summary": "Returns phenotypes associated with gene",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/ncbigene/"
                ],
                "name": "gene_id",
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/ncbigene/",
                    "template": "/bioentity/gene/NCBIGene:{{input}}/phenotypes"
                  }
                ],
                "in": "path",
                "description": "CURIE identifier of gene, e.g. NCBIGene:4750. Equivalent IDs can be used with same results"
              }
            ]
          }
        }
      }
    ],
    "info": {
      "version": "0.1.1",
      "termsOfService": "https://github.com/monarch-initiative/biolink-api/",
      "contact": {
        "x-role": "responsible developer",
        "x-id": [
          "https://orcid.org/0000-0002-6601-2165",
          "https://github.com/cmungall"
        ],
        "name": "Chris Mungall",
        "email": "cjm@berkeleybop.org"
      },
      "title": "BioLink API",
      "description": "API integration layer for linked biological objects."
    },
    "~raw": "H4sIAO2J31kC_-1ZbU_bSBD-Kyt_upMSO4EGTvl0FKpTTqVBJdcvFUIbe2IvtXfd3XVKLsp_v5m1HZtAKSkHDRJIwfK-zMsz88yO7aWncpA8F96Qeft-z-95HeZZHhsc-Lz0JM-ApiJhgBvwVh3WDMYgN0byBKSyi3xjmEsc5VYoeXP8awF6cXPIai5Nyq3S3uoCTTGg56Arawqd0prE2twMgwDN9jMluQ4TIYUVqGEOvtIxzZAfEZhQi9wpxn1nWkVFSHesFFuqyLlNSMHSC6ZCgbTCLgLyLVjS_0sRrYLKfxO4dTFYd825RrPt2r42MLjtDhOO__k4esdERFpmAjRTM0arOwz82Gcfjt-O_sLb4ZvDQa_DxjpPuAQ77B_uD3oDn737Wog5T3E3G50YFnLJpsAKAxH7JmzCDBrANJgitYa0C6eUHKQ7DbhdQ4RjVheo07vuorQCJhQx9MAhi8A29hkHpwynwgFCUr6zRlW2Bt6FE0zKwNgJZDmGE0qAbHN3C-y178ulkHlhV23UUWTb0h8b6pLqPnU1to_Q1ri8unCZhMjnSqIIlx17vZ67Ehbl-Kc22MsyLigeohjTdnr1UL2RElHl4c-KUJnIgjL9r7t_n48_vD85VtLCtW0TTPNvfox5VUwxxXRIC6T1Q5VhsI4m590JlzFogWg2tO0i99DhWBirF0HGDdKDsE-F_BJcGSXT6DIsVdXD5rKCvp7wad0d7DliuNAKGVoksCXucGNUKFxpIfchtIb9hgVIhDxNFwzFqVTFC4ZGZOZ3n00SYRjPc-Aar5bZBJhVOUthDikJpIGKQCzni1TxyFutqBAVWcaxWqEZH8EWWhpWJ8zaipqGZWGkXd-vKAI91dxVo2etKjtQRP6_AnETxO2LxLPStq13R3jXwu-Fca8deTZTmvG7WVdxNFjWJYa4t25THsi8Zu8DyVdtqPg3Ph2dDg96g8Gb_Q47GY9OhgeHf_wyHpalv_OD02V7jtZIO28birax3u5wuucEX0f1MWqqY_RZa0CS7xD715i9MO43sb518nK2flJ5SCGgkvFaA568BlQwPyH9t9PwK5i_g6e_ayhfFvVdnLdg_UbTnaiMjHttuH-24W4A3PFmO4vFIx-R_50J-UgRO8j5KoAvjPZ12t3X6W9Qfdse_5Xst8jeQLjrbH9tq5-2ra4It3L5OlMuiJg6qYvJW6Heo-Ps6GzkPh6QbePZOei5CKEdgRJ9B3n12r7bvLev8SPI3elC4OEDfpUwIlpnP4lSOhSRC30P_7r42-seHPT63b3-waBubDd0hlkhY8TRMaSm_XGiEcLTagYnIOPCfWUIr7I_p6C_QAqLqcpJmVdSS5V-VzkspimwiABXOX1SoJTFvKxi3PP7fv-u2J-N3DuMWLtos5QvsLJQeSMQEHeCQ8UUeFZlgo8R-A84zuF_sBkAAA=="
  },
  {
    "tags": [
      {
        "name": "ontology"
      },
      {
        "name": "query"
      },
      {
        "name": "translator"
      }
    ],
    "_id": "c806f9a29e61e08a333260ee27a7d7e4",
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-10-12T15:28:24.584373",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/ebi_ontology_lookup_service_api/openapi.yml"
    },
    "servers": [
      {
        "url": "https://www.ebi.ac.uk/ols/api",
        "description": "Production server"
      }
    ],
    "openapi": "3.0.0",
    "paths": [
      {
        "path": "/query",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/ebi_ontology_lookup_service_api/jsonld_context/ols_query_1.1.json",
                "x-responseValueType": [
                  {
                    "path": "response.docs.obo_id",
                    "valueType": "http://identifiers.org/doid/"
                  }
                ],
                "description": "A query response object with \"hits\" property"
              }
            },
            "summary": "The search API is independent of the REST API and supports free text search over the ontologies. The default search is across all textual fields in the ontology, but results are ranked towards hits in labels, then synonyms, then definitions, then annotations.",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://biothings.io/concepts/disease_name/"
                ],
                "name": "q",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://biothings.io/concepts/disease_name/",
                    "template": "{{input}}&ontology=doid"
                  }
                ],
                "in": "query",
                "description": "The terms to search. By default the search is performed over term labels, synonyms, descriptions, identifiers and annotation properties."
              }
            ]
          }
        }
      }
    ],
    "info": {
      "version": "1.0",
      "termsOfService": "https://www.ebi.ac.uk/ols/docs/about",
      "contact": {
        "x-role": "responsible developer",
        "x-id": [
          "https://github.com/EBISPOT/OLS"
        ],
        "name": "Jupp S.",
        "email": "ols-support@ebi.ac.uk"
      },
      "title": "EBI Ontology Service API",
      "description": "The Ontology Lookup Service (OLS) is a repository for biomedical ontologies that aims to provide a single point of access to the latest ontology versions. You can browse the ontologies through the website as well as programmatically via the OLS API. OLS is developed and maintained by the Samples, Phenotypes and Ontologies Team at EMBL-EBI."
    },
    "~raw": "H4sIABiK31kC_5VVXW_bNhT9K4Qehg2IpWR7KzBgSZeHFlkdzMaAoQ0ESrqW2Ui8KknFMQz_955LSra3dQP2YEik7vc55_qQ8UBWDyZ7o7Kf8uv8OrtSWdCtx8XHQ2Z1T_KJbeCO2312vFLn2y8jub9dBaet73Rglx2fEMqTeyE3RRtdJzbbEAb_pih2u11Olcl1nY_PBXe-kELg1JCvnRmCYSv2j46bsZaTSuFS6EGHrQQ-ZEUqRF5bCvE5aIeKwim1oy-jcdTgFNxI_0yy3pKCee9VYKTRrt7m6m6vGtrosQsq4Hu6VsargdyGXU-NYtQTHVWnK-r8lfJ7y3bf4-0iBU6mIRvMxqAmpW2Dn-WgY1uDAwwuGPK59O_rLfU69hH2Q5yrD87YVmadGXuePY4nMOTwunjR3Ujr5PUxjhqTrgyHLfx9brio2dY0BF80Bg15KiVCkT1Fd5kT-bCmfgCKlIYXzqfscDB2GMPx-N3MiZ8bNo0kv0z9fzIfnyKejvyAQVHC9Mfr6_iUktL9H5edHSL8kmj-nDdc-5wrLv-9mgsIcnZtIZUXiU2vi_er5YeHX9-iLXoNlzx1epe3JmzHagT_ajGwIa-5Lz68vV2vFmttWwI8VJzZvwCVUXlrANy-6LUHRQqQvZynVnbMz-NQCqNNTSXsi8-ebdeUdSpBFFFGmMub_CaXj98Qx62KJmoeg-LqM9VB7VCw-pRtTfCfsplgEKswyI99r6NgIu0nWt8-vhNqG9sQdoJMSvEm8v73-9U6fhba-nEY2AWvNo5EMq9hDpCkAPupR6GzkgSzhs760bVjj0fXxQij7hRQ6RpJfxlif6WqMUhz8Ie9I4URP0N3gXfawV4aFKdZfXC2FxKMR-Q31kwyjDdn7UFxx2OS1YaT5EzoImnu796p5VSHWiWcZAxxRcqqWG6m2__eakLMQlc8BvEUdHUdJnKb5qRTcU40i9xC9tXjcl0sH1ZRm7PO32P-ahX3BJaEiRsVWRYTLr-ccqd94Dg1M_HDVJ3g8UKdECLuE9nPE5lu0v7_xmo8zeEh0vY0ju9R3g8RUYA0sDfg_l5hNyooH_vR1ID2zAdMXwelTVqzYOULJAlfjxWBwgY2iXW6rslHGyGD7B4fTpxQU8Vg1588qlpbVTnegft_JR-Ojsd2G693VKE45PJ4Be3wRPoW_xI9eIAqO8Q1OtqiJ8E5jy_obZ5XEwWAoQNByL1R1T7arzT2I4Fbj-AWy8pOG355LmVNuldo_f63u4cFoBXWfQUGo902fQcAAA=="
  },
  {
    "tags": [
      {
        "name": "translator"
      }
    ],
    "_id": "89590198e93fb9377ab547eb903c5532",
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-10-20T19:09:00.297268",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/broad-pgm/openapi.yml"
    },
    "servers": [
      {
        "url": "https://translator.ncats.io/broad-pgm-translator"
      }
    ],
    "openapi": "3.0.0",
    "paths": [
      {
        "path": "/modelList",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "modelID": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "description": "Successful response"
              }
            },
            "description": "List available models"
          }
        }
      },
      {
        "path": "/evaluateModel",
        "pathitem": {
          "post": {
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "posteriorProbabilities": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "modelVariable": {
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "variableID": {
                                      "type": "string"
                                    },
                                    "posteriorDistribution": {
                                      "type": "object",
                                      "properties": {
                                        "discreteDistribution": {
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "variableValue": {
                                                "type": "string"
                                              },
                                              "posteriorProbability": {
                                                "type": "number"
                                              }
                                            }
                                          },
                                          "type": "array"
                                        },
                                        "rawDistribution": {
                                          "items": {
                                            "type": "number"
                                          },
                                          "type": "array"
                                        },
                                        "PoissonDistribution": {
                                          "type": "object",
                                          "properties": {
                                            "lambdaParameter": {
                                              "type": "number"
                                            }
                                          }
                                        },
                                        "empiricalDistribution": {
                                          "type": "object",
                                          "properties": {
                                            "distributionMean": {
                                              "type": "number"
                                            },
                                            "distributionStDev": {
                                              "type": "number"
                                            },
                                            "distributionPercentile": {
                                              "items": {
                                                "type": "number"
                                              },
                                              "type": "array"
                                            }
                                          }
                                        },
                                        "GaussianDistribution": {
                                          "type": "object",
                                          "properties": {
                                            "distributionMean": {
                                              "type": "number"
                                            },
                                            "distributionStDev": {
                                              "type": "number"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "type": "array"
                              },
                              "variableGroupID": {
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "description": "Successful response"
              }
            },
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "modelInput": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "modelVariable": {
                              "items": {
                                "type": "object",
                                "properties": {
                                  "variableID": {
                                    "type": "string"
                                  },
                                  "priorDistribution": {
                                    "type": "object",
                                    "properties": {
                                      "discreteDistribution": {
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "priorProbability": {
                                              "type": "number"
                                            },
                                            "variableValue": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "PoissonDistribution": {
                                        "type": "object",
                                        "properties": {
                                          "lambdaParameter": {
                                            "type": "number"
                                          }
                                        }
                                      },
                                      "empiricalDistribution": {
                                        "type": "object",
                                        "properties": {
                                          "distributionMean": {
                                            "type": "number"
                                          },
                                          "distributionStDev": {
                                            "type": "number"
                                          },
                                          "distributionPercentile": {
                                            "items": {
                                              "type": "number"
                                            },
                                            "type": "array"
                                          }
                                        }
                                      },
                                      "GaussianDistribution": {
                                        "type": "object",
                                        "properties": {
                                          "distributionMean": {
                                            "type": "number"
                                          },
                                          "distributionStDev": {
                                            "type": "number"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "type": "array"
                            },
                            "variableGroupID": {
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "modelID": {
                        "type": "string"
                      },
                      "modelOutput": {
                        "items": {
                          "type": "object",
                          "properties": {
                            "variableID": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "rawOutput": {
                              "type": "boolean"
                            },
                            "variableGroupID": {
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      }
                    }
                  }
                }
              }
            },
            "description": "evaluate model"
          }
        }
      },
      {
        "path": "/{modelID}/modelSignature",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "variableGroup": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "authorityURL": {
                                "type": "string"
                              },
                              "variableGroupID": {
                                "type": "string"
                              },
                              "groupDistribution": {
                                "enum": [
                                  "discrete",
                                  "empirical",
                                  "Gaussian",
                                  "Poisson"
                                ]
                              },
                              "asOutput": {
                                "type": "boolean"
                              },
                              "modelVariable": {
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "variableValue": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "variableID": {
                                      "type": "string"
                                    },
                                    "authorityURI": {
                                      "type": "string"
                                    },
                                    "groupDistribution": {
                                      "enum": [
                                        "discrete",
                                        "empirical",
                                        "Gaussian",
                                        "Poisson"
                                      ]
                                    },
                                    "variableType": {
                                      "type": "string",
                                      "enum": [
                                        "Bollean",
                                        "Number",
                                        "String"
                                      ]
                                    }
                                  }
                                },
                                "type": "array"
                              },
                              "groupValue": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "groupType": {
                                "type": "string",
                                "enum": [
                                  "Bollean",
                                  "Number",
                                  "String"
                                ]
                              },
                              "asInput": {
                                "type": "boolean"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "modelID": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Successful response"
              }
            },
            "parameters": [
              {
                "required": true,
                "description": "Model identifier",
                "name": "modelID",
                "in": "path",
                "schema": {
                  "type": "string"
                }
              }
            ],
            "description": "Get model signature"
          }
        }
      }
    ],
    "info": {
      "title": "Broad probabilistic graphical models translator",
      "contact": {
        "x-role": "responsible organization",
        "email": "translator@broadinstitute.org",
        "name": "Broad PGM translator",
        "url": "https://translator.ncats.io/broad-pgm-translator/",
        "x-id": "https://github.com/broadinstitute/broad-translator"
      },
      "version": "0.1.0"
    },
    "components": {
      "schemas": {}
    },
    "~raw": "H4sIAMxJ6lkC_-1YTW_bMAz9K4bPq51tt56GokBQoN2CZeul6IG2WUeFLamUlC0r8t-nDztxYqdp0w9s2E6RKZp6eiSfpdzHQiIHyeLjKP6YjJJR_C6KJeiZspb7OK1FgdU5U9o_lhh-CZUUXGFw-jAa-d9ccI08eICUFctBM8HTWyW4N6p8hjX4oSS7MGnWhPDLnJ36sV5IdHCACBYODtNYq40ppYnxMl4ul3a6NYrsFnPdGAtUOTHp1ndzU5PnqNSNqaIWezzk53YawRxYBVmFkYelgmeKc6gMaLxwxrAJoV6JDxcZiQmakMggYxVbTT1Az1aQORBz2xiTMHKL3JZB-77f5GXj-8QlVjhPmYuYmYbInuMYjFIM-D6_ojN_gcA38HBTZ0gedNdvqk9xPug4VB7h5ZxQYw_MARtfJ2ixC2ubh0tbPzhcx0NlbG1YS0a2bKq3pW3LcYKU2zpm-6ujx_-OBBD8eAr3Q2mdCKZsH-0jpoI6K2ACBLVNOD26SnYAb1O5o5t2ytHjjQcKVytOQbIcfYR3BpU-EcWi0ag7wwgL-6DJoPV4Yb3elpQzLo3-AyXrn5Sr_1J1oFT95TrTNssXo1-tG62aD4TPhKhceh_YzrNOeH1jsKf3jTgtw-F1ykoO2hC-_Qm2w9EGlU9Mw3PUDoyeCbId__3r2S5spcPUK3C0ZWsHVyv5ibtd7h5akYzXbRJfdzf7LazViXUiKl8U1ulz6Ao7mgYo152kDjDXl6THlM-BvdSycvCioPqfv6GO2NNaHsSL0NgphPM3KwRQDwnD6xyMZKvBLjlXGy07pF29UxG3bzuntqFdqv2K7lYc94H462DECvfZuWFO56_7TmPU4WQWqZUchW3lorbg7cuqIzB-7KcZvxEraYI8MGnI3T_jmdZSHaepJuCqAi0o4VawVMJEmpGA4kiW9dF6NnXofx6R8CrSSiBzF11BJXD2y6td3CHhxIWJJuOLaB0mpN9ekZ3D2vzJL8m40kwbjYkNGdZjRRdsyfTMZInddrr5QgO5s47vE5vHhsNR8j78PWH9qw462R5rbKA8KgnkzBVmc3mPtgIqpPmqNg4kMqRYQ9mEadna8Fj-BvbLb-RcEQAA"
  },
  {
    "tags": [
      {
        "name": "core",
        "description": "Core function calls"
      }
    ],
    "_id": "aaff750928be8fb09485e953a78e93a2",
    "_meta": {
      "github_username": "micheldumontier",
      "url": "https://raw.githubusercontent.com/micheldumontier/API-descriptions/master/stitch-api-oas3.yaml",
      "timestamp": "2017-10-27T01:49:25.937812"
    },
    "paths": [
      {
        "path": "/{responseFormat}/interactionsList",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/psi-mi": {
                    "schema": {
                      "type": "string"
                    }
                  }
                },
                "description": "Successful response \n"
              }
            },
            "operationId": "interactionsList",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "default": "psi-mi",
                  "type": "string",
                  "enum": [
                    "psi-mi",
                    "psi-mi-tab"
                  ]
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired format"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "identifiers",
                "in": "query",
                "description": "A list of identifiers (e.g. 4932.YML115C%0D4932.YJR075W%0D4932.YEL036C )"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "required_score",
                "in": "query",
                "description": "Threshold of significance to include a interaction, a number between 0 and 1000"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "additional_network_nodes",
                "in": "query",
                "description": "Number of additional nodes in network (ordered by score), e.g. 10"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "caller_identity",
                "in": "query",
                "description": "Your identifier for us."
              }
            ],
            "description": "Interaction network in PSI-MI 2.5 format or PSI-MI-TAB format (similar to tsv)\n"
          }
        }
      },
      {
        "path": "/{responseFormat}/abstractsList",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "string"
                    }
                  }
                },
                "description": "Successful response \n"
              }
            },
            "operationId": "abstractsList",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "default": "json",
                  "type": "string",
                  "enum": [
                    "json",
                    "psi-mi",
                    "psi-mi-tab"
                  ]
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired format"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "identifiers",
                "in": "query",
                "description": "A list of identifiers (e.g. 4932.YML115C )"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "limit",
                "in": "query",
                "description": "Maximum number of results to return, e.g 10"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "caller_identity",
                "in": "query",
                "description": "Your identifier for us."
              }
            ],
            "description": "List of abstracts that contain the query item\n"
          }
        }
      },
      {
        "path": "/{responseFormat}/interactorsList",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "text/tab-separated-values": {
                    "schema": {
                      "type": "string"
                    }
                  }
                },
                "description": "Successful response \n"
              }
            },
            "operationId": "interactorsList",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "default": "tsv",
                  "type": "string",
                  "enum": [
                    "tsv",
                    "tsv-no-header"
                  ]
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired format"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "identifiers",
                "in": "query",
                "description": "A list of identifiers (e.g. 4932.YML115C%0D4932.YJR075W )"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "required_score",
                "in": "query",
                "description": "Threshold of significance to include a interaction, a number between 0 and 1000"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "additional_network_nodes",
                "in": "query",
                "description": "Number of additional nodes in network (ordered by score), e.g. 10"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "caller_identity",
                "in": "query",
                "description": "Your identifier for us."
              }
            ],
            "description": "List of interaction partners for the query item\n"
          }
        }
      },
      {
        "path": "/{responseFormat}/interactors",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "text/tab-separated-values": {
                    "schema": {
                      "type": "string"
                    }
                  }
                },
                "description": "Successful response \n"
              }
            },
            "operationId": "interactors",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "default": "tsv",
                  "type": "string",
                  "enum": [
                    "tsv",
                    "tsv-no-header"
                  ]
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired format"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "identifier",
                "in": "query",
                "description": "The entity identifier (e.g. 4932.YML115C )"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "required_score",
                "in": "query",
                "description": "Threshold of significance to include a interaction, a number between 0 and 1000"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "additional_network_nodes",
                "in": "query",
                "description": "Number of additional nodes in network (ordered by score), e.g. 10"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "caller_identity",
                "in": "query",
                "description": "Your identifier for us."
              }
            ],
            "description": "List of interaction partners for the query item\n"
          }
        }
      },
      {
        "path": "/{responseFormat}/network",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "image/png": {
                    "schema": {
                      "type": "string"
                    }
                  }
                },
                "description": "Successful response \n"
              }
            },
            "operationId": "network",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string",
                  "default": "image"
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired format"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "identifier",
                "in": "query",
                "description": "The entity identifier (e.g. 4932.YML115C )"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "limit",
                "in": "query",
                "description": "Maximum number of results to return, e.g 10"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "required_score",
                "in": "query",
                "description": "Threshold of significance to include a interaction, a number between 0 and 1000"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "additional_network_nodes",
                "in": "query",
                "description": "Number of additional nodes in network (ordered by score), e.g. 10"
              },
              {
                "schema": {
                  "type": "string",
                  "enum": [
                    "evidence",
                    "confidence",
                    "actions"
                  ]
                },
                "name": "network_flavor",
                "in": "query",
                "description": "The style of edges in the network. evidence for colored multilines. Confidence for singled lines where hue correspond to confidence score."
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "caller_identity",
                "in": "query",
                "description": "Your identifier for us."
              }
            ],
            "description": "The network image for the query item\n"
          }
        }
      },
      {
        "path": "/{responseFormat}/resolve",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "text/tab-separated-values": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/ResolveObj"
                      },
                      "type": "array"
                    }
                  },
                  "application/json": {
                    "examples": {
                      "response": {
                        "value": [
                          {
                            "stringId": "9606.ENSP00000333813",
                            "taxonName": "Homo sapiens",
                            "preferredName": "ALG12",
                            "queryIndex": -1,
                            "ncbiTaxonId": 9606,
                            "annotation": "asparagine-linked glycosylation 12, alpha-1,6-mannosyltransferase homolog (cerevisiae); Adds the eighth mannose residue in an alpha-1,6 linkage onto the dolichol-PP-oligosaccharide precursor (dolichol-PP- Man(7)GlcNAc(2)) required for protein glycosylation\""
                          }
                        ]
                      }
                    },
                    "x-responseValueType": [
                      {
                        "x-valueType": "http://identifiers.org/string",
                        "x-path": "stringId"
                      },
                      {
                        "x-valueType": "http://identifiers.org/taxonomy",
                        "x-path": "ncbiTaxonId"
                      }
                    ],
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/ResolveObj"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Successful response with concept details returned\n"
              }
            },
            "operationId": "resolve",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/uniprot",
                  "http://identifiers.org/gene.symbol",
                  "http://identifiers.org/ncbigene"
                ],
                "name": "identifier",
                "schema": {
                  "type": "string"
                },
                "in": "query",
                "description": "Entity identifier (e.g. ADD)"
              },
              {
                "x-valueType": [
                  "http://identifiers.org/taxonomy"
                ],
                "schema": {
                  "type": "integer"
                },
                "name": "species",
                "in": "query",
                "description": "The species identifier to limit the result to (e.g. 9606)"
              },
              {
                "required": true,
                "schema": {
                  "type": "string",
                  "enum": [
                    "json",
                    "tsv",
                    "tsv-no-header"
                  ]
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired format"
              }
            ],
            "description": "List of items that match (in name or identifier) the query item.\n"
          }
        }
      },
      {
        "path": "/{responseFormat}/actions",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "text/tab-separated-values": {
                    "schema": {
                      "type": "string"
                    }
                  }
                },
                "description": "Successful response \n"
              }
            },
            "operationId": "actions",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "default": "tsv",
                  "type": "string",
                  "enum": [
                    "tsv",
                    "tsv-no-header"
                  ]
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired format"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "identifier",
                "in": "query",
                "description": "Entity identifier (e.g.  4932.YML115C)"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "limit",
                "in": "query",
                "description": "Maximum number of nodes to return, e.g 10"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "required_score",
                "in": "query",
                "description": "Threshold of significance to include a interaction, a number between 0 and 1000"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "additional_network_nodes",
                "in": "query",
                "description": "Number of additional nodes in network (ordered by score), e.g. 10"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "caller_identity",
                "in": "query",
                "description": "Your identifier for us."
              }
            ],
            "description": "Action partners for the query item\n"
          }
        }
      },
      {
        "path": "/{responseFormat}/resolveList",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "text/tab-separated-values": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/ResolveObj"
                      },
                      "type": "array"
                    }
                  },
                  "application/json": {
                    "examples": {
                      "response": {
                        "value": [
                          {
                            "stringId": "9606.ENSP00000333813",
                            "taxonName": "Homo sapiens",
                            "preferredName": "ALG12",
                            "queryIndex": -1,
                            "ncbiTaxonId": 9606,
                            "annotation": "asparagine-linked glycosylation 12, alpha-1,6-mannosyltransferase homolog (cerevisiae); Adds the eighth mannose residue in an alpha-1,6 linkage onto the dolichol-PP-oligosaccharide precursor (dolichol-PP- Man(7)GlcNAc(2)) required for protein glycosylation\""
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/ResolveObj"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Successful response with concept details returned\n"
              }
            },
            "operationId": "resolveList",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "default": "json",
                  "type": "string",
                  "enum": [
                    "json",
                    "tsv",
                    "tsv-no-header"
                  ]
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired response format"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "identifiers",
                "in": "query",
                "description": "specify multiple items delimited with %0D, e.g. DRD1_HUMAN%0DDRD2_HUMAN"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "species",
                "in": "query",
                "description": "The species identifier to limit the result to (e.g. 9606)"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "limit",
                "in": "query",
                "description": "Maximum number of nodes to return, e.g 10"
              }
            ],
            "description": "List of items that match (in name or identifier) the query items\n"
          }
        }
      },
      {
        "path": "/{responseFormat}/abstracts",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "string"
                    }
                  }
                },
                "description": "Successful response \n"
              }
            },
            "operationId": "abstracts",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "default": "json",
                  "type": "string",
                  "enum": [
                    "json",
                    "psi-mi",
                    "psi-mi-tab"
                  ]
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired format"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "identifier",
                "in": "query",
                "description": "The entity identifier (e.g. 4932.YML115C )"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "limit",
                "in": "query",
                "description": "Maximum number of results to return, e.g 10"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "caller_identity",
                "in": "query",
                "description": "Your identifier for us."
              }
            ],
            "description": "List of abstracts that contain the query item\n"
          }
        }
      },
      {
        "path": "/{responseFormat}/interactions",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "application/psi-mi": {
                    "schema": {
                      "type": "string"
                    }
                  }
                },
                "description": "Successful response \n"
              }
            },
            "operationId": "interactions",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "default": "psi-mi",
                  "type": "string",
                  "enum": [
                    "psi-mi",
                    "psi-mi-tab"
                  ]
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired format"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "identifier",
                "in": "query",
                "description": "The entity identifier (e.g. 4932.YML115C )"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "required_score",
                "in": "query",
                "description": "Threshold of significance to include a interaction, a number between 0 and 1000"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "additional_network_nodes",
                "in": "query",
                "description": "Number of additional nodes in network (ordered by score), e.g. 10"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "caller_identity",
                "in": "query",
                "description": "Your identifier for us."
              }
            ],
            "description": "Interaction network in PSI-MI 2.5 format or PSI-MI-TAB format (similar to tsv)\n"
          }
        }
      },
      {
        "path": "/{responseFormat}/networkList",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "image/png": {
                    "schema": {
                      "type": "string"
                    }
                  }
                },
                "description": "Successful response \n"
              }
            },
            "operationId": "networkList",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string",
                  "default": "image"
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired format"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "identifiers",
                "in": "query",
                "description": "A list of identifiers (e.g. 4932.YML115C%0D4932.YJR075W )"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "limit",
                "in": "query",
                "description": "Maximum number of results to return, e.g 10"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "required_score",
                "in": "query",
                "description": "Threshold of significance to include a interaction, a number between 0 and 1000"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "additional_network_nodes",
                "in": "query",
                "description": "Number of additional nodes in network (ordered by score), e.g. 10"
              },
              {
                "schema": {
                  "type": "string",
                  "enum": [
                    "evidence",
                    "confidence",
                    "actions"
                  ]
                },
                "name": "network_flavor",
                "in": "query",
                "description": "The style of edges in the network. evidence for colored multilines. Confidence for singled lines where hue correspond to confidence score."
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "caller_identity",
                "in": "query",
                "description": "Your identifier for us."
              }
            ],
            "description": "The network image for the query item\n"
          }
        }
      },
      {
        "path": "/{responseFormat}/actionsList",
        "pathitem": {
          "get": {
            "tags": [
              "core"
            ],
            "responses": {
              "200": {
                "content": {
                  "text/tab-separated-values": {
                    "schema": {
                      "type": "string"
                    }
                  }
                },
                "description": "Successful response \n"
              }
            },
            "operationId": "actionsList",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "default": "tsv",
                  "type": "string",
                  "enum": [
                    "tsv",
                    "tsv-no-header"
                  ]
                },
                "name": "responseFormat",
                "in": "path",
                "description": "Desired format"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "identifiers",
                "in": "query",
                "description": "A list of identifiers (e.g. 4932.YML115C%0D4932.YJR075W )"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "limit",
                "in": "query",
                "description": "Maximum number of nodes to return, e.g 10"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "required_score",
                "in": "query",
                "description": "Threshold of significance to include a interaction, a number between 0 and 1000"
              },
              {
                "schema": {
                  "type": "integer"
                },
                "name": "additional_network_nodes",
                "in": "query",
                "description": "Number of additional nodes in network (ordered by score), e.g. 10"
              },
              {
                "schema": {
                  "type": "string"
                },
                "name": "caller_identity",
                "in": "query",
                "description": "Your identifier for us."
              }
            ],
            "description": "Action partners for the query item\n"
          }
        }
      }
    ],
    "components": {
      "schemas": {
        "ResolveObj": {
          "type": "object",
          "properties": {
            "annotation": {
              "type": "string",
              "description": "description\n"
            },
            "ncbitTaxonId": {
              "x-valueType": "http://identifiers.org/taxonomy",
              "type": "string",
              "description": "The taxonomic identifier of the entity\n"
            },
            "queryIndex": {
              "type": "string",
              "description": "unknown\n"
            },
            "stringId": {
              "x-valueType": "http://identifiers.org/string",
              "type": "string",
              "description": "The string ID\n"
            },
            "preferredNname": {
              "type": "string",
              "description": "The preferred name \n"
            }
          }
        }
      }
    },
    "openapi": "3.0.0",
    "servers": [
      {
        "x-maturity": "production",
        "url": "https://www.string-db.org/api"
      }
    ],
    "info": {
      "contact": {
        "name": "STITCH",
        "url": "http://stitch.embl.de"
      },
      "version": "5.0.0",
      "x-externalResources": [
        {
          "x-description": null,
          "x-type": "publication",
          "x-url": "http://www.ncbi.nlm.nih.gov/pubmed/26590256"
        }
      ],
      "x-otherContacts": [
        {
          "x-role": "document creator",
          "x-id": "https://orcid.org/0000-0003-4727-9435",
          "name": "Michel Dumontier",
          "email": "michel.dumontier@gmail.com"
        }
      ],
      "x-docVersion": 0.1,
      "termsOfService": "http://string-db.org/cgi/access.pl",
      "title": "STITCH API",
      "description": "STITCH is a database of known and predicted interactions between chemicals and proteins. The interactions include direct (physical) and indirect (functional) associations; they stem from computational prediction, from knowledge transfer between organisms, and from interactions aggregated from other (primary) databases.   \n"
    },
    "externalDocs": {
      "url": "http://string-db.org/cgi/help.pl?subpage=api",
      "description": "API documentation"
    },
    "~raw": "H4sIAKaQ8lkC_-1bC2_bOBL-K4TvFoiBWnacJt3u4nCXi7vbHJJs0Ob2sNgWAU3REluJ1JKUEyPwf9-ZoWTLiZ1H203diwsUkcThcJ4fqRn5qqX0yLR-YFctYbTnwtN1aTP420q9L37odp1XXqSRzIdZFMvWM9bSPJdI8Pbs8OzgdWsKj8bSOmU0Pt2NelEPyS47xqfSHgTODsZ-v4KHKq6ZO-BurFBxZGzS7cG_Dvzf6Tx_0X_Refl8Zxe5yJwrEidXIpUgQpkDQyXtvxIciYTJw2LWZCRVbESZS-2ZsJJ7Y5sSHxMPNqh5tKbvYRQUzBoKsf3Tw8ASWP06U6wXbSOttLn7ZfRW2rEScsFMVumkEw9JGZGoLhdCOhcVGTKLpRNWFb4yUrWScoyzmHs-5E4yM2IftbnQjOuYFVbGSngZM6VhUbAgTHVsKP2FlJqBHmAQnrmK2HiptIvYWSoXJygtsjKWLFZWCs-2inTicGKbJipdPx-VmmbQiHNGKE4MfmTgxAlzXuZsZE3OwOBF6XmgrcWEm2dhGDXIZJxI5i3XbiTtTGYwDNfK5e4ZrU3kC7LyJLEy4ag0DVL8gMhW5dxO2jNLgZ6MvdPBSfISOIAob6QzpQWT14G2GMYXFxeRFkMV6SyPtEqjxIy7RTnMZdzt7-2-7PV39yqvL7hKl1lGj_2kIH_DnAwMSMPT9xj8DoIBwiSs21jVVcsuhgYvVFgn5760yk-IqTVxKSqeGPWVUgMj3NKcvB5sENYFhNo_XTkseCL_Ua1yLewgslmdH5UGQGQKqZEeCHbq5C24T8PK3SsrXQHukT8ZCzJPu02fHSkXQCOR4W_BLSSbn9nDyj9KCDFMem9L2UjGRba4qCIhceklsg-kQz5sNCN3mAScVpW6zHG9VuFUJyfVw1UHIqb1nriNeJl5WmBGU_s02LM1BWvcJrGKwW5qpFC5mbh_lNJOltmaZWAbTOrGNLYloyRiz1_u9KPfjo-2t3cPvusNwu1_3vRe7P5vdvvqqLezd8Da1zRdKvLcpEH0cyeMlXfLeJaCE1KTxSimU4kGKQXXApLXzJCDN5MUUhdSIh820rpH2bwN0L1CVJyeINguyMrjWAUQOdfAydiP59qAfHdLfRLWB5HnPBjNBUlZxYxtGRtLDJghoBeao_2MkfG3HyYnYGUm7Xlwop_cLd5vAEMNn2PAstJFd_mRdiKeUNq0yH3vQ25aytTDuBZxIfVuLn84J5nZAsxy-vawc3zI-tFulUEAx9XDztn-v-uHW07lKuMWA8C7cTugbJ2qARH64On6zABa0jUvihoVu1V-4ePbFJ4u2RZL2jNHZcbqJRHnp4H4JhLxIXDDw8W6wdAHZ_QchG6Ho5p2HcDoYXCTQaz4uxc_5pcqL_MaN0AIsDko7zDIrIRdUFNqftOZuRiKN9c-quw_o4NzFeQbnbshPeGkw0hspuCk9SlZR2H0CDlXQ5Cxa5d1AFiUSG7c0aaTSg4bwPVsq2nWb-ffbPWbrX7JVl_n2WpIafiMQQZ6jeGGonwaqHh4-ejCPtVxEvMZ3sY6Y56V1YzHQ5enhiz3yWHJQmg2g-5zd_ENkjwdJHkiKFK5cw0QpIEPKueJ_CYR4iuf8zcA9eUBqhZulPGxuWdgOT_JqEqN5V2SCqGh4hQxOcaQAysjaAiTGRQzB_-rTGms2R4YPWqQOAi0DEholF2koBZLSwlTbcjAGP0l5pNI32jVFl0vj-PzSXhX1UsIGm-N87VC7RrDlvtiVtlBUPkMmKb53QLEegRYhnuTjeUDYfmaCy7DPnIW5Pu9Lok3XrWoKF5qhV0RnLGCIpFaRm6SD012CxX2DJCSXHSLfW5a59UKHN4fDNqt5fhO0XhPBT2_NNrkExKs5uUKKdR90IbyORA3JYSEI7CnaArojc-C4C_3envte6HMV6q2rTylf1oG1uF6y5kJMq0q5IB4ImVbCNWgKhZX52ZtX0vO6LPqO_KS50VWzap50A3FTUijoGnQA_0WvTp5e4ot1t7Ozs732ztkJ4ygk8oxr01umOOFkprCp7ByJAGI45pg_-jn7T6OkB6HOpaX8LiDTVHMkTNkRuvhcoi6WpuqyYT7osNETwDqO4D3H8GlSTYRxk0yImHbfdiDsyLlwHCvk-NkGKtbiNgdTUHAzCRsS8BGMVZOcdn-ke3HsSPrSpWkPmVhJsWuikvshcI-PueMm81HREwwsqF5sQELw2Ghc3ragcvEOC5Eyi14D5uborQOfLnVJGPHXG-9aP-ciZN9sdVvt1kd7wTEVTN2UcF3LWwWTkOnuvLZr800x7ynJJiFKRjzBtytAoM5CjX5NP1yb1YzXJleQzwKdrr6O8QGcvhbF5vBRgMD1w2UrvsmZM0vww8EinXqcWv5hODh_q8GX2bFe25cFwrCB5JPyMKzWHquMledWmV8axOiOl5syhX33AAX3kQe50UknKM3ryGbOsltLZwqkZdU9P8_yiLVgebx2zYz6T7zHPfIXVM6II8m4SUWjlzVeS-WhEOgF-0Z3_UGVfAP3gy2z1__93j_BJ7BTT_cPATh1uQA_9UA9yEH87vaIp92OHebw_nTPZxvjrt3H3frDxie7Pc2T7QMv56f2zyFT23W7fXykT6y3TTENy96f_lXtE_8C9pKvzX5ku-LdsvX5Uu9Tfd80z3fdM-_Tvd8RYngm-2gr-mvrp7Sh9ebHsTmaPqX9yBW4Na314eYNpS-uj7vAIzA6h8eM_SDa34YQzYis82rYA3xwnWjGkZAaNGgXtWKzCutVw9rpa_axHGQHQ7eLS0hVeVWP6-3Xj2067583WpYiWbcQX742QvwSoEWKsI3XFBq-sn5ytnzSnPllatl4s2oQn19JbeFsvMNTo3bd6sqdLNnZvhBCk8x9ifU9E8Ux0AAAA=="
  },
  {
    "tags": [
      {
        "name": "patient"
      },
      {
        "name": "endotype"
      },
      {
        "name": "query"
      },
      {
        "name": "translator"
      }
    ],
    "_id": "c8e4fb215575f6756374df067ada175a",
    "_meta": {
      "github_username": "newgene",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/GT_endotypes_api/endotypes_openapi.yml",
      "timestamp": "2017-10-27T15:50:38.860552"
    },
    "servers": [
      {
        "url": "https://endotypes.renci.org/v1"
      }
    ],
    "openapi": "3.0.0",
    "paths": [
      {
        "path": "/endotypes",
        "pathitem": {
          "post": {
            "responses": {
              "400": {
                "description": "Invalid parameter"
              },
              "404": {
                "description": "No endotypes found"
              },
              "500": {
                "description": "Server error"
              },
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/response_200"
                    }
                  }
                },
                "description": "OK"
              }
            },
            "operationId": "endotypes_post",
            "x-swagger-router-controller": "controllers.default_controller",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/input"
                  }
                }
              }
            },
            "summary": "Get list of endotypes based on input as a POST request",
            "description": "list of endotypes based on input\n@input\n- JSON object with required input\n\n@return\n- JSON object that returns array of predicted endotypes\n"
          }
        }
      }
    ],
    "info": {
      "contact": {
        "email": "hongyi@renci.org",
        "name": "Hong Yi",
        "url": "https://github.com/renci/nih-endotypes-api"
      },
      "version": "1.0.0",
      "license": {
        "name": "MIT",
        "url": "http://opensource.org/licenses/MIT"
      },
      "termsOfService": "None",
      "title": "NIH Endotypes API",
      "description": "NIH Endotypes API - Refer to <a href=\\\"https://github.com/NCATS-Tangerine/cq-notebooks/blob/master/Green_CQs/GreenTeam_Endotype_Data_Documentation/README.md\\\">User Manual</a> on how to use the API."
    },
    "components": {
      "schemas": {
        "input": {
          "type": "object",
          "properties": {
            "sex": {
              "type": "string",
              "example": "M",
              "x-modifiers": [],
              "pattern": "^(F|M|f|m)$",
              "x-regex": "^(F|M|f|m)$"
            },
            "visits": {
              "items": {
                "$ref": "#/components/schemas/visit"
              },
              "type": "array"
            },
            "date_of_birth": {
              "type": "string",
              "example": "2017-10-04"
            },
            "race": {
              "description": "race code ranged from 1 to 6 with the following mapping:\n1: WHITE OR CAUCASIAN\n2: BLACK OR AFRICAN AMERICAN\n3: AMERICAN INDIAN OR ALASKA NATIVE\n4: ASIAN\n5: NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER\n6: OTHER/HISPANIC\n",
              "type": "string",
              "example": "1"
            },
            "model_type": {
              "type": "string",
              "example": "M0",
              "x-modifiers": [],
              "pattern": "^[M|m][0-9]$",
              "x-regex": "^[M|m][0-9]$"
            }
          }
        },
        "response_200": {
          "type": "object",
          "properties": {
            "output": {
              "items": {
                "$ref": "#/components/schemas/response_200_output"
              },
              "type": "array"
            }
          }
        },
        "response_200_output": {
          "type": "object",
          "properties": {
            "endotype_description": {
              "type": "string"
            },
            "endotype_evidence": {
              "type": "string"
            },
            "periods": {
              "items": {
                "$ref": "#/components/schemas/endotypes_period"
              },
              "type": "array"
            },
            "endotype_id": {
              "type": "string"
            }
          }
        },
        "visit": {
          "type": "object",
          "properties": {
            "exposures": {
              "items": {
                "$ref": "#/components/schemas/exposure"
              },
              "type": "array"
            },
            "lat": {
              "type": "string",
              "example": "20"
            },
            "lon": {
              "type": "string",
              "example": "20"
            },
            "visit_type": {
              "type": "string",
              "example": "INPATIENT",
              "x-modifiers": [],
              "pattern": "^(INPATIENT|OUTPATIENT|EMERGENCY|inpatient|outpatient|emergency)$",
              "x-regex": "^(INPATIENT|OUTPATIENT|EMERGENCY|inpatient|outpatient|emergency)$"
            },
            "icd_codes": {
              "description": "comma-separated standard ICD-9 or ICD-10 codes associated with the visit",
              "type": "string",
              "example": "ICD9:V12,ICD9:E002"
            },
            "time": {
              "type": "string",
              "example": "2017-10-12 21:12:29"
            }
          }
        },
        "endotypes_period": {
          "type": "object",
          "properties": {
            "start_time": {
              "type": "string"
            },
            "end_time": {
              "type": "string"
            }
          }
        },
        "exposure": {
          "type": "object",
          "properties": {
            "units": {
              "type": "string",
              "example": ""
            },
            "value": {
              "format": "float",
              "type": "number",
              "example": 2
            },
            "exposure_type": {
              "type": "string",
              "example": "pm25"
            }
          }
        }
      }
    },
    "~raw": "H4sIAM5V81kC_61Wa2_bNhT9K4TWDx0QWbabdIjRFVUdN9Fay1nstCjiTKAlymYnkSpJ5YG6_32XpOTIjrymQP3FFHkuz30e6ZtDWcqdAfrmxJwpHCuzLkUG_85KqUIOPG9J1apcdGKee4KwmHqMrlzCEq7uCyJdXFDnADkkx9Sacba8p28MtMPFUh8ynBN9dgZn6DN1vsPeDRGScqa3e51up6txiqrMAMPgDI1qCuSfB_o0ozFhkuz6CC7yAg54KWKiGb0KKL1xMGvS60dNnRAZC1qoiv4RGXLRBUmJQIqjVxitBEn_nM_nbRkJh_5s6s4wWxJBGfHiry7jiiw4_1d6i4wvvBxLRYR3Kghh0fBvaVczgvOoJo1OsMLRCY_LnEAZtF_excg_GY86eaKJX19K8GaMWYmzVx5-jThDK36r_SslQWpFtNsdk0IicjlJp0TcQBZMeJwREzbcoZMOe1ePirypZ2dTOO-m53y_BjudXV1lgL-oK1VgtZKmEg-m5rHg0nbRnStv8RLS4gpegleubjHBs4wIfdPDk-wkJMVlpqIGwtIKk4sg0QYbmshQAECQryWR6i1P7g2jfqaCaLQSJTmwJJBRc4qLAvrCJveLNJX_5sh4BY1rls-gyprnNw_qWkDOmJKePZceZUWpnO_w03ks8xwLzemcEoUyKhXiKdo4iBZYkkTXyJghLBFG55PpDFUeO4978EeXzNmb6t9Ff00nIeKLLyRW6BZaEdWB11AAC6JKwXbRaoUVskfgkxD4XnMWYEpjBfYb9jmzCZaQCFlV9rDbNf87ngfsBmc0QQUWMGZQaNNrR-3gqWlBRITgFtevcL-sUrXPkb7Z1mvHh8l7w3zYPWzzMOSNGqS8ZIkpu7ZQeFkNTy0oMAVUew2nD5u1-fYuFB5aZmtLCcxkhpVOxbXp1jqaRsR2bfvPzJfQcwG0FYjc2W2sIPUmgn-ev1uP1-k6__2ZLuKdm_OEprSa_GuzJcjSGO6CyR3OCyvBY6MmOg54kArUbWnyBreRLKoOtomvxuv8-qrrHl8_hXkH3aTu7uFOsCIRT6MFFWpl6BtW_W7vD7fXdaGu7dY3VNIqt1SRXP64mYyFsa2vM0NjdgSOya4LvZbJ1jgUQ9KQ0G-JBKWC56intfulHV8t3ynIHr8FT1EO7Q__gznrDdCns2A2QpMLNPQvh_408MM56w_Q2w_-8L3e9t9dBEM_RP54ZBZz9mKweUBBeAIWBvfBn773UejPgo-jOTsEkL3saFBtojP_kx9U8MnsbHSBzv1h8C4YomD6wQ9PRhdz9nJgj7yzYHruh8HQ6sRurpsJs8pjMkbuQLlLQdr6GDSktAe1ISvzhX0RpFzkWHe_k2Ycq-1m6TdvfmjLRlGKvH-0pyNKVjdEA_8zET28k-D1z5O2yAATKZpvB9fwQSos1H7EHuYtmWthhVdurRhP7PXmjVFl3tL5e_yxk9LiSFbp99ag7inHJgktU93ro35v0OsP-sf_N97twvQ8CM-hy0fhbD25nNXLEczJ6Sgcfl6DvFolX-vAqyXJiVjCx9D903T0F1A0wt7ctifYuuN_Ss42A9iuaBlWTy4VjZNIi9qj6QmGJ8eDj73-gVmMut1-iyaCbzl2JdHfDPq7A2aAJVgkCIzcY8SFWfS6RjfhS0VKHlOD3Aimbbinj2pbe7dPq_0k3_a4dXI3WHJDE6ji3hG34vBzpdpVlvaSbVygyZPVA37_AVRTGHn5DQAA"
  },
  {
    "tags": [
      {
        "name": "variant"
      },
      {
        "name": "annotation"
      },
      {
        "name": "query"
      },
      {
        "name": "translator"
      }
    ],
    "_id": "09c8782d9f4027712e65b95424adba79",
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-09-27T14:33:11.125528",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/openapi_full.yml"
    },
    "paths": [
      {
        "path": "/variant/variantid",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/jsonld_context/myvariant_variant_1.1.json",
                "x-responseValueType": [
                  {
                    "path": "cadd.gene.genename",
                    "valueType": "http://identifiers.org/hgnc.symbol/"
                  },
                  {
                    "path": "clinvar.rsid",
                    "valueType": "http://identifiers.org/dbsnp/"
                  },
                  {
                    "path": "cadd.gene.gene_id",
                    "valueType": "http://identifiers.org/ensembl.gene/"
                  },
                  {
                    "path": "cadd.gene.feature_id",
                    "valueType": "http://identifiers.org/ensembl.transcript/"
                  },
                  {
                    "path": "cadd.gene.ccds_id",
                    "valueType": "http://identifiers.org/ccds/"
                  },
                  {
                    "path": "clinvar.uniprot",
                    "valueType": "http://identifiers.org/uniprot/"
                  },
                  {
                    "path": "clinvar.rcv.accession",
                    "valueType": "http://identifiers.org/clinvar/"
                  },
                  {
                    "path": "clinvar.rcv.conditions.identifiers.omim",
                    "valueType": "http://identifiers.org/omim/"
                  },
                  {
                    "path": "clinvar.rcv.conditions.identifiers.efo",
                    "valueType": "http://identifiers.org/efo/"
                  },
                  {
                    "path": "clinvar.rcv.conditions.identifiers.orphanet",
                    "valueType": "http://identifiers.org/orphanet/"
                  },
                  {
                    "path": "clinvar.gene.id",
                    "valueType": "http://identifiers.org/hgnc/"
                  },
                  {
                    "path": "dbnsfp.ensembl.proteinid",
                    "valueType": "http://identifiers.org/ensembl.protein/"
                  },
                  {
                    "path": "docm.pubmed_id",
                    "valueType": "http://identifiers.org/pubmed/"
                  },
                  {
                    "path": "evs.gene.accession",
                    "valueType": "http://identifiers.org/refseq/"
                  },
                  {
                    "path": "clinvar.rcv.clinical_significance",
                    "valueType": "http://identifiers.org/clinicalsignificance/"
                  }
                ],
                "description": "A variant object"
              }
            },
            "summary": "For a given variant id, return the matching variant object",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/hgvs/",
                  "http://identifiers.org/dbsnp/"
                ],
                "name": "variantid",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/hgvs/",
                    "template": "/variant/{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/dbsnp/",
                    "template": "/variant/{{input}}"
                  }
                ],
                "in": "path",
                "description": "Variant HGVS ID, dbSNP ID"
              }
            ]
          }
        }
      },
      {
        "path": "/query",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/jsonld_context/myvariant_query_1.1.json",
                "x-responseValueType": [
                  {
                    "path": "_id",
                    "valueType": "http://identifiers.org/hgvs/"
                  },
                  {
                    "path": "cadd.gene.genename",
                    "valueType": "http://identifiers.org/hgnc.symbol/"
                  },
                  {
                    "path": "clinvar.rsid",
                    "valueType": "http://identifiers.org/dbsnp/"
                  },
                  {
                    "path": "cadd.gene.gene_id",
                    "valueType": "http://identifiers.org/ensembl.gene/"
                  },
                  {
                    "path": "cadd.gene.feature_id",
                    "valueType": "http://identifiers.org/ensembl.transcript/"
                  },
                  {
                    "path": "cadd.gene.ccds_id",
                    "valueType": "http://identifiers.org/ccds/"
                  },
                  {
                    "path": "clinvar.uniprot",
                    "valueType": "http://identifiers.org/uniprot/"
                  },
                  {
                    "path": "clinvar.omim",
                    "valueType": "http://identifiers.org/omim/"
                  },
                  {
                    "path": "clinvar.rcv.accession",
                    "valueType": "http://identifiers.org/clinvar/"
                  },
                  {
                    "path": "clinvar.rcv.conditions.identifiers.omim",
                    "valueType": "http://identifiers.org/omim/"
                  },
                  {
                    "path": "clinvar.rcv.conditions.identifiers.efo",
                    "valueType": "http://identifiers.org/efo/"
                  },
                  {
                    "path": "clinvar.rcv.conditions.identifiers.orphanet",
                    "valueType": "http://identifiers.org/orphanet/"
                  },
                  {
                    "path": "clinvar.gene.id",
                    "valueType": "http://identifiers.org/hgnc/"
                  },
                  {
                    "path": "dbnsfp.ensembl.proteinid",
                    "valueType": "http://identifiers.org/ensembl.protein/"
                  },
                  {
                    "path": "docm.pubmed_id",
                    "valueType": "http://identifiers.org/pubmed/"
                  },
                  {
                    "path": "evs.gene.accession",
                    "valueType": "http://identifiers.org/refseq/"
                  },
                  {
                    "path": "clinvar.rcv.clinical_significance",
                    "valueType": "http://identifiers.org/clinicalsignificance/"
                  }
                ],
                "description": "A query response object with \"hits\" property"
              }
            },
            "summary": "Make variant query and return matching variant hits",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/hgnc.symbol/",
                  "http://identifiers.org/dbsnp/",
                  "http://identifiers.org/ensembl.gene/",
                  "http://identifiers.org/ensembl.transcript/",
                  "http://identifiers.org/ensembl.protein/",
                  "http://identifiers.org/ccds/",
                  "http://identifiers.org/uniprot/",
                  "http://identifiers.org/clinvar/",
                  "http://identifiers.org/omim/",
                  "http://identifiers.org/efo/",
                  "http://identifiers.org/orphanet/",
                  "http://identifiers.org/hgnc/",
                  "http://identifiers.org/pubmed/",
                  "http://identifiers.org/refseq/",
                  "http://identifiers.org/clinicalsignificance/"
                ],
                "name": "q",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/hgnc.symbol/",
                    "template": "cadd.gene.genename:{{input}} OR cgi.gene:{{input}} OR clinvar.gene.symbol:{{input}} OR dbnsfp.genename:{{input}} OR dbsnp.gene.symbol:{{input}} OR docm.genename:{{input}} OR emv.gene:{{input}} OR evs.gene.symbol:{{input}} OR snpeff.ann.genename:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/dbsnp/",
                    "template": "clinvar.rsid:{{input}} OR dbnsfp.rsid:{{input}} OR dbsnp.rsid:{{input}} OR evs.rsid:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/ensembl.gene/",
                    "template": "dbnsfp.ensembl.geneid:{{input}} OR cadd.gene.gene_id:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/ensembl.transcript",
                    "template": "dbnsfp.ensembl.transcriptid:{{input}} OR cadd.gene.feature_id:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/ensembl.protein/",
                    "template": "dbnsfp.ensembl.proteinid:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/ccds/",
                    "template": "cadd.gene.ccds_id:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/uniprot/",
                    "tempalte": "dbnsfp.uniprot.acc:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/omim/",
                    "template": "clinvar.omim:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/efo/",
                    "template": "clinvar.rcv.conditions.identifiers.efo:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/orphanet/",
                    "template": "clinvar.rcv.conditions.identifiers.orphanet:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/hgnc/",
                    "template": "clinvar.gene.id:{{input}} OR dbsnp.gene.geneid:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/pubmed/",
                    "template": "civic.evidence_items.source.pubmed_id:{{input}} OR docm.pubmed_id:{{input}} OR gwassnps.pubmed:{{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/clinicalsignificance/",
                    "template": "clinvar.rcv.clinical_significance:{{input}}"
                  }
                ],
                "in": "query",
                "description": "Query string. Examples \"rs752396467\", \"possibly_damaging\", \"CDK7\"."
              }
            ]
          }
        }
      }
    ],
    "openapi": "3.0.0",
    "servers": [
      {
        "url": "http://myvariant.info/v1",
        "description": "Production server"
      }
    ],
    "info": {
      "title": "MyVariant.info API",
      "termsOfService": "http://myvariant.info/terms/",
      "contact": {
        "x-role": "responsible developer",
        "x-id": [
          "http://orcid.org/0000-0002-2629-6124",
          "https://github.com/newgene"
        ],
        "name": "Chunlei Wu",
        "email": "help@myvariant.info"
      },
      "version": "1.0",
      "description": "Documentation of the MyVariant.info Variant Query web services. Learn more about [MyVariant.info](http://myvariant.info/)"
    },
    "~raw": "H4sIABcZzFkC_-1ZX2_bNhD_KoSeNkCWkrRL0TytSPanW9d2S5A9NEVAU2eZnUSqJKXECPzddyQlW1ZkW3L6MAwJkMgh7353vDvenU8PgQZVgdLBGfn0EJQqww_B3JjiLI7zRUUVp8JEXMxkXB0HIQkS0EzxwnApLOlHJZOS2f-IRwqWn5GqoGZuMR-CuMZonjxxyykY9yyoojmYlQYd-GvPRH795fqSvL0ISTK9fP8RP1lVFHwtuQILaFQJuCIQy7KtZeGiZnPIqZNmFoXb10ZxkQZL3L2fVDQr4crvfGrOzhNA_hlHxSKp0nieVjq2aFv2k6kWRRx8dohWMdDmCvIiowb8ydpi9koxa9a1BR8euChKs1xaxYcB1moNQLSac2dz6zv_vwJdSKHBe_Lk6Mg9Oy56Q2o0IqdfgJmgNoFnvW4b98FjIxOjSRKlIMD9cW4LyUATCRbpRT6VWeztsMLMuEBVIqW930fYZxNnQ7fb4WCA582nmWPbijkDakp1CKxRVHjLbwVnLNEjkC35FiOWghdKmqFINfk2j7AqooyB1jZmhirnmXdAMikSbsNQRxvMOc-HCrG04yXATA52HibO8SdQxZwKGGz9hn6LJBcaw6PC3rAOUjIVelZETSRaVwMX40O4ZuyiS5ZHRTnNIRkRvJ6hAwWV9scdHW4KZhq-7vIVfuaMZreapwIZGRUMxgSzZW7zxj7J3k9-u_zw_t3FuRQG7k0DohFF0bso5WZeTkssrswSYDFmMo_fn7-5upxcUZECVjKIXW7A9C7VhBYcs2_KscYt4pxqrK3dSv5FS5Elt8xLXO_eNs_j6DiyRMHSlkhd5jlVC6vZz1IRSlJegVilfZ6ERAEmNUHMHEhODZtjde2WBQcVY2F0SIM7gD8tA_EFOyI_3VMsY6DJTaD0qx9OXrw-fXn66gbdcBMUEh0-zRa3Cc1piuR--fzidySIdjcMX79ho9CqT-GAwjyomISjqkM4_CKGe4pDuD_lh_tTeLgnAYe782c4IPOFe_JZuDeRhHtzQzjyfj-5G9wMpXYL97iBOls1c-TDX4Sl3O10VtsVwSNvEtSJvh_TxewOXpvG-zkhr3q0WSXrPjQUBbNZRIXowXxqA9xuFXsN0LdhD_943R5ic3W4co_ueFvHTs21NF3ZjzrVpyixTiB7NFkTbtdn3eU-RaV2ltqh0KodOUTWKs313666oz4EuZ0gLTjNNrSvt22ncgj6KnH2xbXdPMjwdbbtvSs7--GDjtBO3iNFNryHyF0VhD6ZdbO8NfN17-Fwsa06syGYV5xFUFlyhjcG93SkZakYrJvinky7ZS-9oxqV1fX-QVeit5jt8lFfa3zWO1zw_d-Y6YLjIA1x3U2SO2yLsbmbc6NvAoIXqQBlFoNmD7djvgpVeud04Hly8f-eXHzDWcLzAOR5API8APmPD0Bcsdk-_viD_gOruYYvTFQkzfTj0eTDVifEWLrqh1emp75dSFbmeCjqXqHImRuh_LG4bmlLmpcgfhRyB1P3qoWjfyPyDqiVLBUQOpWlIZ82mT9_1_8y53vnOPROrcdxdGRXrEUo84OZ-4l7V7OadEjFeOKceYQ_E_w9mZycnryenB6fvGy-G1uveY85Nwm4s9HYfBOWmYuRukDzaQYkgQoyW70tAuSU-zdQkBU_bqoctMY15_NSZMDJ36UbzRhuPHDHcG8-vvVti8r1h9mlN9r2F1yOLvaINK3HUZ1XSv56NIv47VR6122u111Oe2kdoD7q8cgCI9VuvYiO0PrLfwEAu5fqjBsAAA=="
  },
  {
    "_id": "ef26413a3480e6facafae94ba44da3d8",
    "_meta": {
      "github_username": "ktnyt",
      "timestamp": "2017-09-27T14:33:11.390406",
      "url": "https://raw.githubusercontent.com/ktnyt/glinks/master/glinks_minimal.yml"
    },
    "paths": [
      {
        "path": "/{query}",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-responseValueType": [
                  {
                    "path": "uniprot",
                    "valueType": "http://identifiers.org/uniprot"
                  },
                  {
                    "path": "results.id",
                    "valueType": [
                      "http://identifiers.org/agd",
                      "http://identifiers.org/arachnoserver",
                      "http://identifiers.org/biocyc",
                      "http://identifiers.org/cgd",
                      "http://identifiers.org/conoserver",
                      "http://identifiers.org/cygd",
                      "http://identifiers.org/dictybase.gene",
                      "http://identifiers.org/dip",
                      "http://identifiers.org/disprot",
                      "http://identifiers.org/drugbank",
                      "http://identifiers.org/echobase",
                      "http://identifiers.org/ecogene",
                      "http://identifiers.org/eggnog",
                      "http://identifiers.org/ena.embl",
                      "http://identifiers.org/ensembl",
                      "http://identifiers.org/hcvdb",
                      "http://identifiers.org/flybase",
                      "http://identifiers.org/genecards",
                      "http://identifiers.org/genefarm",
                      "http://identifiers.org/ncbigi",
                      "http://identifiers.org/hinv.protein",
                      "http://identifiers.org/hgnc",
                      "http://identifiers.org/hogenom",
                      "http://identifiers.org/hovergen",
                      "http://identifiers.org/hpa",
                      "http://identifiers.org/hssp",
                      "http://identifiers.org/ipi",
                      "http://identifiers.org/kegg",
                      "http://identifiers.org/maizegdb.locus",
                      "http://identifiers.org/merops",
                      "http://identifiers.org/mig",
                      "http://identifiers.org/omim",
                      "http://identifiers.org/mint",
                      "http://identifiers.org/ncbi",
                      "http://identifiers.org/oma.protein",
                      "http://identifiers.org/orphanet",
                      "http://identifiers.org/orthodb",
                      "http://identifiers.org/pdb",
                      "http://identifiers.org/peroxibase",
                      "http://identifiers.org/pharmgkb.gene",
                      "http://identifiers.org/protclsutdb",
                      "http://identifiers.org/reactome",
                      "http://identifiers.org/rebase",
                      "http://identifiers.org/refseq",
                      "http://identifiers.org/rgd",
                      "http://identifiers.org/sgd",
                      "http://identifiers.org/tair.gene",
                      "http://identifiers.org/tcdb",
                      "http://identifiers.org/unigene",
                      "http://identifiers.org/uniparc",
                      "http://identifiers.org/vectorbase",
                      "http://identifiers.org/wormbase",
                      "http://identifiers.org/xenbase",
                      "http://identifiers.org/zfin",
                      "http://identifiers.org/uniprot"
                    ]
                  }
                ],
                "description": "A G-Links response object"
              }
            },
            "summary": "Aggregate information for given ID",
            "parameters": [
              {
                "x-valueType": [
                  "http://identifiers.org/agd",
                  "http://identifiers.org/arachnoserver",
                  "http://identifiers.org/biocyc",
                  "http://identifiers.org/cgd",
                  "http://identifiers.org/conoserver",
                  "http://identifiers.org/cygd",
                  "http://identifiers.org/dictybase.gene",
                  "http://identifiers.org/dip",
                  "http://identifiers.org/disprot",
                  "http://identifiers.org/drugbank",
                  "http://identifiers.org/echobase",
                  "http://identifiers.org/ecogene",
                  "http://identifiers.org/eggnog",
                  "http://identifiers.org/ena.embl",
                  "http://identifiers.org/ensembl",
                  "http://identifiers.org/hcvdb",
                  "http://identifiers.org/flybase",
                  "http://identifiers.org/genecards",
                  "http://identifiers.org/genefarm",
                  "http://identifiers.org/ncbigi",
                  "http://identifiers.org/hinv.protein",
                  "http://identifiers.org/hgnc",
                  "http://identifiers.org/hogenom",
                  "http://identifiers.org/hovergen",
                  "http://identifiers.org/hpa",
                  "http://identifiers.org/hssp",
                  "http://identifiers.org/ipi",
                  "http://identifiers.org/kegg",
                  "http://identifiers.org/maizegdb.locus",
                  "http://identifiers.org/merops",
                  "http://identifiers.org/mig",
                  "http://identifiers.org/omim",
                  "http://identifiers.org/mint",
                  "http://identifiers.org/ncbi",
                  "http://identifiers.org/oma.protein",
                  "http://identifiers.org/orphanet",
                  "http://identifiers.org/orthodb",
                  "http://identifiers.org/pdb",
                  "http://identifiers.org/peroxibase",
                  "http://identifiers.org/pharmgkb.gene",
                  "http://identifiers.org/protclsutdb",
                  "http://identifiers.org/reactome",
                  "http://identifiers.org/rebase",
                  "http://identifiers.org/refseq",
                  "http://identifiers.org/rgd",
                  "http://identifiers.org/sgd",
                  "http://identifiers.org/tair.gene",
                  "http://identifiers.org/tcdb",
                  "http://identifiers.org/unigene",
                  "http://identifiers.org/uniparc",
                  "http://identifiers.org/vectorbase",
                  "http://identifiers.org/wormbase",
                  "http://identifiers.org/xenbase",
                  "http://identifiers.org/zfin",
                  "http://identifiers.org/uniprot"
                ],
                "required": true,
                "name": "query",
                "in": "path",
                "description": "Any ID that can be converted to UniProt (see the [input list](http://link.g-language.org/input_list))"
              }
            ]
          }
        }
      }
    ],
    "openapi": "3.0.0",
    "servers": [
      {
        "url": "http://link.g-language.org/v2",
        "description": "Development server"
      }
    ],
    "info": {
      "title": "G-Links",
      "termsOfService": "http://link.g-language.org",
      "contact": {
        "x-role": "responsible developer",
        "email": "kotone@sfc.keio.ac.jp",
        "name": "Kotone Itaya"
      },
      "version": "2.0.0",
      "description": "Documentation of the G-Links gene centric data aggregation service. Learn more about [G-Links](http://link.g-language.org/)."
    },
    "~raw": "H4sIABcZzFkC_-2YTW_bMAyG_4rg0wq0TtDdetqAAkOxAhuwj0sRDLJMy2ysj0qylzTIfx9lJ1vRrXSxc05xrEfUS1oWX3hXRAgDhFhcibtd0YeOLoo2JX-1WHRo16W-6KTVvdRQuqAXw2VxLooaogroEzqb-WsYoHPegE1iilfsV4R5mdoceVcsdg89hO1-_KMhjb9eBmkg_V59czHIroevWw_5xlEG1hQXGyRulCB1nTW8NBqkaq07yHiZq9CprWIAxS6j3CvWUFs2Ro0qbSsZodRggQU9Oxp9cIkjQq8radcMAqp1WQqLuBmdoLV1mgOsLMFUHYvEGaJVQ10x4023nckkp6FkqOMM08hgGMSqCjVyStEOZX42gJbDtOU2YpvL7gxL0D4kiEO85EZj5HYYei7LNT12ZthIfARdV2XnVM9V3EBwngWQW8cZNOxkm2aeJRtcvuJBuuBbaSGxSGodu309P0pF2uDM_iYVweh1NXeu5IxUF_vELhlAquQMsMiMogBNhAcOYE_KyI4miWEu1aTYHHuLMwGIoH7FvacDUJnCTCF-umBmkA3YGeKxYbdhlpobwurvTv3ebsXNtUitTEJJKyoQ1Mno9EhQi-TEN4ufaap4EwGIAnGH1vdJdBjT6g3jC0bsR8bOzrI0HJfLBiD_C_DQY4Ca7qXQA92x1PkzMdqCyS0EiN7R6T85hsvlcvx9noD4cHFL60dxxIWr7qnyeZnNxfHm96dGYjfpoNnHyhD71GrMFXJ_Lv7EoCX6LsUS6-dhTo7l5FhOjuXkWE6O5eRYTo7lvxzLfrWnZlvE3hhJviA3fK0DaJlAoG1IisxOQNCV0DiAJTdT7Mc5ztNZTa89zXlbLsvl5EIa9y8XcU0vdv5aMQVzzWh1jsYil1UoGg2oRC2TFPKgIcO5haKCUtyCDFYYF0DIypFHujsEYH3SWTm6Bkr8IOXyqJX6c6JtO8olI-M6OLiNbGiw6kDU02eWqYEDnVLjx5q1S87Cu9iocg3oSqnK-_FoPFqsjyMgbpLcymxlioRpCn4QnOEEwcRPzZcpO_4jEBX8F2leVi44EgAA"
  },
  {
    "tags": [
      {
        "name": "drug"
      },
      {
        "name": "gene"
      },
      {
        "name": "annotation"
      },
      {
        "name": "translator"
      }
    ],
    "_id": "e3edd325c76f2992a111b43a907a4870",
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-10-12T15:27:10.698046",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/dgidb/openapi.yml"
    },
    "servers": [
      {
        "url": "http://dgidb.genome.wustl.edu/api/v1",
        "description": "Production server"
      }
    ],
    "openapi": "3.0.0",
    "paths": [
      {
        "path": "/interactions.json",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/dgidb/jsonld_context/dgidb_context.json",
                "x-responseValueType": [
                  {
                    "path": "matchedTerm.interactions.drugName",
                    "valueType": "http://identifiers.org/drugname/"
                  },
                  {
                    "path": "matchedTerm.interactions.genename",
                    "valueType": "http://identifiers.org/hgnc.symbol/"
                  },
                  {
                    "path": "matchedTerm.interactions",
                    "valueType": "http://biothings.io/concepts/drug_interaction/"
                  }
                ],
                "description": "A query response object with \"matchedTerm\" property"
              }
            },
            "summary": "return interactions for a gene with a drug, or a drug with a gene",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/hgnc.symbol/",
                  "http://identifiers.org/drugname/"
                ],
                "name": "interactions.json",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/hgnc.symbol/",
                    "template": "genes={{input}}"
                  },
                  {
                    "valueType": "http://identifiers.org/drugname/",
                    "template": "drugs={{input}}"
                  }
                ],
                "in": "query",
                "description": "Put gene names here, e.g. FLT1, CXCR4 "
              }
            ]
          }
        }
      }
    ],
    "info": {
      "version": "1.0",
      "termsOfService": "http://dgidb.genome.wustl.edu/contact",
      "contact": {
        "x-role": "responsible developer",
        "x-id": [
          "https://github.com/malachig"
        ],
        "name": "Malachi Griffith",
        "email": "help@dgidb.org"
      },
      "title": "DGIdb API",
      "description": "Drug gene interaction database"
    },
    "~raw": "H4sIAM6J31kC_51VYU_bMBD9K1Y-t0nZ9glp0lDREBMDNKppEiDkJNfEKLGDfS5UUf_77uyGBhgC9inxxX73_O7epU9MB1p2KtkXyed0ls6SiUhQVo4Cl32iZQv8qbS-SjYTsYtUoOFpRGptUKIy-mkcrdSukWhssrkmdAd2BXabwNuG99SI3X6WlZUq85SgTQvpvXfYpFD6jPhlqz1mVoIrrOpCEjp2bk3pC16JiBozdBJrxu-TTGkEK8MWl966cKwn8hienbREEh_ZWLjzykJJK7Qe_pHQo-CbC76cEzVY2gRplYrvJ4u9iZj_mf_6IpipK2poZciC6y4I4dAqHWRMVEC782DXvHmQ6iVb-vgwXcnGwyKiXA5aqRI0qqUi8qmxVVZXukjdus1Nk_GxV7ZxJTldllwHbL4yOFxA21GNIOqAu1UotPva90p3Hjcbhh7zeRed0A9jUGbxH6A78pvrUGkLriOtIFb702wWnnyrGP89Vq4PjcHwrUQqT7kA26ZPNOcEp1yMjxOaiHfgs5j6A_gvVXwrxWvIuTJYU_u5VJmsMLqADl3gfzM6nkUDPUx_XJydnhzODX16wAHGEY6V92mlsPa5J8sVvEFjWpg2O50fLC6mC6kroD6HbOf7KRmYSlIpcsA6a6WjfNHrGTd5U94UMVEMDqtHBzwz4YEIxhFDkYXJb6FAcU-0xNVYmatEdJYmnMV1smHfOd-2kjy3z62D3mox1k4sjRUyGjyAScECTUQI8-sQjtNvE628NNHmCpug-OHRcZmLg_PjMEuJhjtbXtB4UgW8Pev47kSHjw6vsaVV-eh-rkOsQRC-lY0salUFRw-j5GcMiiOrlkvay4A0kFQct9B03yIB6rI4ZKyJ7LeqqrwBUcIKGtYvDC2e2tsS7MUfxbPCHLJCQb2RqqKUKHPpWK-_L0Sy5m8GAAA="
  },
  {
    "tags": [
      {
        "name": "disease"
      },
      {
        "name": "ontology"
      },
      {
        "name": "annotation"
      },
      {
        "name": "translator"
      }
    ],
    "_id": "da745f0b6c95ce27e9769a4a0d8d0a15",
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-10-12T15:28:02.288079",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/disease%20ontology%20api/openapi.yml"
    },
    "servers": [
      {
        "url": "http://www.disease-ontology.org/api",
        "description": "Production server"
      }
    ],
    "openapi": "3.0.0",
    "paths": [
      {
        "path": "/metadata/{doid}",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-JSONLDContext": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/disease ontology api/jsonld_context/do_context.json",
                "x-responseValueType": [
                  {
                    "path": "xref",
                    "valueType": "http://identifiers.org/mesh/"
                  },
                  {
                    "path": "xref",
                    "valueType": "http://identifiers.org/ncit/"
                  },
                  {
                    "path": "xref",
                    "valueType": "http://identifiers.org/snomedct/"
                  },
                  {
                    "path": "xref",
                    "valueType": "http://identifiers.org/umls/"
                  },
                  {
                    "path": "xref",
                    "valueType": "http://identifiers.org/omim/"
                  }
                ],
                "description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
              }
            },
            "summary": "Returns xref related to a doid",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/doid/"
                ],
                "name": "doid",
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/doid/",
                    "template": "/metadata/{{input}}"
                  }
                ],
                "in": "path",
                "description": "DOID, e.g. DOID:678. "
              }
            ]
          }
        }
      }
    ],
    "info": {
      "version": "0.1.1",
      "termsOfService": "http://disease-ontology.org/faq/",
      "contact": {
        "x-role": "responsible developer",
        "email": "lschriml@som.umaryland.edu",
        "name": "Lynn Schriml"
      },
      "title": "Disease Ontology API",
      "description": "A RESTful API service is also offered to users of the Disease Ontology browser website to allow for programmatic access to the metadata found in the database."
    },
    "~raw": "H4sIAAKK31kC_6VUTWvbQBD9K4tOLcQrp4W25NQQ95AS4lCbXkIo69VI3rAfyu4otjH6751ZWXFCQynNSdJo5r2ZNx_7IrTgVWuKM1F8lFM5LU5EgapJZLjdF1454F-VSaASFP2JOBqDx2BDs3tpVd4HVGiCf2nHqHyyCkMs-jsiSRAfIR54umjZZ43YnpXlZrORB8bJSCJDbEpOlEIrSDqaNnNQ1E0MVaf5SwygA0GrcM3w-6J0gKpSqMp9FUzVZ2MDmJ-tipQhPqXyVDJ5vkI2m1_OTgTIRgp-Pfv0-YsU7GfybyblrwgPnYlQkQ1jB2TZTh6V7WC5axn-dqzVVODR1Ib4c4lMWxZ3OYBBIOESXEvCwZAfHr-eF7Y3vu2w75n8OdHfefq7LFWE1AafYJDrw3San5zAYP_5PPP9UCRBbyPU_8rnIK3LYSL-J9xrg28ITz44qPRbIDpn0xvCgzOuHAZzO_m-mF9fzS5otmGLY1CiqKg2sjG47lYdjbJmB49SB1deX5wvF5Ol8g1E46E8rtOEtoI61ZiEcVc6lWiWy8P6iHF9BDmV9yl4W_3SAy-NwPgq-c8rw34uCAeN10ibhSLUQqUUtMnrLcPqHjQm8Q53rdHK2t2RjnJw6b0Uy7VJxN2CivREgWsQGFph4REsA7KBxqyzBNSqnQ2qKvqe70PnnIo7TuMHYBd9Eqw3OfP0V4QilMhL2md_4-uQxxYN2tyJ2UGD-ZjU-c1lPm-c27xe0K0w-nnPXr05tXooOYqlUnq4GeONuNp5LxZ6HY2z7ANOmXzIbBqMX1NwsuM6rPKVhKorhs0OQ4qHBTMrC6JiSegcRx6ygm_joQtTeSpPX-3Oj2-LZd1ZLiyfPipHsN42BdK2hjjoxLOURrH_UGUVw4YcxAZWySBkYa0NG1GHKNoYGrqPjjquhdIaUmIHBhpvD_l1vhLGZytbVoQvqS2_AbUq7E9eBgAA"
  },
  {
    "tags": [
      {
        "name": "phenotype"
      },
      {
        "name": "variant"
      },
      {
        "name": "genotype"
      },
      {
        "name": "translator"
      }
    ],
    "_id": "3c5e198cfb362c654ed695727b7e02f0",
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-10-12T15:28:49.192044",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/ensembl/openapi.yml"
    },
    "servers": [
      {
        "url": "http://rest.ensembl.org",
        "description": "Production server"
      }
    ],
    "openapi": "3.0.0",
    "paths": [
      {
        "path": "/variation/human/{dbsnp}?genotypes=1",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-responseValueType": [
                  {
                    "path": "genotypes",
                    "valueType": "http://biothings.io/concepts/genotypes/"
                  }
                ],
                "description": "list of phenotypes related to the variant"
              }
            },
            "summary": "Uses a variant identifier (e.g. rsID) to return the variation genotypes",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/dbsnp/"
                ],
                "name": "dbsnp",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/dbsnp/",
                    "template": "/variation/human/{{input}}?genotypes=1"
                  }
                ],
                "in": "path",
                "description": "Put dbsnp ids here, e.g. rs56116432"
              }
            ]
          }
        }
      },
      {
        "path": "/variation/human/{dbsnp}?phenotypes=1",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-responseValueType": [
                  {
                    "path": "phenotypes",
                    "valueType": "http://biothings.io/concepts/phenotypes/"
                  }
                ],
                "description": "list of phenotypes related to the variant"
              }
            },
            "summary": "Uses a variant identifier (e.g. rsID) to return the variation phenotype",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/dbsnp/"
                ],
                "name": "dbsnp",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/dbsnp/",
                    "template": "/variation/human/{{input}}?phenotypes=1"
                  }
                ],
                "in": "path",
                "description": "Put dbsnp ids here, e.g. rs56116432"
              }
            ]
          }
        }
      }
    ],
    "info": {
      "version": "1.0",
      "termsOfService": "http://dgidb.genome.wustl.edu/contact",
      "contact": {
        "x-role": "responsible developer",
        "x-id": [
          "https://github.com/paul"
        ],
        "name": "Paul Flicek",
        "email": "help@ensembl.org"
      },
      "title": "Ensembl API",
      "description": "Ensembl REST API provides language agnostic bindings to Ensembl data."
    },
    "~raw": "H4sIADGK31kC_-1VTW8TMRD9K9aeQEp3kxZ6qIQAiSL1REQDlyoH73qya-G1jT0OraL8dzx2NpuEVAiJCxKnjZ35ePPek2dTGAuaW1ncsOKqnJbTYsIK5K2PFw-bQvMe6C_bgTb4ZKHYTth4veZOco3Hl-3ZUHRce8XRuGK7jD08uDW4XZvgFMV0iPamqhx4LEF76GtVGtcSJAG-cdKiNJoi586I0NCJ5UK5qOXYUclNUSVoFFB1oee62ojaa7t9O6Dzb2YpsAVMX8tdRIp7SA6-B-lAxBO6AGcgBGSpJpPCsw5cjIGyLZnzr69ns-tXV5cE3Dcd9Dy1SKTETI9O6pboKWQqRbApduAqlaWLx4s1VwEWOfFhIEgK0ChXMoIlfqoUXxXLlEHAI4EL6G2kG_I0OJ7OULOR2gbcHpMzIXnH5r_pvV0mAaJ01kTlsgiX02n6njCnpEdmVmxvKs8cEDrB0DDsgA2-2g2Ua349pGKTSTuwm38OcS0NdpFwX0pTNUY3YNFX-7SEnbTwoe-5e6LML3ECxgcYbJyZvdhJfPfhJYF1gMHpEXNy5Igo1X3WiuP8_734qxeP2PlXzDhW-TM3jnl_344Hb_c267wy2QMSVYJ2m99a9n5-l55_cL3_tLqPD6tsDrGLVoq6JHv3UP4IHlUJItAUyJtE0PCTyj9eSLF3io_prcQu1GVj-sryoJJHBpvN4wX7qGK_b1Qn2lTmlQDKvjvZBVEFk4Hv1JC1AiZgDSpuM5fMTLtlp_AsL7UT3YeZP9_eL2hwZp1ZR2Y9U1y3gbfAeKuNR9mwWmpBkhHFQ57gyMvI6E-yJYinQgcAAA=="
  },
  {
    "tags": [
      {
        "name": "protein"
      },
      {
        "name": "variant"
      },
      {
        "name": "annotation"
      },
      {
        "name": "translator"
      }
    ],
    "_id": "43af91b3d7cae43591083bff9d75c6dd",
    "_meta": {
      "github_username": "newgene",
      "timestamp": "2017-10-12T15:29:06.027142",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/ebi_proteins/openapi.yml"
    },
    "servers": [
      {
        "url": "https://www.ebi.ac.uk/proteins/api",
        "description": "Production server"
      }
    ],
    "openapi": "3.0.0",
    "paths": [
      {
        "path": "/features/{accession}?categories=MOLECULAR_PROCESSING",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-responseValueType": [
                  {
                    "path": "features",
                    "valueType": "http://biothings.io/concepts/molecular_processing/"
                  }
                ],
                "description": "MOLECULAR_PROCESSINGs related to the accession"
              }
            },
            "summary": "Get UniProt protein sequence features (MOLECULAR_PROCESSING) by accession",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/uniprot/"
                ],
                "name": "accession",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/uniprot/",
                    "template": "/features/{{input}}?categories=MOLECULAR_PROCESSING"
                  }
                ],
                "in": "path",
                "description": "Uniprot accession number for proteins, e.g. P51587."
              }
            ]
          }
        }
      },
      {
        "path": "/features/{accession}?categories=TOPOLOGY",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-responseValueType": [
                  {
                    "path": "features",
                    "valueType": "http://biothings.io/concepts/topology/"
                  }
                ],
                "description": "TOPOLOGYs related to the accession"
              }
            },
            "summary": "Get UniProt protein sequence features (TOPOLOGY) by accession",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/uniprot/"
                ],
                "name": "accession",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/uniprot/",
                    "template": "/features/{{input}}?categories=TOPOLOGY"
                  }
                ],
                "in": "path",
                "description": "Uniprot accession number for proteins, e.g. P51587."
              }
            ]
          }
        }
      },
      {
        "path": "/proteins/interaction/{accession}",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-responseValueType": [
                  {
                    "path": "interactions.id",
                    "valueType": "http://identifiers.org/uniprot/"
                  },
                  {
                    "path": "interactions.gene",
                    "valueType": "http://identifiers.org/hgnc.symbol/"
                  }
                ],
                "description": "A query response object with \"hits\" property"
              }
            },
            "summary": "Get Uniprot Interactions by Accession",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/uniprot/"
                ],
                "name": "accession",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/uniprot/",
                    "template": "/proteins/interaction/{{input}}"
                  }
                ],
                "in": "path",
                "description": "Uniprot Accession number for proteins, e.g. P51587."
              }
            ]
          }
        }
      },
      {
        "path": "/features/{accession}?categories=PTM",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-responseValueType": [
                  {
                    "path": "features",
                    "valueType": "http://biothings.io/concepts/ptm/"
                  }
                ],
                "description": "PTMs related to the accession"
              }
            },
            "summary": "Get UniProt protein sequence features (PTM) by accession",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/uniprot/"
                ],
                "name": "accession",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/uniprot/",
                    "template": "/features/{{input}}?categories=PTM"
                  }
                ],
                "in": "path",
                "description": "Uniprot accession number for proteins, e.g. P51587."
              }
            ]
          }
        }
      },
      {
        "path": "/variation/{accession}",
        "pathitem": {
          "get": {
            "responses": {
              "200": {
                "x-responseValueType": [
                  {
                    "path": "features.xrefs.id",
                    "valueType": "http://identifiers.org/dbsnp/"
                  }
                ],
                "description": "Variants related to the UniProt accession number"
              }
            },
            "summary": "Get natural variants by UniProt accession",
            "parameters": [
              {
                "required": true,
                "x-valueType": [
                  "http://identifiers.org/uniprot/"
                ],
                "name": "accession",
                "schema": {
                  "type": "string"
                },
                "x-requestTemplate": [
                  {
                    "valueType": "http://identifiers.org/uniprot/",
                    "template": "/variation/{{input}}"
                  }
                ],
                "in": "path",
                "description": "UniProt accession"
              },
              {
                "required": false,
                "x-valueType": [
                  "http://identifiers.org/sourcetype/"
                ],
                "name": "sourcetype",
                "schema": {
                  "type": "string",
                  "enum": [
                    "uniprot",
                    "large_scale_study",
                    "mixed"
                  ]
                },
                "in": "query",
                "description": "Filter by the sourceType for variants: uniprot, large_scale_study and mixed. Comma separated values accepted up to 2."
              },
              {
                "required": false,
                "x-valueType": [
                  "http://identifiers.org/consequencetype/"
                ],
                "name": "consequencetype",
                "schema": {
                  "type": "string",
                  "enum": [
                    "missense",
                    "stop gained",
                    "stop lost"
                  ]
                },
                "in": "query",
                "description": "Filter by consequenceType for variants: missense, stop gained or stop lost. Comma separated values accepted up to 2."
              }
            ]
          }
        }
      }
    ],
    "info": {
      "version": "1.0",
      "termsOfService": "https://groups.google.com/d/forum/ebi-proteins-api",
      "contact": {
        "x-role": "responsible organization",
        "x-id": [
          "http://orcid.org/0000-0001-7532-6898"
        ],
        "name": "EBI",
        "email": "tk2@ebi.ac.uk"
      },
      "title": "EBI Proteins API",
      "description": "The proteins service provides an interface for accessing UniProtKB entries and UniProtKB isoform entries. The features service provides protein functional annotations from UniProt Knowledgebase (UniProtKB) protein entries. The variation, proteomics and antigen services provide annotations imported and mapped from Large Scale data Sources (LSS) such as 1000Genomes, ExAC, PeptideAtlas, MaxQB and HPA along with UniProtKB annotations for these feature types (if applicable). The Proteins service returns XML, JSON and FASTA formatted results. Features, variation, proteomics and antigen all return XML, JSON and GFF formatted results."
    },
    "~raw": "H4sIAEKK31kC_-1YbW_bNhD-Kwd9agBbSlJkzQIMmxMkWVanVuu02NAGAS2dZa4SqZJUYs_wf--RevFrFgdp0GGogdghRd5z99zDI8WpJ3MULOfeEXgv_V1_12uBZ1iiqePj1BMsQ_soV9IgF96sBfPOW6Y4E2a5kwkhDTNcrgw2igmdMiOVN7smDI3qFlUFU6jUjhkZk-ujILi7u_NxwH0W-cXnoMLWgXWTZsaoI8VzB0GTQiXjIrItKG2W9nNmRtb61AuGyEyhUAdTFkWoNQ2d_Roxg4lUHPUvl73u6cn7bufdTfiud3La71-8OXczEzTuN2eKojCNuwq_FFxhTC2jClz36b3g1mto8EAU2QAVDKWCOp4WoJ_4EB7sHRy-8m1kOhphxhykmeSONm0UF4ml0uPOtI3Ljm34riFs57h9y9ICr8rJHx2hxCePURg-5BSAL1USFKV7gXft5thwUJsrzHJKEJYxmnlrkcEpF3lhZg_z17L6mPvyoCuza5c2Asml0Fimbn931_2u0LsJUINC628MRoIZIawQUxv-sEjQtKSTTNYR3uf3gEszokxon8sgkiLC3OggkylGRcrUDQXh4ETiQrH50kWWMTWxRs7RAGkitJqo0k9iJdbJDtTQ8GJTXDswmCzE4iw_qOirXtjr9s7_-qHi7VXccPacyq1BvotajcxlKpPJExRa-79RlU2h5oJUxlxNXlTot1Fj53-ixs1s1cp8VhV2gJxTE6gHgxz8jZGBO25G8MkbcaM_eZbTHJWZbKXIhSBIdPHj3W_BPcYSFLituVEiIl9PsoFM_0XkTkYXCxhWzJ1Hltjw6vJHdd2-ulq6nlPSZP-71NTcZE8op-T1xkrqTtbfvHyGS3L7T4tpgYCnVMTFFxAtCxWhC3OdnTOeEpc2FVY45VCL4xZj9Z6jj6Cy3QI68iV4oyOW0rcpYkqhiCHjY4x9OJGkA0q3zZGVo_NaO-Zz2y5yq9D91eWMtP4diRWKfbyGYzsdjKPy3qS5-u65xdPoYshSjdvnbM4XpW2JyciuolLLD9K5MHYDnxnXGoX1StPhBBLGBfFDQ1wzldo8nc0awz2fozRNi_LsZK5QZhndurR9qOhaLW9rK7raQB5V7fyxwuFjdux4oEV-X8kT1ihLmwxbBawXntms5HYoy8rDTeoQT48vIKw2PuiEF-4qAlWme8M-vdnzCBcvCRIli5yOB1ImKfqRzII4IHUVWYAD3q430HZ1aUAJMLTbO8Bxm8eLyZIq4rELbpc-bfrba786eLnf_unw50MnjVr55KE1Rhrj7sLCfN7_rbmoqHiXZTAV_3yQ0vFKJUzwf5pbEc_efFTZ3SuvXFbfEyi_dQjuWoOCtx23lA7SvgB3RBqyqFxRFbciqdl-fQyUNrvzusI07-Va0oSsfuqDRWo2pDWkeu8aFsIdlSi38wseDUMlsybBr4W8SzFOcMDoSPmiwdxprCyBNiW-VT6XGY9Kb0k5nE59tTe6dmcJmme5VHY1uMLL8pz-de50bcmEvi2ZEDPDoO8KGe223X5_B3QRjYBp2KM0n6OQGdIh63TcOWlBSAWFYDomZdR3ycZvj53138MOsFQSu-6APCdziQpKA61K3bAJdqETKh8CeZfyiJEUdsrYw9XUKqQp1P7zstuCP_q9Nw74rNO_6ljLGTM2VEpRkRri76xKWGsLFlmaVuZXrJ-fnW2wTavzKxyHFzcVFAAA"
  },
  {
    "tags": [
      {
        "name": "environment"
      },
      {
        "name": "exposure"
      },
      {
        "name": "query"
      },
      {
        "name": "translator"
      }
    ],
    "_id": "5edc9ba63c1317cba3e2894ab2a064c3",
    "_meta": {
      "github_username": "newgene",
      "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/GT_exposures_api/exposures_openapi.yml",
      "timestamp": "2017-10-27T15:51:07.492228"
    },
    "servers": [
      {
        "url": "https://exposures.renci.org/v1"
      }
    ],
    "openapi": "3.0.0",
    "paths": [
      {
        "path": "/cmaq/getValues",
        "pathitem": {
          "get": {
            "tags": [
              "default"
            ],
            "responses": {
              "400": {
                "description": "Invalid parameter"
              },
              "404": {
                "description": "No values found"
              },
              "500": {
                "description": "Server error"
              },
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/inline_response_200_1"
                    }
                  }
                },
                "description": "OK"
              }
            },
            "operationId": "controllers.default_controller.cmaq_get_values_get",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "exposureType",
                "in": "query",
                "description": "exposure type"
              },
              {
                "required": true,
                "schema": {
                  "format": "date",
                  "type": "string"
                },
                "name": "startDate",
                "in": "query",
                "description": "start date of range"
              },
              {
                "required": true,
                "schema": {
                  "format": "date",
                  "type": "string"
                },
                "name": "endDate",
                "in": "query",
                "description": "end date of range"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "latLon",
                "in": "query",
                "description": "latitude,longitude - multiples separated by ;"
              },
              {
                "required": false,
                "schema": {
                  "type": "string",
                  "default": "day"
                },
                "name": "resolution",
                "in": "query",
                "description": "temporal resolution - default=day"
              },
              {
                "required": false,
                "schema": {
                  "type": "string",
                  "default": "max"
                },
                "name": "aggregation",
                "in": "query",
                "description": "numerical aggregation - default=max"
              },
              {
                "required": false,
                "schema": {
                  "type": "string",
                  "default": "utc"
                },
                "name": "utcOffset",
                "in": "query",
                "description": "timezone offset from UTC (utc, eastern, central, mountain, pacific) - default=utc"
              }
            ],
            "summary": "get values for exposure type at location for date range",
            "description": "get values for exposure type at location for date range\n@param  - {string} exposureType - unique exposure type in CMAQ\n- {date} startDate - start date of exposure\n- {date} endDate - end date of exposure\n- {string} latLon - latitude, longitude of exposure (multiples to be\nseperated by semicolon \";\")\n- {string} - resolution - temporal resolution (hour, day, 7day, 14day), default day\n- {string} - aggregation - numerical aggrigation (max, avg), default max\n- {string} - utcOffset - timezone offset from UTC (utc, eastern, central, mountain, pacific) - default=utc\n  \n@return \n- {JSON object} values - returns array of exposure values based on date range and location\n"
          }
        }
      },
      {
        "path": "/cmaq/getScores",
        "pathitem": {
          "get": {
            "tags": [
              "default"
            ],
            "responses": {
              "400": {
                "description": "Invalid parameter"
              },
              "404": {
                "description": "No scores found"
              },
              "500": {
                "description": "Server error"
              },
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/inline_response_200_2"
                    }
                  }
                },
                "description": "OK"
              }
            },
            "operationId": "controllers.default_controller.cmaq_get_scores_get",
            "parameters": [
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "exposureType",
                "in": "query",
                "description": "exposure type"
              },
              {
                "required": true,
                "schema": {
                  "format": "date",
                  "type": "string"
                },
                "name": "startDate",
                "in": "query",
                "description": "start date of range"
              },
              {
                "required": true,
                "schema": {
                  "format": "date",
                  "type": "string"
                },
                "name": "endDate",
                "in": "query",
                "description": "end date of range"
              },
              {
                "required": true,
                "schema": {
                  "type": "string"
                },
                "name": "latLon",
                "in": "query",
                "description": "latitude,longitude - multiples separated by ;"
              },
              {
                "required": false,
                "schema": {
                  "type": "string",
                  "default": "day"
                },
                "name": "resolution",
                "in": "query",
                "description": "temporal resolution - default=day"
              },
              {
                "required": false,
                "schema": {
                  "type": "string",
                  "default": "max"
                },
                "name": "aggregation",
                "in": "query",
                "description": "numerical aggregation - default=max"
              },
              {
                "required": false,
                "schema": {
                  "type": "string",
                  "default": "utc"
                },
                "name": "utcOffset",
                "in": "query",
                "description": "timezone offset from UTC (utc, eastern, central, mountain, pacific) - default=utc"
              }
            ],
            "summary": "get score for exposure type at location for date range",
            "description": "get score for exposure type at location for date range\n@param  - {string} exposureType - unique exposure type in CMAQ\n- {date} startDate - start date of exposure\n- {date} endDate - end date of exposure\n- {string} latLon - latitude, longitude of exposure (multiples to be seperated by semicolon \";\")\n- {string} - resolution - temporal resolution (hour, day, 7day, 14day), default day\n- {string} - aggregation - numerical aggrigation (max, avg), default max\n- {string} - utcOffset - timezone offset from UTC (utc, eastern, central, mountain, pacific) - default=utc\n\n@return \n- {JSON object} scores - returns array of exposure scores based on date range and location\n"
          }
        }
      },
      {
        "path": "/cmaq",
        "pathitem": {
          "get": {
            "tags": [
              "default"
            ],
            "operationId": "controllers.default_controller.cmaq_get",
            "responses": {
              "400": {
                "description": "Invalid parameter"
              },
              "404": {
                "description": "No exposure types found"
              },
              "500": {
                "description": "Server error"
              },
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/inline_response_200"
                    }
                  }
                },
                "description": "OK"
              }
            },
            "summary": "list of CMAQ exposures",
            "description": "list of CMAQ exposures\n@param \n- None\n\n@return \n- {JSON object} cmaq - returns array of exposure objects available from\n"
          }
        }
      }
    ],
    "info": {
      "contact": {
        "email": "stealey@renci.org",
        "name": "Michael J. Stealey",
        "url": "https://github.com/renci/nih-exposures-api"
      },
      "version": "0.0.1",
      "license": {
        "name": "MIT",
        "url": "http://opensource.org/licenses/MIT"
      },
      "termsOfService": "None",
      "title": "Environmental Exposures API",
      "description": "Environmental Exposures API"
    },
    "components": {
      "parameters": {
        "cmaq_endDate": {
          "required": true,
          "schema": {
            "format": "date",
            "type": "string"
          },
          "name": "endDate",
          "in": "query",
          "description": "end date of range"
        },
        "cmaq_latLon": {
          "required": true,
          "schema": {
            "type": "string"
          },
          "name": "latLon",
          "in": "query",
          "description": "latitude,longitude - multiples separated by ;"
        },
        "cmaq_utcOffset": {
          "required": false,
          "schema": {
            "type": "string",
            "default": "utc"
          },
          "name": "utcOffset",
          "in": "query",
          "description": "timezone offset from UTC (utc, eastern, central, mountain, pacific) - default=utc"
        },
        "cmaq_exposureType": {
          "required": true,
          "schema": {
            "type": "string"
          },
          "name": "exposureType",
          "in": "query",
          "description": "exposure type"
        },
        "cmaq_resolution": {
          "required": false,
          "schema": {
            "type": "string",
            "default": "day"
          },
          "name": "resolution",
          "in": "query",
          "description": "temporal resolution - default=day"
        },
        "cmaq_aggregation": {
          "required": false,
          "schema": {
            "type": "string",
            "default": "max"
          },
          "name": "aggregation",
          "in": "query",
          "description": "numerical aggregation - default=max"
        },
        "cmaq_startDate": {
          "required": true,
          "schema": {
            "format": "date",
            "type": "string"
          },
          "name": "startDate",
          "in": "query",
          "description": "start date of range"
        }
      },
      "schemas": {
        "inline_response_200_cmaq": {
          "type": "object",
          "properties": {
            "exposureType": {
              "type": "string"
            },
            "aggregation": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "exposureUnit": {
              "type": "string"
            },
            "resolution": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "endDate": {
              "format": "date",
              "type": "string"
            },
            "startDate": {
              "format": "date",
              "type": "string"
            }
          }
        },
        "inline_response_200_2": {
          "type": "object",
          "properties": {
            "scores": {
              "items": {
                "$ref": "#/components/schemas/inline_response_200_2_scores"
              },
              "type": "array"
            }
          }
        },
        "inline_response_200": {
          "type": "object",
          "properties": {
            "cmaq": {
              "items": {
                "$ref": "#/components/schemas/inline_response_200_cmaq"
              },
              "type": "array"
            }
          }
        },
        "inline_response_200_2_scores": {
          "type": "object",
          "properties": {
            "score": {
              "type": "string"
            },
            "dateTime": {
              "format": "date-time",
              "type": "string"
            },
            "latLon": {
              "type": "string"
            }
          }
        },
        "inline_response_200_1": {
          "type": "object",
          "properties": {
            "values": {
              "items": {
                "$ref": "#/components/schemas/inline_response_200_1_values"
              },
              "type": "array"
            }
          }
        },
        "inline_response_200_1_values": {
          "type": "object",
          "properties": {
            "dateTime": {
              "format": "date-time",
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "latLon": {
              "type": "string"
            }
          }
        }
      }
    },
    "~raw": "H4sIAOtV81kC_-1ZXW_bNhT9K4S2hwRQLCfLUCDFgBZdH9ItyYqke5kHg5auZBYSqZCUUS_wf98lKcmUIid2kqFBlj7UNnk_Di95D4-Um4DxVAQn5CaIBdc01vZ7JXP8DOZal-okijKm59VsFIsiksBjFnE2P4BvpVCVBHVASxaEJICCMuumNNAclu-s7UjIzMxyWoCZPGPxnEJOPo3IpbMLVji9AKmY4MZiPBqPDo2LZjq3Ph_5gknBC0CEOfnYJCbv_zg1djmLgSvoI0fgosQJUckYDIyoNlTR2elVBxP-NCASULFkpa6B3JNWgyzURXoJcoFxjcO54GADKRzDBeHYX7eK2dZt1NYnWhwGq7_Rz-A11UTzn7AKY5OmpHqu7NqiuKDXUQb6T5pX4Mbwl_0sqcTF6DaphOuKSUjwl5YVeItt8l8tSzDxmV3rdQVyGdyuQWNNdG2u4jlutM1ph-x-S8azYIUrvyux0lTqX6neIqs1JQnaEpESSXnWz50KWVCz9CCpI-6IBniyHRY0_G-R5FT_jqnuBYJ2TFcJhLngmf1GDkhR5ZqVOZ5KBeYMaEjIbEne7rhVKc2VjwmPp8grm_leXBqKUkjskLUTAksgpYjtl4Que1jqGVex5TYF66OjWSYho9vB41UBksWIz3PzABb022aA9eSuACsdX6Spwt68v3qsgH-QN_B4GQeSSlGQL1cfyB4GCQlQZFPJQ4LMpbHIISlEhXzEcKikMUtZvO8tBn02L6aevLWYmnmkrcypWY-9DKTIc-STUR1huh4bGSKaIvVMF5aJzFcbmWaWftqkJrKqioLi0jEqmhHnQbBrSIdbCNUkF7HbHTNre65tuF7VHhhpwt9ZoiRYshu3_hXxCRHHK85wr3ohGScfzt5_nnD0M-FWpGUzdOnSVePpGddkg6Y-m3QMGzSODdCybXey7nfPieytW18LMsMoyADQMoCCgsUCXckkeDsJ9jtJDrq9OtTBe3O8N0PEugzJG_v_4TF-7IfNWTNTvaDdBus2HqvH97ClQkIXmRcJh3qR2gYy6J66QyacEDwJEnQlsTwm86fLi3MiZl8h1qvmYJkiGQtFqJR02Sl-bTKjCquNq1ofMUJxh5vjN7H8hFUthdEdtiGPx-O6MTsn-pRjTJaQ9iK3QuLnYeNLqy8ISCmc3VFtZ3oUy2C_07JEwWNxRF-VdbzxmeFHCakJ9kOEwg4Bop-K3LyKGM8Zh2kDfYoJpihSVgMy6eI3C-F4fDwE9VysG7XiiQlhrFstcxkL-aplXrXMq5Z51TLfV8soy0S7aBnr8RRSZvdAL1nJkFchs62QuUvGuPN8p4ypTf5fMubogTKmLtZtGdMRL_2LjiltSm56rq27arvX7Jp5a3T3Tpokd-6jM8SZBWU5neVgz5bbtvuIbBhh8GAefUFH5YEHpUO4_oFZedtx46m39jVjYC_jvrrtjrrLtzOEbMEVsqwpjdnd9eq8Crjvgw1RX31OfEuz7ZpB44szg7IrdCLxihUwoB0PDNkN3dBhKxI3aLl2zB1q6zGEuu28PuJWmm-naMPeY8SGtTY2XzjTG21qHb51Yl_82d3BC0xtit4M2fa3I56y3dV7-0IP1bit_TrlzjRsYzwKGT6QDmBbrF-OPwLdYf1q67EIpx6cHtAHdo8NuGmXn6a1jjYywaPr2nLNlnVd2b-AeO8D3OGbrp9KTl7S44shb7M8n0mey3O_Q9anrGf-aOtAe23x7N5dOIQ9Kn_OrzMc4O41-5zelNUd1L_Tv8tbRPz3L2KjZoZjHwAA"
  }
]